%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, April 27, 2011 11:34:45 AM CDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.00000 w
1.00000 0 0 RG
58.0000 5.00784 326.482 382.992 rc
newpath
60.0000 214.185 m
68.3585 77.9902 l
73.3659 74.0480 l
80.0230 70.6495 l
86.5620 68.2702 l
93.6774 66.2693 l
101.110 64.5858 l
108.694 63.1553 l
116.324 61.9247 l
123.933 60.8536 l
131.478 59.9120 l
138.929 59.0775 l
146.265 58.3334 l
153.470 57.6665 l
160.535 57.0669 l
167.451 56.5266 l
174.215 56.0391 l
180.824 55.5991 l
187.276 55.2021 l
193.573 54.8442 l
199.714 54.5221 l
205.701 54.2330 l
211.396 53.9801 l
216.955 53.7534 l
222.379 53.5512 l
227.671 53.3714 l
232.834 53.2126 l
237.868 53.0730 l
242.778 52.9514 l
247.566 52.8463 l
252.234 52.7565 l
256.785 52.6809 l
261.222 52.6185 l
265.546 52.5684 l
269.762 52.5296 l
273.871 52.5015 l
277.875 52.4832 l
281.778 52.4743 l
285.580 52.4740 l
289.285 52.4820 l
292.895 52.4977 l
296.411 52.5207 l
299.835 52.5507 l
303.170 52.5874 l
306.417 52.6305 l
309.578 52.6797 l
312.655 52.7349 l
315.648 52.7959 l
318.560 52.8624 l
321.393 52.9346 l
324.147 53.0121 l
326.824 53.0950 l
329.425 53.1833 l
331.951 53.2770 l
334.404 53.3759 l
336.785 53.4803 l
339.095 53.5901 l
341.334 53.7055 l
343.504 53.8266 l
345.606 53.9534 l
347.641 54.0862 l
349.609 54.2251 l
351.512 54.3705 l
353.349 54.5225 l
355.123 54.6814 l
356.833 54.8476 l
358.480 55.0215 l
360.066 55.2034 l
361.590 55.3939 l
363.053 55.5934 l
364.456 55.8026 l
365.800 56.0221 l
367.084 56.2527 l
368.309 56.4953 l
369.477 56.7507 l
370.586 57.0202 l
371.639 57.3048 l
372.634 57.6061 l
373.573 57.9256 l
374.456 58.2653 l
375.283 58.6272 l
376.055 59.0137 l
376.771 59.4279 l
377.433 59.8730 l
378.041 60.3530 l
378.595 60.8725 l
379.096 61.4369 l
379.543 62.0527 l
379.939 62.7272 l
380.283 63.4690 l
380.577 64.2875 l
380.822 65.1927 l
381.020 66.1938 l
381.175 67.2972 l
381.290 68.5025 l
381.371 69.7978 l
381.420 71.0246 l
381.451 72.2628 l
381.468 73.4714 l
381.478 74.6055 l
381.482 75.6200 l
381.482 76.4430 l
381.482 77.1269 l
381.480 77.6355 l
381.479 77.8832 l
381.478 77.9583 l
381.477 77.8947 l
381.476 77.7241 l
381.476 77.4720 l
381.476 77.1584 l
381.476 76.7978 l
381.476 76.3999 l
381.476 75.9705 l
381.476 75.5129 l
381.477 75.0284 l
381.478 74.5170 l
381.478 73.9783 l
381.479 73.4114 l
381.480 72.8154 l
381.481 72.1896 l
381.482 71.5339 l
381.482 70.8489 l
381.482 70.1355 l
381.482 69.3965 l
381.480 68.6349 l
381.476 67.8551 l
381.470 67.0626 l
381.461 66.2642 l
381.449 65.4676 l
381.432 64.6816 l
381.410 63.9158 l
381.384 63.1813 l
381.353 62.4903 l
381.318 61.8572 l
381.283 61.3001 l
381.251 60.8433 l
381.229 60.5203 l
381.225 60.3791 l
381.245 60.4811 l
381.287 60.8598 l
381.344 61.5358 l
381.402 62.5043 l
381.447 63.7576 l
381.475 65.3051 l
381.482 67.1683 l
381.472 69.3993 l
381.448 72.0627 l
381.417 75.1771 l
381.386 78.7187 l
381.360 82.6059 l
381.340 86.7323 l
381.327 91.0074 l
381.318 95.3736 l
381.313 99.7963 l
381.311 104.258 l
381.312 108.751 l
381.315 113.272 l
381.320 117.822 l
381.329 122.403 l
381.340 127.021 l
381.355 131.680 l
381.373 136.387 l
381.394 141.150 l
381.418 145.976 l
381.442 150.873 l
381.465 155.859 l
381.480 160.944 l
381.480 166.236 l
381.447 172.108 l
381.394 176.396 l
381.357 178.315 l
381.347 178.594 l
381.352 178.111 l
381.363 177.253 l
381.378 176.170 l
381.394 174.947 l
381.409 173.634 l
381.424 172.260 l
381.437 170.848 l
381.448 169.410 l
381.457 167.958 l
381.465 166.500 l
381.471 165.042 l
381.476 163.590 l
381.479 162.148 l
381.481 160.720 l
381.482 159.310 l
381.482 157.921 l
381.482 156.555 l
381.481 155.220 l
381.480 153.921 l
381.479 152.653 l
381.477 151.417 l
381.476 150.214 l
381.474 149.046 l
381.473 147.915 l
381.471 146.821 l
381.470 145.764 l
381.468 144.745 l
381.467 143.764 l
381.466 142.821 l
381.465 141.915 l
381.464 141.047 l
381.464 140.215 l
381.464 139.421 l
381.463 138.665 l
381.463 137.949 l
381.463 137.277 l
381.463 136.656 l
381.464 136.095 l
381.464 135.614 l
381.465 135.239 l
381.466 135.017 l
381.468 135.027 l
381.470 135.376 l
381.473 136.245 l
381.477 137.949 l
381.481 140.977 l
381.482 145.675 l
381.470 151.838 l
381.436 157.527 l
381.384 162.136 l
381.306 166.529 l
381.200 170.723 l
381.063 174.764 l
380.897 178.718 l
380.704 182.681 l
380.492 186.824 l
380.313 190.761 l
380.201 194.929 l
380.254 199.225 l
380.477 202.714 l
380.725 205.058 l
380.930 206.667 l
381.108 207.993 l
381.250 209.104 l
381.356 210.043 l
381.427 210.833 l
381.466 211.484 l
381.481 211.944 l
381.482 212.293 l
381.477 212.546 l
381.470 212.723 l
381.463 212.842 l
381.457 212.918 l
381.452 212.963 l
381.448 212.987 l
381.445 212.996 l
381.444 212.993 l
381.442 212.982 l
381.441 212.964 l
381.441 212.941 l
381.441 212.914 l
381.441 212.882 l
381.441 212.846 l
381.442 212.805 l
381.443 212.759 l
381.444 212.709 l
381.446 212.652 l
381.448 212.588 l
381.451 212.517 l
381.453 212.437 l
381.456 212.347 l
381.460 212.246 l
381.464 212.131 l
381.468 212.001 l
381.472 211.854 l
381.475 211.688 l
381.479 211.500 l
381.481 211.288 l
381.482 211.048 l
381.482 210.777 l
381.479 210.474 l
381.474 210.136 l
381.465 209.762 l
381.452 209.352 l
381.436 208.913 l
381.418 208.455 l
381.398 208.004 l
381.380 207.603 l
381.368 207.326 l
381.369 207.267 l
381.385 207.491 l
381.414 208.003 l
381.448 208.746 l
381.475 209.626 l
381.481 210.560 l
381.460 211.408 l
381.404 212.237 l
381.308 213.034 l
381.169 213.792 l
380.984 214.509 l
380.751 215.187 l
380.469 215.829 l
380.136 216.437 l
379.752 217.013 l
379.316 217.562 l
378.829 218.086 l
378.290 218.586 l
377.699 219.065 l
377.055 219.525 l
376.359 219.968 l
375.610 220.395 l
374.809 220.808 l
373.954 221.207 l
373.047 221.594 l
372.086 221.970 l
371.072 222.335 l
370.004 222.691 l
368.883 223.038 l
367.707 223.378 l
366.478 223.709 l
365.195 224.034 l
363.856 224.353 l
362.463 224.666 l
361.015 224.973 l
359.511 225.275 l
357.952 225.573 l
356.336 225.867 l
354.664 226.157 l
352.935 226.444 l
351.148 226.727 l
349.303 227.007 l
347.400 227.285 l
345.438 227.561 l
343.416 227.835 l
341.334 228.107 l
339.191 228.377 l
336.987 228.646 l
334.720 228.915 l
332.391 229.182 l
329.997 229.449 l
327.539 229.716 l
325.015 229.983 l
322.425 230.250 l
319.767 230.518 l
317.041 230.786 l
314.245 231.056 l
311.378 231.327 l
308.439 231.599 l
305.426 231.873 l
302.339 232.150 l
299.176 232.429 l
295.935 232.710 l
292.615 232.995 l
289.215 233.283 l
285.731 233.575 l
282.163 233.871 l
278.509 234.173 l
274.767 234.479 l
270.935 234.791 l
267.010 235.109 l
262.990 235.433 l
258.873 235.766 l
254.657 236.106 l
250.339 236.455 l
245.916 236.814 l
241.386 237.184 l
236.746 237.565 l
231.993 237.959 l
227.125 238.368 l
222.138 238.791 l
217.032 239.232 l
211.802 239.691 l
206.447 240.172 l
200.965 240.675 l
195.354 241.205 l
189.616 241.762 l
183.903 242.337 l
178.078 242.944 l
172.147 243.588 l
166.116 244.274 l
159.996 245.005 l
153.800 245.788 l
147.546 246.628 l
141.257 247.532 l
134.963 248.507 l
128.700 249.561 l
122.513 250.700 l
116.454 251.932 l
110.581 253.261 l
104.957 254.692 l
99.9548 256.130 l
95.2925 257.649 l
91.0030 259.244 l
87.1054 260.907 l
83.6044 262.629 l
80.4916 264.401 l
77.7475 266.213 l
75.3450 268.057 l
73.2527 269.927 l
71.4376 271.815 l
69.8676 273.719 l
68.5120 275.634 l
67.3430 277.557 l
66.3357 279.487 l
65.4679 281.421 l
64.7204 283.359 l
64.0764 285.299 l
63.5214 287.241 l
63.0431 289.185 l
62.6306 291.129 l
62.2747 293.073 l
61.9675 295.018 l
61.7023 296.962 l
61.4733 298.906 l
61.2753 300.850 l
61.1042 302.793 l
60.9562 304.735 l
60.8281 306.675 l
60.7173 308.615 l
60.6214 310.553 l
60.5384 312.490 l
60.4664 314.425 l
60.4041 316.358 l
60.3501 318.289 l
60.3033 320.218 l
60.2628 322.144 l
60.2276 324.068 l
60.1971 325.988 l
60.1707 327.905 l
60.1478 329.818 l
60.1279 331.727 l
60.1107 333.632 l
60.0957 335.531 l
60.0828 337.425 l
60.0715 339.313 l
60.0618 341.193 l
60.0533 343.066 l
60.0460 344.930 l
60.0396 346.784 l
60.0341 348.626 l
60.0293 350.455 l
60.0252 352.269 l
60.0216 354.065 l
60.0185 355.840 l
60.0158 357.589 l
60.0135 359.308 l
60.0114 360.988 l
60.0097 362.621 l
60.0081 364.191 l
60.0068 365.678 l
60.0057 367.049 l
60.0046 368.249 l
60.0037 369.179 l
60.0029 369.628 l
60.0022 369.057 l
60.0016 367.184 l
60.0012 363.893 l
60.0008 359.801 l
60.0006 355.444 l
60.0004 351.009 l
60.0003 346.552 l
60.0002 342.088 l
60.0002 337.622 l
60.0001 333.155 l
60.0001 328.688 l
60.0000 324.220 l
60.0000 319.753 l
60.0000 315.286 l
60.0000 310.819 l
60.0000 306.352 l
60.0000 297.417 l
60.0000 266.147 l
60.0000 212.541 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 1.00000 0 RG
59.0000 6.00784 324.482 380.992 rc
newpath
381.482 392.872 m
381.482 -10.3190 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
349.334 214.185 m
349.334 216.785 l
S
newpath
285.038 214.185 m
285.038 216.785 l
S
newpath
220.741 214.185 m
220.741 216.785 l
S
newpath
156.444 214.185 m
156.444 216.785 l
S
newpath
92.1483 214.185 m
92.1483 216.785 l
S
newpath
57.0000 214.185 m
381.482 214.185 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
53 237 15 17 rc
newpath
64.1093 249.015 m
64.1093 249.349 64.0885 249.627 64.0468 249.851  c
64.0052 250.075 63.9375 250.276 63.8437 250.453  c
63.6979 250.744 63.5260 250.945 63.3281 251.054  c
63.1302 251.164 62.9427 251.218 62.7656 251.218  c
62.5260 251.218 62.3072 251.138 62.1093 250.976  c
61.9114 250.815 61.7552 250.625 61.6406 250.406  c
61.5989 250.312 61.5468 250.166 61.4843 249.968  c
61.4218 249.770 61.3619 249.549 61.3046 249.304  c
61.2474 249.059 61.1901 248.794 61.1328 248.507  c
61.0755 248.221 61.0234 247.940 60.9765 247.664  c
60.9296 247.388 60.8854 247.127 60.8437 246.882  c
60.8020 246.638 60.7708 246.427 60.7500 246.250  c
60.7343 246.250 l
58.5156 251.000 l
57.3125 251.000 l
60.3125 244.531 l
60.2500 244.187 60.1770 243.880 60.0937 243.609  c
60.0104 243.338 59.9218 243.104 59.8281 242.906  c
59.7343 242.729 59.6119 242.596 59.4609 242.507  c
59.3099 242.419 59.1562 242.375 59.0000 242.375  c
58.8541 242.375 58.7161 242.406 58.5859 242.468  c
58.4557 242.531 58.3437 242.609 58.2500 242.703  c
58.1250 242.828 58.0442 242.971 58.0078 243.132  c
57.9713 243.294 57.9322 243.447 57.8906 243.593  c
57.6406 243.593 l
57.7031 242.906 57.8307 242.367 58.0234 241.976  c
58.2161 241.585 58.5052 241.390 58.8906 241.390  c
59.1822 241.390 59.4401 241.476 59.6640 241.648  c
59.8880 241.820 60.0520 242.010 60.1562 242.218  c
60.2812 242.468 60.4036 242.794 60.5234 243.195  c
60.6432 243.596 60.7656 244.026 60.8906 244.484  c
60.9427 244.703 61.0052 244.984 61.0781 245.328  c
61.1510 245.671 61.2265 246.036 61.3046 246.421  c
61.3828 246.807 61.4609 247.190 61.5390 247.570  c
61.6171 247.950 61.6927 248.286 61.7656 248.578  c
61.8177 248.796 61.8854 249.015 61.9687 249.234  c
62.0520 249.453 62.1614 249.635 62.2968 249.781  c
62.5052 249.979 62.7343 250.078 62.9843 250.078  c
63.1197 250.078 63.2526 250.041 63.3828 249.968  c
63.5130 249.895 63.6197 249.770 63.7031 249.593  c
63.7447 249.520 63.7786 249.421 63.8046 249.296  c
63.8307 249.171 63.8541 249.078 63.8750 249.015  c
64.1093 249.015 l
64.1093 249.015 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
60.0000 214.185 m
60.0000 219.385 l
S
Q
q
newpath
124.296 214.185 m
124.296 219.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
122.468 233.750 m
122.468 232.770 122.617 231.924 122.914 231.210  c
123.210 230.497 123.604 229.968 124.093 229.625  c
124.479 229.354 124.875 229.218 125.281 229.218  c
125.937 229.218 126.526 229.552 127.046 230.218  c
127.703 231.052 128.031 232.182 128.031 233.609  c
128.031 234.609 127.888 235.458 127.601 236.156  c
127.315 236.854 126.947 237.362 126.500 237.679  c
126.052 237.997 125.625 238.156 125.218 238.156  c
124.395 238.156 123.708 237.671 123.156 236.703  c
122.697 235.880 122.468 234.895 122.468 233.750  c
h
123.718 233.906 m
123.718 235.093 123.864 236.062 124.156 236.812  c
124.395 237.437 124.755 237.750 125.234 237.750  c
125.463 237.750 125.700 237.648 125.945 237.445  c
126.190 237.242 126.375 236.895 126.500 236.406  c
126.697 235.687 126.796 234.661 126.796 233.328  c
126.796 232.349 126.692 231.531 126.484 230.875  c
126.338 230.385 126.140 230.041 125.890 229.843  c
125.724 229.708 125.515 229.640 125.265 229.640  c
124.984 229.640 124.729 229.765 124.500 230.015  c
124.197 230.369 123.992 230.924 123.882 231.679  c
123.773 232.434 123.718 233.177 123.718 233.906  c
h
130.125 236.765 m
130.322 236.765 130.489 236.835 130.625 236.976  c
130.760 237.117 130.828 237.281 130.828 237.468  c
130.828 237.666 130.760 237.833 130.625 237.968  c
130.489 238.104 130.322 238.171 130.125 238.171  c
129.927 238.171 129.760 238.104 129.625 237.968  c
129.489 237.833 129.421 237.666 129.421 237.468  c
129.421 237.270 129.489 237.104 129.625 236.968  c
129.760 236.833 129.927 236.765 130.125 236.765  c
h
137.578 229.218 m
137.578 229.453 l
137.015 229.505 136.557 229.614 136.203 229.781  c
135.849 229.947 135.500 230.203 135.156 230.546  c
134.812 230.890 134.528 231.273 134.304 231.695  c
134.080 232.117 133.890 232.614 133.734 233.187  c
134.349 232.770 134.963 232.562 135.578 232.562  c
136.161 232.562 136.669 232.799 137.101 233.273  c
137.533 233.747 137.750 234.359 137.750 235.109  c
137.750 235.828 137.531 236.484 137.093 237.078  c
136.572 237.796 135.880 238.156 135.015 238.156  c
134.421 238.156 133.921 237.958 133.515 237.562  c
132.713 236.812 132.312 235.833 132.312 234.625  c
132.312 233.854 132.466 233.122 132.773 232.429  c
133.080 231.737 133.520 231.119 134.093 230.578  c
134.666 230.036 135.216 229.674 135.742 229.492  c
136.268 229.309 136.755 229.218 137.203 229.218  c
137.578 229.218 l
h
133.625 233.656 m
133.552 234.229 133.515 234.692 133.515 235.046  c
133.515 235.453 133.591 235.893 133.742 236.367  c
133.893 236.841 134.114 237.218 134.406 237.500  c
134.625 237.697 134.890 237.796 135.203 237.796  c
135.567 237.796 135.895 237.622 136.187 237.273  c
136.479 236.924 136.625 236.432 136.625 235.796  c
136.625 235.067 136.479 234.440 136.187 233.914  c
135.895 233.388 135.489 233.125 134.968 233.125  c
134.802 233.125 134.627 233.158 134.445 233.226  c
134.263 233.294 133.989 233.437 133.625 233.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
188.593 214.185 m
188.593 219.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.468 233.750 m
186.468 232.770 186.617 231.924 186.914 231.210  c
187.210 230.497 187.604 229.968 188.093 229.625  c
188.479 229.354 188.875 229.218 189.281 229.218  c
189.937 229.218 190.526 229.552 191.046 230.218  c
191.703 231.052 192.031 232.182 192.031 233.609  c
192.031 234.609 191.888 235.458 191.601 236.156  c
191.315 236.854 190.947 237.362 190.500 237.679  c
190.052 237.997 189.625 238.156 189.218 238.156  c
188.395 238.156 187.708 237.671 187.156 236.703  c
186.697 235.880 186.468 234.895 186.468 233.750  c
h
187.718 233.906 m
187.718 235.093 187.864 236.062 188.156 236.812  c
188.395 237.437 188.755 237.750 189.234 237.750  c
189.463 237.750 189.700 237.648 189.945 237.445  c
190.190 237.242 190.375 236.895 190.500 236.406  c
190.697 235.687 190.796 234.661 190.796 233.328  c
190.796 232.349 190.692 231.531 190.484 230.875  c
190.338 230.385 190.140 230.041 189.890 229.843  c
189.724 229.708 189.515 229.640 189.265 229.640  c
188.984 229.640 188.729 229.765 188.500 230.015  c
188.197 230.369 187.992 230.924 187.882 231.679  c
187.773 232.434 187.718 233.177 187.718 233.906  c
h
194.125 236.765 m
194.322 236.765 194.489 236.835 194.625 236.976  c
194.760 237.117 194.828 237.281 194.828 237.468  c
194.828 237.666 194.760 237.833 194.625 237.968  c
194.489 238.104 194.322 238.171 194.125 238.171  c
193.927 238.171 193.760 238.104 193.625 237.968  c
193.489 237.833 193.421 237.666 193.421 237.468  c
193.421 237.270 193.489 237.104 193.625 236.968  c
193.760 236.833 193.927 236.765 194.125 236.765  c
h
197.062 229.390 m
201.671 229.390 l
201.671 229.640 l
198.796 238.171 l
198.093 238.171 l
200.656 230.421 l
198.296 230.421 l
197.817 230.421 197.479 230.479 197.281 230.593  c
196.916 230.791 196.630 231.093 196.421 231.500  c
196.234 231.437 l
197.062 229.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
252.889 214.185 m
252.889 219.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
250.468 233.750 m
250.468 232.770 250.617 231.924 250.914 231.210  c
251.210 230.497 251.604 229.968 252.093 229.625  c
252.479 229.354 252.875 229.218 253.281 229.218  c
253.937 229.218 254.526 229.552 255.046 230.218  c
255.703 231.052 256.031 232.182 256.031 233.609  c
256.031 234.609 255.888 235.458 255.601 236.156  c
255.315 236.854 254.947 237.362 254.500 237.679  c
254.052 237.997 253.625 238.156 253.218 238.156  c
252.395 238.156 251.708 237.671 251.156 236.703  c
250.697 235.880 250.468 234.895 250.468 233.750  c
h
251.718 233.906 m
251.718 235.093 251.864 236.062 252.156 236.812  c
252.395 237.437 252.755 237.750 253.234 237.750  c
253.463 237.750 253.700 237.648 253.945 237.445  c
254.190 237.242 254.375 236.895 254.500 236.406  c
254.697 235.687 254.796 234.661 254.796 233.328  c
254.796 232.349 254.692 231.531 254.484 230.875  c
254.338 230.385 254.140 230.041 253.890 229.843  c
253.724 229.708 253.515 229.640 253.265 229.640  c
252.984 229.640 252.729 229.765 252.500 230.015  c
252.197 230.369 251.992 230.924 251.882 231.679  c
251.773 232.434 251.718 233.177 251.718 233.906  c
h
258.125 236.765 m
258.322 236.765 258.489 236.835 258.625 236.976  c
258.760 237.117 258.828 237.281 258.828 237.468  c
258.828 237.666 258.760 237.833 258.625 237.968  c
258.489 238.104 258.322 238.171 258.125 238.171  c
257.927 238.171 257.760 238.104 257.625 237.968  c
257.489 237.833 257.421 237.666 257.421 237.468  c
257.421 237.270 257.489 237.104 257.625 236.968  c
257.760 236.833 257.927 236.765 258.125 236.765  c
h
262.250 233.671 m
261.562 233.109 261.119 232.658 260.921 232.320  c
260.724 231.981 260.625 231.630 260.625 231.265  c
260.625 230.703 260.841 230.221 261.273 229.820  c
261.705 229.419 262.281 229.218 263.000 229.218  c
263.697 229.218 264.257 229.406 264.679 229.781  c
265.101 230.156 265.312 230.583 265.312 231.062  c
265.312 231.385 265.197 231.713 264.968 232.046  c
264.739 232.380 264.265 232.776 263.546 233.234  c
264.286 233.807 264.776 234.260 265.015 234.593  c
265.338 235.020 265.500 235.474 265.500 235.953  c
265.500 236.557 265.270 237.075 264.812 237.507  c
264.354 237.940 263.750 238.156 263.000 238.156  c
262.177 238.156 261.536 237.901 261.078 237.390  c
260.713 236.974 260.531 236.520 260.531 236.031  c
260.531 235.656 260.661 235.281 260.921 234.906  c
261.182 234.531 261.625 234.119 262.250 233.671  c
h
263.234 232.984 m
263.744 232.526 264.067 232.164 264.203 231.898  c
264.338 231.632 264.406 231.333 264.406 231.000  c
264.406 230.562 264.281 230.216 264.031 229.960  c
263.781 229.705 263.442 229.578 263.015 229.578  c
262.578 229.578 262.224 229.703 261.953 229.953  c
261.682 230.203 261.546 230.494 261.546 230.828  c
261.546 231.046 261.604 231.268 261.718 231.492  c
261.833 231.716 261.994 231.927 262.203 232.125  c
263.234 232.984 l
h
262.546 233.906 m
262.192 234.197 261.932 234.518 261.765 234.867  c
261.599 235.216 261.515 235.593 261.515 236.000  c
261.515 236.552 261.664 236.992 261.960 237.320  c
262.257 237.648 262.635 237.812 263.093 237.812  c
263.552 237.812 263.919 237.682 264.195 237.421  c
264.471 237.161 264.609 236.849 264.609 236.484  c
264.609 236.182 264.526 235.906 264.359 235.656  c
264.067 235.208 263.463 234.625 262.546 233.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
317.186 214.185 m
317.186 219.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
315.468 233.750 m
315.468 232.770 315.617 231.924 315.914 231.210  c
316.210 230.497 316.604 229.968 317.093 229.625  c
317.479 229.354 317.875 229.218 318.281 229.218  c
318.937 229.218 319.526 229.552 320.046 230.218  c
320.703 231.052 321.031 232.182 321.031 233.609  c
321.031 234.609 320.888 235.458 320.601 236.156  c
320.315 236.854 319.947 237.362 319.500 237.679  c
319.052 237.997 318.625 238.156 318.218 238.156  c
317.395 238.156 316.708 237.671 316.156 236.703  c
315.697 235.880 315.468 234.895 315.468 233.750  c
h
316.718 233.906 m
316.718 235.093 316.864 236.062 317.156 236.812  c
317.395 237.437 317.755 237.750 318.234 237.750  c
318.463 237.750 318.700 237.648 318.945 237.445  c
319.190 237.242 319.375 236.895 319.500 236.406  c
319.697 235.687 319.796 234.661 319.796 233.328  c
319.796 232.349 319.692 231.531 319.484 230.875  c
319.338 230.385 319.140 230.041 318.890 229.843  c
318.724 229.708 318.515 229.640 318.265 229.640  c
317.984 229.640 317.729 229.765 317.500 230.015  c
317.197 230.369 316.992 230.924 316.882 231.679  c
316.773 232.434 316.718 233.177 316.718 233.906  c
h
323.125 236.765 m
323.322 236.765 323.489 236.835 323.625 236.976  c
323.760 237.117 323.828 237.281 323.828 237.468  c
323.828 237.666 323.760 237.833 323.625 237.968  c
323.489 238.104 323.322 238.171 323.125 238.171  c
322.927 238.171 322.760 238.104 322.625 237.968  c
322.489 237.833 322.421 237.666 322.421 237.468  c
322.421 237.270 322.489 237.104 322.625 236.968  c
322.760 236.833 322.927 236.765 323.125 236.765  c
h
325.437 238.171 m
325.437 237.937 l
325.989 237.937 326.502 237.812 326.976 237.562  c
327.450 237.312 327.908 236.877 328.351 236.257  c
328.794 235.638 329.099 234.958 329.265 234.218  c
328.599 234.645 328.000 234.859 327.468 234.859  c
326.864 234.859 326.346 234.627 325.914 234.164  c
325.481 233.700 325.265 233.078 325.265 232.296  c
325.265 231.546 325.479 230.875 325.906 230.281  c
326.427 229.572 327.109 229.218 327.953 229.218  c
328.661 229.218 329.265 229.510 329.765 230.093  c
330.380 230.812 330.687 231.703 330.687 232.765  c
330.687 233.724 330.453 234.617 329.984 235.445  c
329.515 236.273 328.864 236.958 328.031 237.500  c
327.343 237.947 326.599 238.171 325.796 238.171  c
325.437 238.171 l
h
329.375 233.750 m
329.447 233.197 329.484 232.760 329.484 232.437  c
329.484 232.020 329.414 231.575 329.273 231.101  c
329.132 230.627 328.934 230.263 328.679 230.007  c
328.424 229.752 328.135 229.625 327.812 229.625  c
327.437 229.625 327.106 229.794 326.820 230.132  c
326.533 230.471 326.390 230.974 326.390 231.640  c
326.390 232.536 326.578 233.234 326.953 233.734  c
327.234 234.099 327.572 234.281 327.968 234.281  c
328.166 234.281 328.398 234.234 328.664 234.140  c
328.929 234.046 329.166 233.916 329.375 233.750  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.482 214.185 m
381.482 219.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 230.234 m
382.625 229.218 l
382.828 229.218 l
382.828 236.484 l
382.828 236.963 382.849 237.263 382.890 237.382  c
382.932 237.502 383.015 237.593 383.140 237.656  c
383.265 237.718 383.520 237.755 383.906 237.765  c
383.906 238.000 l
380.671 238.000 l
380.671 237.765 l
381.078 237.755 381.341 237.718 381.460 237.656  c
381.580 237.593 381.664 237.510 381.710 237.406  c
381.757 237.302 381.781 236.994 381.781 236.484  c
381.781 231.843 l
381.781 231.208 381.760 230.802 381.718 230.625  c
381.687 230.489 381.632 230.390 381.554 230.328  c
381.476 230.265 381.380 230.234 381.265 230.234  c
381.109 230.234 380.895 230.302 380.625 230.437  c
380.531 230.234 l
h
387.125 236.765 m
387.322 236.765 387.489 236.835 387.625 236.976  c
387.760 237.117 387.828 237.281 387.828 237.468  c
387.828 237.666 387.760 237.833 387.625 237.968  c
387.489 238.104 387.322 238.171 387.125 238.171  c
386.927 238.171 386.760 238.104 386.625 237.968  c
386.489 237.833 386.421 237.666 386.421 237.468  c
386.421 237.270 386.489 237.104 386.625 236.968  c
386.760 236.833 386.927 236.765 387.125 236.765  c
h
389.218 233.750 m
389.218 232.770 389.367 231.924 389.664 231.210  c
389.960 230.497 390.354 229.968 390.843 229.625  c
391.229 229.354 391.625 229.218 392.031 229.218  c
392.687 229.218 393.276 229.552 393.796 230.218  c
394.453 231.052 394.781 232.182 394.781 233.609  c
394.781 234.609 394.638 235.458 394.351 236.156  c
394.065 236.854 393.697 237.362 393.250 237.679  c
392.802 237.997 392.375 238.156 391.968 238.156  c
391.145 238.156 390.458 237.671 389.906 236.703  c
389.447 235.880 389.218 234.895 389.218 233.750  c
h
390.468 233.906 m
390.468 235.093 390.614 236.062 390.906 236.812  c
391.145 237.437 391.505 237.750 391.984 237.750  c
392.213 237.750 392.450 237.648 392.695 237.445  c
392.940 237.242 393.125 236.895 393.250 236.406  c
393.447 235.687 393.546 234.661 393.546 233.328  c
393.546 232.349 393.442 231.531 393.234 230.875  c
393.088 230.385 392.890 230.041 392.640 229.843  c
392.474 229.708 392.265 229.640 392.015 229.640  c
391.734 229.640 391.479 229.765 391.250 230.015  c
390.947 230.369 390.742 230.924 390.632 231.679  c
390.523 232.434 390.468 233.177 390.468 233.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
57.0000 42.3707 m
54.4000 42.3707 l
S
newpath
57.0000 111.096 m
54.4000 111.096 l
S
newpath
57.0000 179.822 m
54.4000 179.822 l
S
newpath
57.0000 248.548 m
54.4000 248.548 l
S
newpath
57.0000 317.274 m
54.4000 317.274 l
S
newpath
57.0000 386.000 m
54.4000 386.000 l
S
newpath
57.0000 386.000 m
57.0000 8.00784 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 190 21 15 rc
newpath
5.28125 196.656 m
7.10937 196.250 l
7.24479 196.562 7.35416 196.885 7.43750 197.218  c
7.55208 197.697 7.64062 198.265 7.70312 198.921  c
7.74479 199.244 7.79166 199.942 7.84375 201.015  c
8.37500 200.432 8.69270 200.067 8.79687 199.921  c
9.35937 199.161 9.68229 198.718 9.76562 198.593  c
9.90104 198.364 9.99479 198.166 10.0468 198.000  c
10.0989 197.875 10.1250 197.755 10.1250 197.640  c
10.1250 197.526 10.0260 197.398 9.82812 197.257  c
9.63020 197.117 9.53125 196.958 9.53125 196.781  c
9.53125 196.645 9.58593 196.523 9.69531 196.414  c
9.80468 196.304 9.93229 196.250 10.0781 196.250  c
10.2552 196.250 10.4114 196.322 10.5468 196.468  c
10.6822 196.614 10.7500 196.796 10.7500 197.015  c
10.7500 197.234 10.7187 197.442 10.6562 197.640  c
10.5416 197.963 10.3333 198.356 10.0312 198.820  c
9.72916 199.283 9.24479 199.901 8.57812 200.671  c
8.49479 200.776 8.02604 201.270 7.17187 202.156  c
6.93750 202.156 l
6.83333 199.479 6.61979 197.807 6.29687 197.140  c
6.19270 196.921 6.02083 196.812 5.78125 196.812  c
5.66666 196.812 5.51562 196.833 5.32812 196.875  c
5.28125 196.656 l
h
15.2543 202.000 m
10.9731 202.000 l
10.9731 201.765 l
13.1606 199.849 14.6033 198.349 15.3012 197.265  c
15.6241 196.765 15.7856 196.234 15.7856 195.671  c
15.7856 195.234 15.6502 194.877 15.3793 194.601  c
15.1085 194.325 14.7596 194.187 14.3325 194.187  c
13.7387 194.187 13.2491 194.474 12.8637 195.046  c
12.6293 194.937 l
12.8481 194.395 13.1658 193.974 13.5825 193.671  c
13.9991 193.369 14.4471 193.218 14.9262 193.218  c
15.4783 193.218 15.9392 193.406 16.3090 193.781  c
16.6788 194.156 16.8637 194.609 16.8637 195.140  c
16.8637 195.515 16.7960 195.859 16.6606 196.171  c
16.4627 196.671 16.0929 197.224 15.5512 197.828  c
14.7179 198.776 13.6085 199.859 12.2231 201.078  c
14.3793 201.078 l
14.7231 201.078 15.0096 201.005 15.2387 200.859  c
15.4679 200.713 15.6293 200.520 15.7231 200.281  c
15.9731 200.281 l
15.2543 202.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
57.0000 351.637 m
51.8000 351.637 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
32 350 7 13 rc
newpath
42.7968 357.437 m
34.2031 357.437 l
34.2031 356.765 l
42.7968 356.765 l
42.7968 357.437 l
h
f
Q
newpath
41.4687 356.750 m
41.4687 355.770 41.6171 354.924 41.9140 354.210  c
42.2109 353.497 42.6041 352.968 43.0937 352.625  c
43.4791 352.354 43.8750 352.218 44.2812 352.218  c
44.9375 352.218 45.5260 352.552 46.0468 353.218  c
46.7031 354.052 47.0312 355.182 47.0312 356.609  c
47.0312 357.609 46.8880 358.458 46.6015 359.156  c
46.3151 359.854 45.9479 360.362 45.5000 360.679  c
45.0520 360.997 44.6250 361.156 44.2187 361.156  c
43.3958 361.156 42.7083 360.671 42.1562 359.703  c
41.6979 358.880 41.4687 357.895 41.4687 356.750  c
h
42.7187 356.906 m
42.7187 358.093 42.8645 359.062 43.1562 359.812  c
43.3958 360.437 43.7552 360.750 44.2343 360.750  c
44.4635 360.750 44.7005 360.648 44.9453 360.445  c
45.1901 360.242 45.3750 359.895 45.5000 359.406  c
45.6979 358.687 45.7968 357.661 45.7968 356.328  c
45.7968 355.349 45.6927 354.531 45.4843 353.875  c
45.3385 353.385 45.1406 353.041 44.8906 352.843  c
44.7239 352.708 44.5156 352.640 44.2656 352.640  c
43.9843 352.640 43.7291 352.765 43.5000 353.015  c
43.1979 353.369 42.9921 353.924 42.8828 354.679  c
42.7734 355.434 42.7187 356.177 42.7187 356.906  c
h
49.1250 359.765 m
49.3229 359.765 49.4895 359.835 49.6250 359.976  c
49.7604 360.117 49.8281 360.281 49.8281 360.468  c
49.8281 360.666 49.7604 360.833 49.6250 360.968  c
49.4895 361.104 49.3229 361.171 49.1250 361.171  c
48.9270 361.171 48.7604 361.104 48.6250 360.968  c
48.4895 360.833 48.4218 360.666 48.4218 360.468  c
48.4218 360.270 48.4895 360.104 48.6250 359.968  c
48.7604 359.833 48.9270 359.765 49.1250 359.765  c
h
56.7968 357.828 m
56.7968 358.734 l
55.6406 358.734 l
55.6406 361.000 l
54.5937 361.000 l
54.5937 358.734 l
50.9531 358.734 l
50.9531 357.921 l
54.9531 352.218 l
55.6406 352.218 l
55.6406 357.828 l
56.7968 357.828 l
h
54.5937 357.828 m
54.5937 353.546 l
51.5781 357.828 l
54.5937 357.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 282.911 m
51.8000 282.911 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
32 281 7 13 rc
newpath
42.7968 288.437 m
34.2031 288.437 l
34.2031 287.765 l
42.7968 287.765 l
42.7968 288.437 l
h
f
Q
newpath
41.4687 287.750 m
41.4687 286.770 41.6171 285.924 41.9140 285.210  c
42.2109 284.497 42.6041 283.968 43.0937 283.625  c
43.4791 283.354 43.8750 283.218 44.2812 283.218  c
44.9375 283.218 45.5260 283.552 46.0468 284.218  c
46.7031 285.052 47.0312 286.182 47.0312 287.609  c
47.0312 288.609 46.8880 289.458 46.6015 290.156  c
46.3151 290.854 45.9479 291.362 45.5000 291.679  c
45.0520 291.997 44.6250 292.156 44.2187 292.156  c
43.3958 292.156 42.7083 291.671 42.1562 290.703  c
41.6979 289.880 41.4687 288.895 41.4687 287.750  c
h
42.7187 287.906 m
42.7187 289.093 42.8645 290.062 43.1562 290.812  c
43.3958 291.437 43.7552 291.750 44.2343 291.750  c
44.4635 291.750 44.7005 291.648 44.9453 291.445  c
45.1901 291.242 45.3750 290.895 45.5000 290.406  c
45.6979 289.687 45.7968 288.661 45.7968 287.328  c
45.7968 286.349 45.6927 285.531 45.4843 284.875  c
45.3385 284.385 45.1406 284.041 44.8906 283.843  c
44.7239 283.708 44.5156 283.640 44.2656 283.640  c
43.9843 283.640 43.7291 283.765 43.5000 284.015  c
43.1979 284.369 42.9921 284.924 42.8828 285.679  c
42.7734 286.434 42.7187 287.177 42.7187 287.906  c
h
49.1250 290.765 m
49.3229 290.765 49.4895 290.835 49.6250 290.976  c
49.7604 291.117 49.8281 291.281 49.8281 291.468  c
49.8281 291.666 49.7604 291.833 49.6250 291.968  c
49.4895 292.104 49.3229 292.171 49.1250 292.171  c
48.9270 292.171 48.7604 292.104 48.6250 291.968  c
48.4895 291.833 48.4218 291.666 48.4218 291.468  c
48.4218 291.270 48.4895 291.104 48.6250 290.968  c
48.7604 290.833 48.9270 290.765 49.1250 290.765  c
h
56.7031 290.343 m
56.1093 292.000 l
51.0312 292.000 l
51.0312 291.765 l
52.5208 290.401 53.5703 289.286 54.1796 288.421  c
54.7890 287.557 55.0937 286.770 55.0937 286.062  c
55.0937 285.510 54.9270 285.059 54.5937 284.710  c
54.2604 284.362 53.8593 284.187 53.3906 284.187  c
52.9739 284.187 52.5963 284.309 52.2578 284.554  c
51.9192 284.799 51.6718 285.161 51.5156 285.640  c
51.2812 285.640 l
51.3854 284.859 51.6562 284.260 52.0937 283.843  c
52.5312 283.427 53.0781 283.218 53.7343 283.218  c
54.4322 283.218 55.0156 283.442 55.4843 283.890  c
55.9531 284.338 56.1875 284.864 56.1875 285.468  c
56.1875 285.906 56.0833 286.343 55.8750 286.781  c
55.5625 287.468 55.0572 288.192 54.3593 288.953  c
53.3072 290.109 52.6458 290.807 52.3750 291.046  c
54.6250 291.046 l
55.0833 291.046 55.4036 291.028 55.5859 290.992  c
55.7682 290.955 55.9349 290.885 56.0859 290.781  c
56.2369 290.677 56.3645 290.531 56.4687 290.343  c
56.7031 290.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 214.185 m
51.8000 214.185 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
50.4687 219.750 m
50.4687 218.770 50.6171 217.924 50.9140 217.210  c
51.2109 216.497 51.6041 215.968 52.0937 215.625  c
52.4791 215.354 52.8750 215.218 53.2812 215.218  c
53.9375 215.218 54.5260 215.552 55.0468 216.218  c
55.7031 217.052 56.0312 218.182 56.0312 219.609  c
56.0312 220.609 55.8880 221.458 55.6015 222.156  c
55.3151 222.854 54.9479 223.362 54.5000 223.679  c
54.0520 223.997 53.6250 224.156 53.2187 224.156  c
52.3958 224.156 51.7083 223.671 51.1562 222.703  c
50.6979 221.880 50.4687 220.895 50.4687 219.750  c
h
51.7187 219.906 m
51.7187 221.093 51.8645 222.062 52.1562 222.812  c
52.3958 223.437 52.7552 223.750 53.2343 223.750  c
53.4635 223.750 53.7005 223.648 53.9453 223.445  c
54.1901 223.242 54.3750 222.895 54.5000 222.406  c
54.6979 221.687 54.7968 220.661 54.7968 219.328  c
54.7968 218.349 54.6927 217.531 54.4843 216.875  c
54.3385 216.385 54.1406 216.041 53.8906 215.843  c
53.7239 215.708 53.5156 215.640 53.2656 215.640  c
52.9843 215.640 52.7291 215.765 52.5000 216.015  c
52.1979 216.369 51.9921 216.924 51.8828 217.679  c
51.7734 218.434 51.7187 219.177 51.7187 219.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 145.459 m
51.8000 145.459 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 150.750 m
41.4687 149.770 41.6171 148.924 41.9140 148.210  c
42.2109 147.497 42.6041 146.968 43.0937 146.625  c
43.4791 146.354 43.8750 146.218 44.2812 146.218  c
44.9375 146.218 45.5260 146.552 46.0468 147.218  c
46.7031 148.052 47.0312 149.182 47.0312 150.609  c
47.0312 151.609 46.8880 152.458 46.6015 153.156  c
46.3151 153.854 45.9479 154.362 45.5000 154.679  c
45.0520 154.997 44.6250 155.156 44.2187 155.156  c
43.3958 155.156 42.7083 154.671 42.1562 153.703  c
41.6979 152.880 41.4687 151.895 41.4687 150.750  c
h
42.7187 150.906 m
42.7187 152.093 42.8645 153.062 43.1562 153.812  c
43.3958 154.437 43.7552 154.750 44.2343 154.750  c
44.4635 154.750 44.7005 154.648 44.9453 154.445  c
45.1901 154.242 45.3750 153.895 45.5000 153.406  c
45.6979 152.687 45.7968 151.661 45.7968 150.328  c
45.7968 149.349 45.6927 148.531 45.4843 147.875  c
45.3385 147.385 45.1406 147.041 44.8906 146.843  c
44.7239 146.708 44.5156 146.640 44.2656 146.640  c
43.9843 146.640 43.7291 146.765 43.5000 147.015  c
43.1979 147.369 42.9921 147.924 42.8828 148.679  c
42.7734 149.434 42.7187 150.177 42.7187 150.906  c
h
49.1250 153.765 m
49.3229 153.765 49.4895 153.835 49.6250 153.976  c
49.7604 154.117 49.8281 154.281 49.8281 154.468  c
49.8281 154.666 49.7604 154.833 49.6250 154.968  c
49.4895 155.104 49.3229 155.171 49.1250 155.171  c
48.9270 155.171 48.7604 155.104 48.6250 154.968  c
48.4895 154.833 48.4218 154.666 48.4218 154.468  c
48.4218 154.270 48.4895 154.104 48.6250 153.968  c
48.7604 153.833 48.9270 153.765 49.1250 153.765  c
h
56.7031 153.343 m
56.1093 155.000 l
51.0312 155.000 l
51.0312 154.765 l
52.5208 153.401 53.5703 152.286 54.1796 151.421  c
54.7890 150.557 55.0937 149.770 55.0937 149.062  c
55.0937 148.510 54.9270 148.059 54.5937 147.710  c
54.2604 147.362 53.8593 147.187 53.3906 147.187  c
52.9739 147.187 52.5963 147.309 52.2578 147.554  c
51.9192 147.799 51.6718 148.161 51.5156 148.640  c
51.2812 148.640 l
51.3854 147.859 51.6562 147.260 52.0937 146.843  c
52.5312 146.427 53.0781 146.218 53.7343 146.218  c
54.4322 146.218 55.0156 146.442 55.4843 146.890  c
55.9531 147.338 56.1875 147.864 56.1875 148.468  c
56.1875 148.906 56.0833 149.343 55.8750 149.781  c
55.5625 150.468 55.0572 151.192 54.3593 151.953  c
53.3072 153.109 52.6458 153.807 52.3750 154.046  c
54.6250 154.046 l
55.0833 154.046 55.4036 154.028 55.5859 153.992  c
55.7682 153.955 55.9349 153.885 56.0859 153.781  c
56.2369 153.677 56.3645 153.531 56.4687 153.343  c
56.7031 153.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 76.7337 m
51.8000 76.7337 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 81.7500 m
41.4687 80.7708 41.6171 79.9244 41.9140 79.2109  c
42.2109 78.4974 42.6041 77.9687 43.0937 77.6250  c
43.4791 77.3541 43.8750 77.2187 44.2812 77.2187  c
44.9375 77.2187 45.5260 77.5520 46.0468 78.2187  c
46.7031 79.0520 47.0312 80.1822 47.0312 81.6093  c
47.0312 82.6093 46.8880 83.4583 46.6015 84.1562  c
46.3151 84.8541 45.9479 85.3619 45.5000 85.6796  c
45.0520 85.9974 44.6250 86.1562 44.2187 86.1562  c
43.3958 86.1562 42.7083 85.6718 42.1562 84.7031  c
41.6979 83.8802 41.4687 82.8958 41.4687 81.7500  c
h
42.7187 81.9062 m
42.7187 83.0937 42.8645 84.0625 43.1562 84.8125  c
43.3958 85.4375 43.7552 85.7500 44.2343 85.7500  c
44.4635 85.7500 44.7005 85.6484 44.9453 85.4453  c
45.1901 85.2421 45.3750 84.8958 45.5000 84.4062  c
45.6979 83.6875 45.7968 82.6614 45.7968 81.3281  c
45.7968 80.3489 45.6927 79.5312 45.4843 78.8750  c
45.3385 78.3854 45.1406 78.0416 44.8906 77.8437  c
44.7239 77.7083 44.5156 77.6406 44.2656 77.6406  c
43.9843 77.6406 43.7291 77.7656 43.5000 78.0156  c
43.1979 78.3697 42.9921 78.9244 42.8828 79.6796  c
42.7734 80.4349 42.7187 81.1770 42.7187 81.9062  c
h
49.1250 84.7656 m
49.3229 84.7656 49.4895 84.8359 49.6250 84.9765  c
49.7604 85.1171 49.8281 85.2812 49.8281 85.4687  c
49.8281 85.6666 49.7604 85.8333 49.6250 85.9687  c
49.4895 86.1041 49.3229 86.1718 49.1250 86.1718  c
48.9270 86.1718 48.7604 86.1041 48.6250 85.9687  c
48.4895 85.8333 48.4218 85.6666 48.4218 85.4687  c
48.4218 85.2708 48.4895 85.1041 48.6250 84.9687  c
48.7604 84.8333 48.9270 84.7656 49.1250 84.7656  c
h
56.7968 82.8281 m
56.7968 83.7343 l
55.6406 83.7343 l
55.6406 86.0000 l
54.5937 86.0000 l
54.5937 83.7343 l
50.9531 83.7343 l
50.9531 82.9218 l
54.9531 77.2187 l
55.6406 77.2187 l
55.6406 82.8281 l
56.7968 82.8281 l
h
54.5937 82.8281 m
54.5937 78.5468 l
51.5781 82.8281 l
54.5937 82.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 8.00784 m
51.8000 8.00784 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 13.7500 m
41.4687 12.7708 41.6171 11.9244 41.9140 11.2109  c
42.2109 10.4974 42.6041 9.96875 43.0937 9.62500  c
43.4791 9.35416 43.8750 9.21875 44.2812 9.21875  c
44.9375 9.21875 45.5260 9.55208 46.0468 10.2187  c
46.7031 11.0520 47.0312 12.1822 47.0312 13.6093  c
47.0312 14.6093 46.8880 15.4583 46.6015 16.1562  c
46.3151 16.8541 45.9479 17.3619 45.5000 17.6796  c
45.0520 17.9974 44.6250 18.1562 44.2187 18.1562  c
43.3958 18.1562 42.7083 17.6718 42.1562 16.7031  c
41.6979 15.8802 41.4687 14.8958 41.4687 13.7500  c
h
42.7187 13.9062 m
42.7187 15.0937 42.8645 16.0625 43.1562 16.8125  c
43.3958 17.4375 43.7552 17.7500 44.2343 17.7500  c
44.4635 17.7500 44.7005 17.6484 44.9453 17.4453  c
45.1901 17.2421 45.3750 16.8958 45.5000 16.4062  c
45.6979 15.6875 45.7968 14.6614 45.7968 13.3281  c
45.7968 12.3489 45.6927 11.5312 45.4843 10.8750  c
45.3385 10.3854 45.1406 10.0416 44.8906 9.84375  c
44.7239 9.70833 44.5156 9.64062 44.2656 9.64062  c
43.9843 9.64062 43.7291 9.76562 43.5000 10.0156  c
43.1979 10.3697 42.9921 10.9244 42.8828 11.6796  c
42.7734 12.4349 42.7187 13.1770 42.7187 13.9062  c
h
49.1250 16.7656 m
49.3229 16.7656 49.4895 16.8359 49.6250 16.9765  c
49.7604 17.1171 49.8281 17.2812 49.8281 17.4687  c
49.8281 17.6666 49.7604 17.8333 49.6250 17.9687  c
49.4895 18.1041 49.3229 18.1718 49.1250 18.1718  c
48.9270 18.1718 48.7604 18.1041 48.6250 17.9687  c
48.4895 17.8333 48.4218 17.6666 48.4218 17.4687  c
48.4218 17.2708 48.4895 17.1041 48.6250 16.9687  c
48.7604 16.8333 48.9270 16.7656 49.1250 16.7656  c
h
56.5781 9.21875 m
56.5781 9.45312 l
56.0156 9.50520 55.5572 9.61458 55.2031 9.78125  c
54.8489 9.94791 54.5000 10.2031 54.1562 10.5468  c
53.8125 10.8906 53.5286 11.2734 53.3046 11.6953  c
53.0807 12.1171 52.8906 12.6145 52.7343 13.1875  c
53.3489 12.7708 53.9635 12.5625 54.5781 12.5625  c
55.1614 12.5625 55.6692 12.7994 56.1015 13.2734  c
56.5338 13.7474 56.7500 14.3593 56.7500 15.1093  c
56.7500 15.8281 56.5312 16.4843 56.0937 17.0781  c
55.5729 17.7968 54.8802 18.1562 54.0156 18.1562  c
53.4218 18.1562 52.9218 17.9583 52.5156 17.5625  c
51.7135 16.8125 51.3125 15.8333 51.3125 14.6250  c
51.3125 13.8541 51.4661 13.1224 51.7734 12.4296  c
52.0807 11.7369 52.5208 11.1197 53.0937 10.5781  c
53.6666 10.0364 54.2161 9.67447 54.7421 9.49218  c
55.2682 9.30989 55.7552 9.21875 56.2031 9.21875  c
56.5781 9.21875 l
h
52.6250 13.6562 m
52.5520 14.2291 52.5156 14.6927 52.5156 15.0468  c
52.5156 15.4531 52.5911 15.8932 52.7421 16.3671  c
52.8932 16.8411 53.1145 17.2187 53.4062 17.5000  c
53.6250 17.6979 53.8906 17.7968 54.2031 17.7968  c
54.5677 17.7968 54.8958 17.6224 55.1875 17.2734  c
55.4791 16.9244 55.6250 16.4322 55.6250 15.7968  c
55.6250 15.0677 55.4791 14.4401 55.1875 13.9140  c
54.8958 13.3880 54.4895 13.1250 53.9687 13.1250  c
53.8020 13.1250 53.6276 13.1588 53.4453 13.2265  c
53.2630 13.2942 52.9895 13.4375 52.6250 13.6562  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
