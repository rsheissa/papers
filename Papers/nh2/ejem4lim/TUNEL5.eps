%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: mi√©rcoles 16 de marzo de 2011 11:49:25 PM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.00000 w
1.00000 0 0 RG
55.0000 5.00864 333.994 346.991 rc
newpath
364.374 386.104 m
365.270 349.977 l
366.967 314.402 l
369.781 279.789 l
373.968 246.907 l
379.196 217.044 l
383.935 191.678 l
385.995 171.254 l
383.589 154.769 l
376.979 143.094 l
367.879 134.850 l
359.115 129.718 l
353.741 127.577 l
353.188 128.098 l
356.297 130.513 l
361.273 134.246 l
366.730 138.892 l
371.818 144.190 l
376.130 149.952 l
379.529 156.040 l
382.044 162.335 l
383.788 168.731 l
384.912 175.132 l
385.568 181.454 l
385.891 187.624 l
385.993 193.583 l
385.957 199.314 l
385.847 204.748 l
385.705 209.889 l
385.556 214.737 l
385.419 219.297 l
385.303 223.580 l
385.212 227.593 l
385.149 231.337 l
385.115 234.795 l
385.112 237.919 l
385.144 240.613 l
385.216 242.710 l
385.334 243.945 l
385.502 243.955 l
385.703 242.398 l
385.902 238.986 l
385.995 233.723 l
383.332 210.783 l
379.254 200.370 l
371.495 189.724 l
358.203 179.355 l
339.952 170.607 l
314.307 162.532 l
280.209 155.198 l
236.889 148.596 l
183.807 142.670 l
120.580 137.347 l
46.9174 132.549 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 1.00000 0 RG
56.0000 6.00864 331.994 344.991 rc
newpath
385.994 387.999 m
385.994 -37.5902 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
369.545 353.000 m
369.545 355.600 l
S
newpath
353.095 353.000 m
353.095 355.600 l
S
newpath
320.195 353.000 m
320.195 355.600 l
S
newpath
336.645 353.000 m
336.645 355.600 l
S
newpath
270.846 353.000 m
270.846 355.600 l
S
newpath
287.296 353.000 m
287.296 355.600 l
S
newpath
254.396 353.000 m
254.396 355.600 l
S
newpath
237.947 353.000 m
237.947 355.600 l
S
newpath
205.047 353.000 m
205.047 355.600 l
S
newpath
172.148 353.000 m
172.148 355.600 l
S
newpath
188.597 353.000 m
188.597 355.600 l
S
newpath
155.698 353.000 m
155.698 355.600 l
S
newpath
122.799 353.000 m
122.799 355.600 l
S
newpath
106.349 353.000 m
106.349 355.600 l
S
newpath
73.4497 353.000 m
73.4497 355.600 l
S
newpath
89.8994 353.000 m
89.8994 355.600 l
S
newpath
54.0000 353.000 m
385.994 353.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
214 373 15 17 rc
newpath
225.109 385.015 m
225.109 385.349 225.088 385.627 225.046 385.851  c
225.005 386.075 224.937 386.276 224.843 386.453  c
224.697 386.744 224.526 386.945 224.328 387.054  c
224.130 387.164 223.942 387.218 223.765 387.218  c
223.526 387.218 223.307 387.138 223.109 386.976  c
222.911 386.815 222.755 386.625 222.640 386.406  c
222.599 386.312 222.546 386.166 222.484 385.968  c
222.421 385.770 222.362 385.549 222.304 385.304  c
222.247 385.059 222.190 384.794 222.132 384.507  c
222.075 384.221 222.023 383.940 221.976 383.664  c
221.929 383.388 221.885 383.127 221.843 382.882  c
221.802 382.638 221.770 382.427 221.750 382.250  c
221.734 382.250 l
219.515 387.000 l
218.312 387.000 l
221.312 380.531 l
221.250 380.187 221.177 379.880 221.093 379.609  c
221.010 379.338 220.921 379.104 220.828 378.906  c
220.734 378.729 220.612 378.596 220.460 378.507  c
220.309 378.419 220.156 378.375 220.000 378.375  c
219.854 378.375 219.716 378.406 219.585 378.468  c
219.455 378.531 219.343 378.609 219.250 378.703  c
219.125 378.828 219.044 378.971 219.007 379.132  c
218.971 379.294 218.932 379.447 218.890 379.593  c
218.640 379.593 l
218.703 378.906 218.830 378.367 219.023 377.976  c
219.216 377.585 219.505 377.390 219.890 377.390  c
220.182 377.390 220.440 377.476 220.664 377.648  c
220.888 377.820 221.052 378.010 221.156 378.218  c
221.281 378.468 221.403 378.794 221.523 379.195  c
221.643 379.596 221.765 380.026 221.890 380.484  c
221.942 380.703 222.005 380.984 222.078 381.328  c
222.151 381.671 222.226 382.036 222.304 382.421  c
222.382 382.807 222.460 383.190 222.539 383.570  c
222.617 383.950 222.692 384.286 222.765 384.578  c
222.817 384.796 222.885 385.015 222.968 385.234  c
223.052 385.453 223.161 385.635 223.296 385.781  c
223.505 385.979 223.734 386.078 223.984 386.078  c
224.119 386.078 224.252 386.041 224.382 385.968  c
224.513 385.895 224.619 385.770 224.703 385.593  c
224.744 385.520 224.778 385.421 224.804 385.296  c
224.830 385.171 224.854 385.078 224.875 385.015  c
225.109 385.015 l
225.109 385.015 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
57.0000 353.000 m
57.0000 358.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
46.4687 369.750 m
46.4687 368.770 46.6171 367.924 46.9140 367.210  c
47.2109 366.497 47.6041 365.968 48.0937 365.625  c
48.4791 365.354 48.8750 365.218 49.2812 365.218  c
49.9375 365.218 50.5260 365.552 51.0468 366.218  c
51.7031 367.052 52.0312 368.182 52.0312 369.609  c
52.0312 370.609 51.8880 371.458 51.6015 372.156  c
51.3151 372.854 50.9479 373.362 50.5000 373.679  c
50.0520 373.997 49.6250 374.156 49.2187 374.156  c
48.3958 374.156 47.7083 373.671 47.1562 372.703  c
46.6979 371.880 46.4687 370.895 46.4687 369.750  c
h
47.7187 369.906 m
47.7187 371.093 47.8645 372.062 48.1562 372.812  c
48.3958 373.437 48.7552 373.750 49.2343 373.750  c
49.4635 373.750 49.7005 373.648 49.9453 373.445  c
50.1901 373.242 50.3750 372.895 50.5000 372.406  c
50.6979 371.687 50.7968 370.661 50.7968 369.328  c
50.7968 368.349 50.6927 367.531 50.4843 366.875  c
50.3385 366.385 50.1406 366.041 49.8906 365.843  c
49.7239 365.708 49.5156 365.640 49.2656 365.640  c
48.9843 365.640 48.7291 365.765 48.5000 366.015  c
48.1979 366.369 47.9921 366.924 47.8828 367.679  c
47.7734 368.434 47.7187 369.177 47.7187 369.906  c
h
54.1250 372.765 m
54.3229 372.765 54.4895 372.835 54.6250 372.976  c
54.7604 373.117 54.8281 373.281 54.8281 373.468  c
54.8281 373.666 54.7604 373.833 54.6250 373.968  c
54.4895 374.104 54.3229 374.171 54.1250 374.171  c
53.9270 374.171 53.7604 374.104 53.6250 373.968  c
53.4895 373.833 53.4218 373.666 53.4218 373.468  c
53.4218 373.270 53.4895 373.104 53.6250 372.968  c
53.7604 372.833 53.9270 372.765 54.1250 372.765  c
h
56.4375 374.171 m
56.4375 373.937 l
56.9895 373.937 57.5026 373.812 57.9765 373.562  c
58.4505 373.312 58.9088 372.877 59.3515 372.257  c
59.7942 371.638 60.0989 370.958 60.2656 370.218  c
59.5989 370.645 59.0000 370.859 58.4687 370.859  c
57.8645 370.859 57.3463 370.627 56.9140 370.164  c
56.4817 369.700 56.2656 369.078 56.2656 368.296  c
56.2656 367.546 56.4791 366.875 56.9062 366.281  c
57.4270 365.572 58.1093 365.218 58.9531 365.218  c
59.6614 365.218 60.2656 365.510 60.7656 366.093  c
61.3802 366.812 61.6875 367.703 61.6875 368.765  c
61.6875 369.724 61.4531 370.617 60.9843 371.445  c
60.5156 372.273 59.8645 372.958 59.0312 373.500  c
58.3437 373.947 57.5989 374.171 56.7968 374.171  c
56.4375 374.171 l
h
60.3750 369.750 m
60.4479 369.197 60.4843 368.760 60.4843 368.437  c
60.4843 368.020 60.4140 367.575 60.2734 367.101  c
60.1328 366.627 59.9349 366.263 59.6796 366.007  c
59.4244 365.752 59.1354 365.625 58.8125 365.625  c
58.4375 365.625 58.1067 365.794 57.8203 366.132  c
57.5338 366.471 57.3906 366.974 57.3906 367.640  c
57.3906 368.536 57.5781 369.234 57.9531 369.734  c
58.2343 370.099 58.5729 370.281 58.9687 370.281  c
59.1666 370.281 59.3984 370.234 59.6640 370.140  c
59.9296 370.046 60.1666 369.916 60.3750 369.750  c
h
62.9375 374.171 m
62.9375 373.937 l
63.4895 373.937 64.0026 373.812 64.4765 373.562  c
64.9505 373.312 65.4088 372.877 65.8515 372.257  c
66.2942 371.638 66.5989 370.958 66.7656 370.218  c
66.0989 370.645 65.5000 370.859 64.9687 370.859  c
64.3645 370.859 63.8463 370.627 63.4140 370.164  c
62.9817 369.700 62.7656 369.078 62.7656 368.296  c
62.7656 367.546 62.9791 366.875 63.4062 366.281  c
63.9270 365.572 64.6093 365.218 65.4531 365.218  c
66.1614 365.218 66.7656 365.510 67.2656 366.093  c
67.8802 366.812 68.1875 367.703 68.1875 368.765  c
68.1875 369.724 67.9531 370.617 67.4843 371.445  c
67.0156 372.273 66.3645 372.958 65.5312 373.500  c
64.8437 373.947 64.0989 374.171 63.2968 374.171  c
62.9375 374.171 l
h
66.8750 369.750 m
66.9479 369.197 66.9843 368.760 66.9843 368.437  c
66.9843 368.020 66.9140 367.575 66.7734 367.101  c
66.6328 366.627 66.4349 366.263 66.1796 366.007  c
65.9244 365.752 65.6354 365.625 65.3125 365.625  c
64.9375 365.625 64.6067 365.794 64.3203 366.132  c
64.0338 366.471 63.8906 366.974 63.8906 367.640  c
63.8906 368.536 64.0781 369.234 64.4531 369.734  c
64.7343 370.099 65.0729 370.281 65.4687 370.281  c
65.6666 370.281 65.8984 370.234 66.1640 370.140  c
66.4296 370.046 66.6666 369.916 66.8750 369.750  c
h
71.2500 369.671 m
70.5625 369.109 70.1197 368.658 69.9218 368.320  c
69.7239 367.981 69.6250 367.630 69.6250 367.265  c
69.6250 366.703 69.8411 366.221 70.2734 365.820  c
70.7057 365.419 71.2812 365.218 72.0000 365.218  c
72.6979 365.218 73.2578 365.406 73.6796 365.781  c
74.1015 366.156 74.3125 366.583 74.3125 367.062  c
74.3125 367.385 74.1979 367.713 73.9687 368.046  c
73.7395 368.380 73.2656 368.776 72.5468 369.234  c
73.2864 369.807 73.7760 370.260 74.0156 370.593  c
74.3385 371.020 74.5000 371.474 74.5000 371.953  c
74.5000 372.557 74.2708 373.075 73.8125 373.507  c
73.3541 373.940 72.7500 374.156 72.0000 374.156  c
71.1770 374.156 70.5364 373.901 70.0781 373.390  c
69.7135 372.974 69.5312 372.520 69.5312 372.031  c
69.5312 371.656 69.6614 371.281 69.9218 370.906  c
70.1822 370.531 70.6250 370.119 71.2500 369.671  c
h
72.2343 368.984 m
72.7447 368.526 73.0677 368.164 73.2031 367.898  c
73.3385 367.632 73.4062 367.333 73.4062 367.000  c
73.4062 366.562 73.2812 366.216 73.0312 365.960  c
72.7812 365.705 72.4427 365.578 72.0156 365.578  c
71.5781 365.578 71.2239 365.703 70.9531 365.953  c
70.6822 366.203 70.5468 366.494 70.5468 366.828  c
70.5468 367.046 70.6041 367.268 70.7187 367.492  c
70.8333 367.716 70.9947 367.927 71.2031 368.125  c
72.2343 368.984 l
h
71.5468 369.906 m
71.1927 370.197 70.9322 370.518 70.7656 370.867  c
70.5989 371.216 70.5156 371.593 70.5156 372.000  c
70.5156 372.552 70.6640 372.992 70.9609 373.320  c
71.2578 373.648 71.6354 373.812 72.0937 373.812  c
72.5520 373.812 72.9192 373.682 73.1953 373.421  c
73.4713 373.161 73.6093 372.849 73.6093 372.484  c
73.6093 372.182 73.5260 371.906 73.3593 371.656  c
73.0677 371.208 72.4635 370.625 71.5468 369.906  c
h
75.7187 369.750 m
75.7187 368.770 75.8671 367.924 76.1640 367.210  c
76.4609 366.497 76.8541 365.968 77.3437 365.625  c
77.7291 365.354 78.1250 365.218 78.5312 365.218  c
79.1875 365.218 79.7760 365.552 80.2968 366.218  c
80.9531 367.052 81.2812 368.182 81.2812 369.609  c
81.2812 370.609 81.1380 371.458 80.8515 372.156  c
80.5651 372.854 80.1979 373.362 79.7500 373.679  c
79.3020 373.997 78.8750 374.156 78.4687 374.156  c
77.6458 374.156 76.9583 373.671 76.4062 372.703  c
75.9479 371.880 75.7187 370.895 75.7187 369.750  c
h
76.9687 369.906 m
76.9687 371.093 77.1145 372.062 77.4062 372.812  c
77.6458 373.437 78.0052 373.750 78.4843 373.750  c
78.7135 373.750 78.9505 373.648 79.1953 373.445  c
79.4401 373.242 79.6250 372.895 79.7500 372.406  c
79.9479 371.687 80.0468 370.661 80.0468 369.328  c
80.0468 368.349 79.9427 367.531 79.7343 366.875  c
79.5885 366.385 79.3906 366.041 79.1406 365.843  c
78.9739 365.708 78.7656 365.640 78.5156 365.640  c
78.2343 365.640 77.9791 365.765 77.7500 366.015  c
77.4479 366.369 77.2421 366.924 77.1328 367.679  c
77.0234 368.434 76.9687 369.177 76.9687 369.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
139.248 353.000 m
139.248 358.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
128.468 369.750 m
128.468 368.770 128.617 367.924 128.914 367.210  c
129.210 366.497 129.604 365.968 130.093 365.625  c
130.479 365.354 130.875 365.218 131.281 365.218  c
131.937 365.218 132.526 365.552 133.046 366.218  c
133.703 367.052 134.031 368.182 134.031 369.609  c
134.031 370.609 133.888 371.458 133.601 372.156  c
133.315 372.854 132.947 373.362 132.500 373.679  c
132.052 373.997 131.625 374.156 131.218 374.156  c
130.395 374.156 129.708 373.671 129.156 372.703  c
128.697 371.880 128.468 370.895 128.468 369.750  c
h
129.718 369.906 m
129.718 371.093 129.864 372.062 130.156 372.812  c
130.395 373.437 130.755 373.750 131.234 373.750  c
131.463 373.750 131.700 373.648 131.945 373.445  c
132.190 373.242 132.375 372.895 132.500 372.406  c
132.697 371.687 132.796 370.661 132.796 369.328  c
132.796 368.349 132.692 367.531 132.484 366.875  c
132.338 366.385 132.140 366.041 131.890 365.843  c
131.724 365.708 131.515 365.640 131.265 365.640  c
130.984 365.640 130.729 365.765 130.500 366.015  c
130.197 366.369 129.992 366.924 129.882 367.679  c
129.773 368.434 129.718 369.177 129.718 369.906  c
h
136.125 372.765 m
136.322 372.765 136.489 372.835 136.625 372.976  c
136.760 373.117 136.828 373.281 136.828 373.468  c
136.828 373.666 136.760 373.833 136.625 373.968  c
136.489 374.104 136.322 374.171 136.125 374.171  c
135.927 374.171 135.760 374.104 135.625 373.968  c
135.489 373.833 135.421 373.666 135.421 373.468  c
135.421 373.270 135.489 373.104 135.625 372.968  c
135.760 372.833 135.927 372.765 136.125 372.765  c
h
138.437 374.171 m
138.437 373.937 l
138.989 373.937 139.502 373.812 139.976 373.562  c
140.450 373.312 140.908 372.877 141.351 372.257  c
141.794 371.638 142.099 370.958 142.265 370.218  c
141.599 370.645 141.000 370.859 140.468 370.859  c
139.864 370.859 139.346 370.627 138.914 370.164  c
138.481 369.700 138.265 369.078 138.265 368.296  c
138.265 367.546 138.479 366.875 138.906 366.281  c
139.427 365.572 140.109 365.218 140.953 365.218  c
141.661 365.218 142.265 365.510 142.765 366.093  c
143.380 366.812 143.687 367.703 143.687 368.765  c
143.687 369.724 143.453 370.617 142.984 371.445  c
142.515 372.273 141.864 372.958 141.031 373.500  c
140.343 373.947 139.599 374.171 138.796 374.171  c
138.437 374.171 l
h
142.375 369.750 m
142.447 369.197 142.484 368.760 142.484 368.437  c
142.484 368.020 142.414 367.575 142.273 367.101  c
142.132 366.627 141.934 366.263 141.679 366.007  c
141.424 365.752 141.135 365.625 140.812 365.625  c
140.437 365.625 140.106 365.794 139.820 366.132  c
139.533 366.471 139.390 366.974 139.390 367.640  c
139.390 368.536 139.578 369.234 139.953 369.734  c
140.234 370.099 140.572 370.281 140.968 370.281  c
141.166 370.281 141.398 370.234 141.664 370.140  c
141.929 370.046 142.166 369.916 142.375 369.750  c
h
144.937 374.171 m
144.937 373.937 l
145.489 373.937 146.002 373.812 146.476 373.562  c
146.950 373.312 147.408 372.877 147.851 372.257  c
148.294 371.638 148.599 370.958 148.765 370.218  c
148.099 370.645 147.500 370.859 146.968 370.859  c
146.364 370.859 145.846 370.627 145.414 370.164  c
144.981 369.700 144.765 369.078 144.765 368.296  c
144.765 367.546 144.979 366.875 145.406 366.281  c
145.927 365.572 146.609 365.218 147.453 365.218  c
148.161 365.218 148.765 365.510 149.265 366.093  c
149.880 366.812 150.187 367.703 150.187 368.765  c
150.187 369.724 149.953 370.617 149.484 371.445  c
149.015 372.273 148.364 372.958 147.531 373.500  c
146.843 373.947 146.099 374.171 145.296 374.171  c
144.937 374.171 l
h
148.875 369.750 m
148.947 369.197 148.984 368.760 148.984 368.437  c
148.984 368.020 148.914 367.575 148.773 367.101  c
148.632 366.627 148.434 366.263 148.179 366.007  c
147.924 365.752 147.635 365.625 147.312 365.625  c
146.937 365.625 146.606 365.794 146.320 366.132  c
146.033 366.471 145.890 366.974 145.890 367.640  c
145.890 368.536 146.078 369.234 146.453 369.734  c
146.734 370.099 147.072 370.281 147.468 370.281  c
147.666 370.281 147.898 370.234 148.164 370.140  c
148.429 370.046 148.666 369.916 148.875 369.750  c
h
153.250 369.671 m
152.562 369.109 152.119 368.658 151.921 368.320  c
151.724 367.981 151.625 367.630 151.625 367.265  c
151.625 366.703 151.841 366.221 152.273 365.820  c
152.705 365.419 153.281 365.218 154.000 365.218  c
154.697 365.218 155.257 365.406 155.679 365.781  c
156.101 366.156 156.312 366.583 156.312 367.062  c
156.312 367.385 156.197 367.713 155.968 368.046  c
155.739 368.380 155.265 368.776 154.546 369.234  c
155.286 369.807 155.776 370.260 156.015 370.593  c
156.338 371.020 156.500 371.474 156.500 371.953  c
156.500 372.557 156.270 373.075 155.812 373.507  c
155.354 373.940 154.750 374.156 154.000 374.156  c
153.177 374.156 152.536 373.901 152.078 373.390  c
151.713 372.974 151.531 372.520 151.531 372.031  c
151.531 371.656 151.661 371.281 151.921 370.906  c
152.182 370.531 152.625 370.119 153.250 369.671  c
h
154.234 368.984 m
154.744 368.526 155.067 368.164 155.203 367.898  c
155.338 367.632 155.406 367.333 155.406 367.000  c
155.406 366.562 155.281 366.216 155.031 365.960  c
154.781 365.705 154.442 365.578 154.015 365.578  c
153.578 365.578 153.224 365.703 152.953 365.953  c
152.682 366.203 152.546 366.494 152.546 366.828  c
152.546 367.046 152.604 367.268 152.718 367.492  c
152.833 367.716 152.994 367.927 153.203 368.125  c
154.234 368.984 l
h
153.546 369.906 m
153.192 370.197 152.932 370.518 152.765 370.867  c
152.599 371.216 152.515 371.593 152.515 372.000  c
152.515 372.552 152.664 372.992 152.960 373.320  c
153.257 373.648 153.635 373.812 154.093 373.812  c
154.552 373.812 154.919 373.682 155.195 373.421  c
155.471 373.161 155.609 372.849 155.609 372.484  c
155.609 372.182 155.526 371.906 155.359 371.656  c
155.067 371.208 154.463 370.625 153.546 369.906  c
h
162.890 365.390 m
162.390 366.468 l
159.812 366.468 l
159.250 367.625 l
160.364 367.791 161.250 368.208 161.906 368.875  c
162.468 369.447 162.750 370.125 162.750 370.906  c
162.750 371.364 162.658 371.786 162.476 372.171  c
162.294 372.557 162.062 372.885 161.781 373.156  c
161.500 373.427 161.187 373.640 160.843 373.796  c
160.364 374.036 159.864 374.156 159.343 374.156  c
158.833 374.156 158.460 374.067 158.226 373.890  c
157.992 373.713 157.875 373.520 157.875 373.312  c
157.875 373.187 157.924 373.080 158.023 372.992  c
158.122 372.903 158.244 372.859 158.390 372.859  c
158.494 372.859 158.588 372.875 158.671 372.906  c
158.755 372.937 158.895 373.026 159.093 373.171  c
159.416 373.390 159.739 373.500 160.062 373.500  c
160.562 373.500 160.997 373.312 161.367 372.937  c
161.737 372.562 161.921 372.104 161.921 371.562  c
161.921 371.041 161.755 370.557 161.421 370.109  c
161.088 369.661 160.630 369.312 160.046 369.062  c
159.578 368.875 158.947 368.765 158.156 368.734  c
159.812 365.390 l
162.890 365.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
221.497 353.000 m
221.497 358.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
210.468 369.750 m
210.468 368.770 210.617 367.924 210.914 367.210  c
211.210 366.497 211.604 365.968 212.093 365.625  c
212.479 365.354 212.875 365.218 213.281 365.218  c
213.937 365.218 214.526 365.552 215.046 366.218  c
215.703 367.052 216.031 368.182 216.031 369.609  c
216.031 370.609 215.888 371.458 215.601 372.156  c
215.315 372.854 214.947 373.362 214.500 373.679  c
214.052 373.997 213.625 374.156 213.218 374.156  c
212.395 374.156 211.708 373.671 211.156 372.703  c
210.697 371.880 210.468 370.895 210.468 369.750  c
h
211.718 369.906 m
211.718 371.093 211.864 372.062 212.156 372.812  c
212.395 373.437 212.755 373.750 213.234 373.750  c
213.463 373.750 213.700 373.648 213.945 373.445  c
214.190 373.242 214.375 372.895 214.500 372.406  c
214.697 371.687 214.796 370.661 214.796 369.328  c
214.796 368.349 214.692 367.531 214.484 366.875  c
214.338 366.385 214.140 366.041 213.890 365.843  c
213.724 365.708 213.515 365.640 213.265 365.640  c
212.984 365.640 212.729 365.765 212.500 366.015  c
212.197 366.369 211.992 366.924 211.882 367.679  c
211.773 368.434 211.718 369.177 211.718 369.906  c
h
218.125 372.765 m
218.322 372.765 218.489 372.835 218.625 372.976  c
218.760 373.117 218.828 373.281 218.828 373.468  c
218.828 373.666 218.760 373.833 218.625 373.968  c
218.489 374.104 218.322 374.171 218.125 374.171  c
217.927 374.171 217.760 374.104 217.625 373.968  c
217.489 373.833 217.421 373.666 217.421 373.468  c
217.421 373.270 217.489 373.104 217.625 372.968  c
217.760 372.833 217.927 372.765 218.125 372.765  c
h
220.437 374.171 m
220.437 373.937 l
220.989 373.937 221.502 373.812 221.976 373.562  c
222.450 373.312 222.908 372.877 223.351 372.257  c
223.794 371.638 224.099 370.958 224.265 370.218  c
223.599 370.645 223.000 370.859 222.468 370.859  c
221.864 370.859 221.346 370.627 220.914 370.164  c
220.481 369.700 220.265 369.078 220.265 368.296  c
220.265 367.546 220.479 366.875 220.906 366.281  c
221.427 365.572 222.109 365.218 222.953 365.218  c
223.661 365.218 224.265 365.510 224.765 366.093  c
225.380 366.812 225.687 367.703 225.687 368.765  c
225.687 369.724 225.453 370.617 224.984 371.445  c
224.515 372.273 223.864 372.958 223.031 373.500  c
222.343 373.947 221.599 374.171 220.796 374.171  c
220.437 374.171 l
h
224.375 369.750 m
224.447 369.197 224.484 368.760 224.484 368.437  c
224.484 368.020 224.414 367.575 224.273 367.101  c
224.132 366.627 223.934 366.263 223.679 366.007  c
223.424 365.752 223.135 365.625 222.812 365.625  c
222.437 365.625 222.106 365.794 221.820 366.132  c
221.533 366.471 221.390 366.974 221.390 367.640  c
221.390 368.536 221.578 369.234 221.953 369.734  c
222.234 370.099 222.572 370.281 222.968 370.281  c
223.166 370.281 223.398 370.234 223.664 370.140  c
223.929 370.046 224.166 369.916 224.375 369.750  c
h
226.937 374.171 m
226.937 373.937 l
227.489 373.937 228.002 373.812 228.476 373.562  c
228.950 373.312 229.408 372.877 229.851 372.257  c
230.294 371.638 230.599 370.958 230.765 370.218  c
230.099 370.645 229.500 370.859 228.968 370.859  c
228.364 370.859 227.846 370.627 227.414 370.164  c
226.981 369.700 226.765 369.078 226.765 368.296  c
226.765 367.546 226.979 366.875 227.406 366.281  c
227.927 365.572 228.609 365.218 229.453 365.218  c
230.161 365.218 230.765 365.510 231.265 366.093  c
231.880 366.812 232.187 367.703 232.187 368.765  c
232.187 369.724 231.953 370.617 231.484 371.445  c
231.015 372.273 230.364 372.958 229.531 373.500  c
228.843 373.947 228.099 374.171 227.296 374.171  c
226.937 374.171 l
h
230.875 369.750 m
230.947 369.197 230.984 368.760 230.984 368.437  c
230.984 368.020 230.914 367.575 230.773 367.101  c
230.632 366.627 230.434 366.263 230.179 366.007  c
229.924 365.752 229.635 365.625 229.312 365.625  c
228.937 365.625 228.606 365.794 228.320 366.132  c
228.033 366.471 227.890 366.974 227.890 367.640  c
227.890 368.536 228.078 369.234 228.453 369.734  c
228.734 370.099 229.072 370.281 229.468 370.281  c
229.666 370.281 229.898 370.234 230.164 370.140  c
230.429 370.046 230.666 369.916 230.875 369.750  c
h
233.437 374.171 m
233.437 373.937 l
233.989 373.937 234.502 373.812 234.976 373.562  c
235.450 373.312 235.908 372.877 236.351 372.257  c
236.794 371.638 237.099 370.958 237.265 370.218  c
236.599 370.645 236.000 370.859 235.468 370.859  c
234.864 370.859 234.346 370.627 233.914 370.164  c
233.481 369.700 233.265 369.078 233.265 368.296  c
233.265 367.546 233.479 366.875 233.906 366.281  c
234.427 365.572 235.109 365.218 235.953 365.218  c
236.661 365.218 237.265 365.510 237.765 366.093  c
238.380 366.812 238.687 367.703 238.687 368.765  c
238.687 369.724 238.453 370.617 237.984 371.445  c
237.515 372.273 236.864 372.958 236.031 373.500  c
235.343 373.947 234.599 374.171 233.796 374.171  c
233.437 374.171 l
h
237.375 369.750 m
237.447 369.197 237.484 368.760 237.484 368.437  c
237.484 368.020 237.414 367.575 237.273 367.101  c
237.132 366.627 236.934 366.263 236.679 366.007  c
236.424 365.752 236.135 365.625 235.812 365.625  c
235.437 365.625 235.106 365.794 234.820 366.132  c
234.533 366.471 234.390 366.974 234.390 367.640  c
234.390 368.536 234.578 369.234 234.953 369.734  c
235.234 370.099 235.572 370.281 235.968 370.281  c
236.166 370.281 236.398 370.234 236.664 370.140  c
236.929 370.046 237.166 369.916 237.375 369.750  c
h
239.718 369.750 m
239.718 368.770 239.867 367.924 240.164 367.210  c
240.460 366.497 240.854 365.968 241.343 365.625  c
241.729 365.354 242.125 365.218 242.531 365.218  c
243.187 365.218 243.776 365.552 244.296 366.218  c
244.953 367.052 245.281 368.182 245.281 369.609  c
245.281 370.609 245.138 371.458 244.851 372.156  c
244.565 372.854 244.197 373.362 243.750 373.679  c
243.302 373.997 242.875 374.156 242.468 374.156  c
241.645 374.156 240.958 373.671 240.406 372.703  c
239.947 371.880 239.718 370.895 239.718 369.750  c
h
240.968 369.906 m
240.968 371.093 241.114 372.062 241.406 372.812  c
241.645 373.437 242.005 373.750 242.484 373.750  c
242.713 373.750 242.950 373.648 243.195 373.445  c
243.440 373.242 243.625 372.895 243.750 372.406  c
243.947 371.687 244.046 370.661 244.046 369.328  c
244.046 368.349 243.942 367.531 243.734 366.875  c
243.588 366.385 243.390 366.041 243.140 365.843  c
242.974 365.708 242.765 365.640 242.515 365.640  c
242.234 365.640 241.979 365.765 241.750 366.015  c
241.447 366.369 241.242 366.924 241.132 367.679  c
241.023 368.434 240.968 369.177 240.968 369.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
303.746 353.000 m
303.746 358.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
292.468 369.750 m
292.468 368.770 292.617 367.924 292.914 367.210  c
293.210 366.497 293.604 365.968 294.093 365.625  c
294.479 365.354 294.875 365.218 295.281 365.218  c
295.937 365.218 296.526 365.552 297.046 366.218  c
297.703 367.052 298.031 368.182 298.031 369.609  c
298.031 370.609 297.888 371.458 297.601 372.156  c
297.315 372.854 296.947 373.362 296.500 373.679  c
296.052 373.997 295.625 374.156 295.218 374.156  c
294.395 374.156 293.708 373.671 293.156 372.703  c
292.697 371.880 292.468 370.895 292.468 369.750  c
h
293.718 369.906 m
293.718 371.093 293.864 372.062 294.156 372.812  c
294.395 373.437 294.755 373.750 295.234 373.750  c
295.463 373.750 295.700 373.648 295.945 373.445  c
296.190 373.242 296.375 372.895 296.500 372.406  c
296.697 371.687 296.796 370.661 296.796 369.328  c
296.796 368.349 296.692 367.531 296.484 366.875  c
296.338 366.385 296.140 366.041 295.890 365.843  c
295.724 365.708 295.515 365.640 295.265 365.640  c
294.984 365.640 294.729 365.765 294.500 366.015  c
294.197 366.369 293.992 366.924 293.882 367.679  c
293.773 368.434 293.718 369.177 293.718 369.906  c
h
300.125 372.765 m
300.322 372.765 300.489 372.835 300.625 372.976  c
300.760 373.117 300.828 373.281 300.828 373.468  c
300.828 373.666 300.760 373.833 300.625 373.968  c
300.489 374.104 300.322 374.171 300.125 374.171  c
299.927 374.171 299.760 374.104 299.625 373.968  c
299.489 373.833 299.421 373.666 299.421 373.468  c
299.421 373.270 299.489 373.104 299.625 372.968  c
299.760 372.833 299.927 372.765 300.125 372.765  c
h
302.437 374.171 m
302.437 373.937 l
302.989 373.937 303.502 373.812 303.976 373.562  c
304.450 373.312 304.908 372.877 305.351 372.257  c
305.794 371.638 306.099 370.958 306.265 370.218  c
305.599 370.645 305.000 370.859 304.468 370.859  c
303.864 370.859 303.346 370.627 302.914 370.164  c
302.481 369.700 302.265 369.078 302.265 368.296  c
302.265 367.546 302.479 366.875 302.906 366.281  c
303.427 365.572 304.109 365.218 304.953 365.218  c
305.661 365.218 306.265 365.510 306.765 366.093  c
307.380 366.812 307.687 367.703 307.687 368.765  c
307.687 369.724 307.453 370.617 306.984 371.445  c
306.515 372.273 305.864 372.958 305.031 373.500  c
304.343 373.947 303.599 374.171 302.796 374.171  c
302.437 374.171 l
h
306.375 369.750 m
306.447 369.197 306.484 368.760 306.484 368.437  c
306.484 368.020 306.414 367.575 306.273 367.101  c
306.132 366.627 305.934 366.263 305.679 366.007  c
305.424 365.752 305.135 365.625 304.812 365.625  c
304.437 365.625 304.106 365.794 303.820 366.132  c
303.533 366.471 303.390 366.974 303.390 367.640  c
303.390 368.536 303.578 369.234 303.953 369.734  c
304.234 370.099 304.572 370.281 304.968 370.281  c
305.166 370.281 305.398 370.234 305.664 370.140  c
305.929 370.046 306.166 369.916 306.375 369.750  c
h
308.937 374.171 m
308.937 373.937 l
309.489 373.937 310.002 373.812 310.476 373.562  c
310.950 373.312 311.408 372.877 311.851 372.257  c
312.294 371.638 312.599 370.958 312.765 370.218  c
312.099 370.645 311.500 370.859 310.968 370.859  c
310.364 370.859 309.846 370.627 309.414 370.164  c
308.981 369.700 308.765 369.078 308.765 368.296  c
308.765 367.546 308.979 366.875 309.406 366.281  c
309.927 365.572 310.609 365.218 311.453 365.218  c
312.161 365.218 312.765 365.510 313.265 366.093  c
313.880 366.812 314.187 367.703 314.187 368.765  c
314.187 369.724 313.953 370.617 313.484 371.445  c
313.015 372.273 312.364 372.958 311.531 373.500  c
310.843 373.947 310.099 374.171 309.296 374.171  c
308.937 374.171 l
h
312.875 369.750 m
312.947 369.197 312.984 368.760 312.984 368.437  c
312.984 368.020 312.914 367.575 312.773 367.101  c
312.632 366.627 312.434 366.263 312.179 366.007  c
311.924 365.752 311.635 365.625 311.312 365.625  c
310.937 365.625 310.606 365.794 310.320 366.132  c
310.033 366.471 309.890 366.974 309.890 367.640  c
309.890 368.536 310.078 369.234 310.453 369.734  c
310.734 370.099 311.072 370.281 311.468 370.281  c
311.666 370.281 311.898 370.234 312.164 370.140  c
312.429 370.046 312.666 369.916 312.875 369.750  c
h
315.437 374.171 m
315.437 373.937 l
315.989 373.937 316.502 373.812 316.976 373.562  c
317.450 373.312 317.908 372.877 318.351 372.257  c
318.794 371.638 319.099 370.958 319.265 370.218  c
318.599 370.645 318.000 370.859 317.468 370.859  c
316.864 370.859 316.346 370.627 315.914 370.164  c
315.481 369.700 315.265 369.078 315.265 368.296  c
315.265 367.546 315.479 366.875 315.906 366.281  c
316.427 365.572 317.109 365.218 317.953 365.218  c
318.661 365.218 319.265 365.510 319.765 366.093  c
320.380 366.812 320.687 367.703 320.687 368.765  c
320.687 369.724 320.453 370.617 319.984 371.445  c
319.515 372.273 318.864 372.958 318.031 373.500  c
317.343 373.947 316.599 374.171 315.796 374.171  c
315.437 374.171 l
h
319.375 369.750 m
319.447 369.197 319.484 368.760 319.484 368.437  c
319.484 368.020 319.414 367.575 319.273 367.101  c
319.132 366.627 318.934 366.263 318.679 366.007  c
318.424 365.752 318.135 365.625 317.812 365.625  c
317.437 365.625 317.106 365.794 316.820 366.132  c
316.533 366.471 316.390 366.974 316.390 367.640  c
316.390 368.536 316.578 369.234 316.953 369.734  c
317.234 370.099 317.572 370.281 317.968 370.281  c
318.166 370.281 318.398 370.234 318.664 370.140  c
318.929 370.046 319.166 369.916 319.375 369.750  c
h
326.890 365.390 m
326.390 366.468 l
323.812 366.468 l
323.250 367.625 l
324.364 367.791 325.250 368.208 325.906 368.875  c
326.468 369.447 326.750 370.125 326.750 370.906  c
326.750 371.364 326.658 371.786 326.476 372.171  c
326.294 372.557 326.062 372.885 325.781 373.156  c
325.500 373.427 325.187 373.640 324.843 373.796  c
324.364 374.036 323.864 374.156 323.343 374.156  c
322.833 374.156 322.460 374.067 322.226 373.890  c
321.992 373.713 321.875 373.520 321.875 373.312  c
321.875 373.187 321.924 373.080 322.023 372.992  c
322.122 372.903 322.244 372.859 322.390 372.859  c
322.494 372.859 322.588 372.875 322.671 372.906  c
322.755 372.937 322.895 373.026 323.093 373.171  c
323.416 373.390 323.739 373.500 324.062 373.500  c
324.562 373.500 324.997 373.312 325.367 372.937  c
325.737 372.562 325.921 372.104 325.921 371.562  c
325.921 371.041 325.755 370.557 325.421 370.109  c
325.088 369.661 324.630 369.312 324.046 369.062  c
323.578 368.875 322.947 368.765 322.156 368.734  c
323.812 365.390 l
326.890 365.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 353.000 m
385.994 358.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
388.531 366.234 m
390.625 365.218 l
390.828 365.218 l
390.828 372.484 l
390.828 372.963 390.849 373.263 390.890 373.382  c
390.932 373.502 391.015 373.593 391.140 373.656  c
391.265 373.718 391.520 373.755 391.906 373.765  c
391.906 374.000 l
388.671 374.000 l
388.671 373.765 l
389.078 373.755 389.341 373.718 389.460 373.656  c
389.580 373.593 389.664 373.510 389.710 373.406  c
389.757 373.302 389.781 372.994 389.781 372.484  c
389.781 367.843 l
389.781 367.208 389.760 366.802 389.718 366.625  c
389.687 366.489 389.632 366.390 389.554 366.328  c
389.476 366.265 389.380 366.234 389.265 366.234  c
389.109 366.234 388.895 366.302 388.625 366.437  c
388.531 366.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
54.0000 30.8080 m
51.4000 30.8080 l
S
newpath
54.0000 53.6074 m
51.4000 53.6074 l
S
newpath
54.0000 76.4068 m
51.4000 76.4068 l
S
newpath
54.0000 99.2063 m
51.4000 99.2063 l
S
newpath
54.0000 144.805 m
51.4000 144.805 l
S
newpath
54.0000 167.604 m
51.4000 167.604 l
S
newpath
54.0000 190.404 m
51.4000 190.404 l
S
newpath
54.0000 213.203 m
51.4000 213.203 l
S
newpath
54.0000 258.802 m
51.4000 258.802 l
S
newpath
54.0000 281.601 m
51.4000 281.601 l
S
newpath
54.0000 304.401 m
51.4000 304.401 l
S
newpath
54.0000 327.200 m
51.4000 327.200 l
S
newpath
54.0000 353.000 m
54.0000 8.00863 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 172 21 15 rc
newpath
5.28125 178.656 m
7.10937 178.250 l
7.24479 178.562 7.35416 178.885 7.43750 179.218  c
7.55208 179.697 7.64062 180.265 7.70312 180.921  c
7.74479 181.244 7.79166 181.942 7.84375 183.015  c
8.37500 182.432 8.69270 182.067 8.79687 181.921  c
9.35937 181.161 9.68229 180.718 9.76562 180.593  c
9.90104 180.364 9.99479 180.166 10.0468 180.000  c
10.0989 179.875 10.1250 179.755 10.1250 179.640  c
10.1250 179.526 10.0260 179.398 9.82812 179.257  c
9.63020 179.117 9.53125 178.958 9.53125 178.781  c
9.53125 178.645 9.58593 178.523 9.69531 178.414  c
9.80468 178.304 9.93229 178.250 10.0781 178.250  c
10.2552 178.250 10.4114 178.322 10.5468 178.468  c
10.6822 178.614 10.7500 178.796 10.7500 179.015  c
10.7500 179.234 10.7187 179.442 10.6562 179.640  c
10.5416 179.963 10.3333 180.356 10.0312 180.820  c
9.72916 181.283 9.24479 181.901 8.57812 182.671  c
8.49479 182.776 8.02604 183.270 7.17187 184.156  c
6.93750 184.156 l
6.83333 181.479 6.61979 179.807 6.29687 179.140  c
6.19270 178.921 6.02083 178.812 5.78125 178.812  c
5.66666 178.812 5.51562 178.833 5.32812 178.875  c
5.28125 178.656 l
h
15.2543 184.000 m
10.9731 184.000 l
10.9731 183.765 l
13.1606 181.849 14.6033 180.349 15.3012 179.265  c
15.6241 178.765 15.7856 178.234 15.7856 177.671  c
15.7856 177.234 15.6502 176.877 15.3793 176.601  c
15.1085 176.325 14.7596 176.187 14.3325 176.187  c
13.7387 176.187 13.2491 176.474 12.8637 177.046  c
12.6293 176.937 l
12.8481 176.395 13.1658 175.974 13.5825 175.671  c
13.9991 175.369 14.4471 175.218 14.9262 175.218  c
15.4783 175.218 15.9392 175.406 16.3090 175.781  c
16.6788 176.156 16.8637 176.609 16.8637 177.140  c
16.8637 177.515 16.7960 177.859 16.6606 178.171  c
16.4627 178.671 16.0929 179.224 15.5512 179.828  c
14.7179 180.776 13.6085 181.859 12.2231 183.078  c
14.3793 183.078 l
14.7231 183.078 15.0096 183.005 15.2387 182.859  c
15.4679 182.713 15.6293 182.520 15.7231 182.281  c
15.9731 182.281 l
15.2543 184.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
54.0000 350.000 m
48.8000 350.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.4687 355.750 m
32.4687 354.770 32.6171 353.924 32.9140 353.210  c
33.2109 352.497 33.6041 351.968 34.0937 351.625  c
34.4791 351.354 34.8750 351.218 35.2812 351.218  c
35.9375 351.218 36.5260 351.552 37.0468 352.218  c
37.7031 353.052 38.0312 354.182 38.0312 355.609  c
38.0312 356.609 37.8880 357.458 37.6015 358.156  c
37.3151 358.854 36.9479 359.362 36.5000 359.679  c
36.0520 359.997 35.6250 360.156 35.2187 360.156  c
34.3958 360.156 33.7083 359.671 33.1562 358.703  c
32.6979 357.880 32.4687 356.895 32.4687 355.750  c
h
33.7187 355.906 m
33.7187 357.093 33.8645 358.062 34.1562 358.812  c
34.3958 359.437 34.7552 359.750 35.2343 359.750  c
35.4635 359.750 35.7005 359.648 35.9453 359.445  c
36.1901 359.242 36.3750 358.895 36.5000 358.406  c
36.6979 357.687 36.7968 356.661 36.7968 355.328  c
36.7968 354.349 36.6927 353.531 36.4843 352.875  c
36.3385 352.385 36.1406 352.041 35.8906 351.843  c
35.7239 351.708 35.5156 351.640 35.2656 351.640  c
34.9843 351.640 34.7291 351.765 34.5000 352.015  c
34.1979 352.369 33.9921 352.924 33.8828 353.679  c
33.7734 354.434 33.7187 355.177 33.7187 355.906  c
h
40.1250 358.765 m
40.3229 358.765 40.4895 358.835 40.6250 358.976  c
40.7604 359.117 40.8281 359.281 40.8281 359.468  c
40.8281 359.666 40.7604 359.833 40.6250 359.968  c
40.4895 360.104 40.3229 360.171 40.1250 360.171  c
39.9270 360.171 39.7604 360.104 39.6250 359.968  c
39.4895 359.833 39.4218 359.666 39.4218 359.468  c
39.4218 359.270 39.4895 359.104 39.6250 358.968  c
39.7604 358.833 39.9270 358.765 40.1250 358.765  c
h
42.4062 353.031 m
42.6562 352.447 42.9687 352.000 43.3437 351.687  c
43.7187 351.375 44.1822 351.218 44.7343 351.218  c
45.4322 351.218 45.9635 351.442 46.3281 351.890  c
46.6093 352.224 46.7500 352.578 46.7500 352.953  c
46.7500 353.588 46.3541 354.239 45.5625 354.906  c
46.0937 355.114 46.4947 355.411 46.7656 355.796  c
47.0364 356.182 47.1718 356.635 47.1718 357.156  c
47.1718 357.895 46.9322 358.536 46.4531 359.078  c
45.8385 359.796 44.9479 360.156 43.7812 360.156  c
43.1979 360.156 42.8020 360.083 42.5937 359.937  c
42.3854 359.791 42.2812 359.635 42.2812 359.468  c
42.2812 359.343 42.3307 359.237 42.4296 359.148  c
42.5286 359.059 42.6458 359.015 42.7812 359.015  c
42.8854 359.015 42.9947 359.031 43.1093 359.062  c
43.1822 359.083 43.3463 359.158 43.6015 359.289  c
43.8567 359.419 44.0312 359.500 44.1250 359.531  c
44.2812 359.572 44.4479 359.593 44.6250 359.593  c
45.0520 359.593 45.4270 359.427 45.7500 359.093  c
46.0729 358.760 46.2343 358.364 46.2343 357.906  c
46.2343 357.572 46.1614 357.250 46.0156 356.937  c
45.9010 356.697 45.7760 356.515 45.6406 356.390  c
45.4635 356.224 45.2161 356.072 44.8984 355.937  c
44.5807 355.802 44.2552 355.734 43.9218 355.734  c
43.7187 355.734 l
43.7187 355.531 l
44.0520 355.489 44.3880 355.369 44.7265 355.171  c
45.0651 354.974 45.3099 354.737 45.4609 354.460  c
45.6119 354.184 45.6875 353.875 45.6875 353.531  c
45.6875 353.104 45.5520 352.755 45.2812 352.484  c
45.0104 352.213 44.6718 352.078 44.2656 352.078  c
43.6093 352.078 43.0625 352.427 42.6250 353.125  c
42.4062 353.031 l
h
53.8906 351.390 m
53.3906 352.468 l
50.8125 352.468 l
50.2500 353.625 l
51.3645 353.791 52.2500 354.208 52.9062 354.875  c
53.4687 355.447 53.7500 356.125 53.7500 356.906  c
53.7500 357.364 53.6588 357.786 53.4765 358.171  c
53.2942 358.557 53.0625 358.885 52.7812 359.156  c
52.5000 359.427 52.1875 359.640 51.8437 359.796  c
51.3645 360.036 50.8645 360.156 50.3437 360.156  c
49.8333 360.156 49.4609 360.067 49.2265 359.890  c
48.9921 359.713 48.8750 359.520 48.8750 359.312  c
48.8750 359.187 48.9244 359.080 49.0234 358.992  c
49.1224 358.903 49.2447 358.859 49.3906 358.859  c
49.4947 358.859 49.5885 358.875 49.6718 358.906  c
49.7552 358.937 49.8958 359.026 50.0937 359.171  c
50.4166 359.390 50.7395 359.500 51.0625 359.500  c
51.5625 359.500 51.9974 359.312 52.3671 358.937  c
52.7369 358.562 52.9218 358.104 52.9218 357.562  c
52.9218 357.041 52.7552 356.557 52.4218 356.109  c
52.0885 355.661 51.6302 355.312 51.0468 355.062  c
50.5781 354.875 49.9479 354.765 49.1562 354.734  c
50.8125 351.390 l
53.8906 351.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 236.002 m
48.8000 236.002 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.4687 241.750 m
32.4687 240.770 32.6171 239.924 32.9140 239.210  c
33.2109 238.497 33.6041 237.968 34.0937 237.625  c
34.4791 237.354 34.8750 237.218 35.2812 237.218  c
35.9375 237.218 36.5260 237.552 37.0468 238.218  c
37.7031 239.052 38.0312 240.182 38.0312 241.609  c
38.0312 242.609 37.8880 243.458 37.6015 244.156  c
37.3151 244.854 36.9479 245.362 36.5000 245.679  c
36.0520 245.997 35.6250 246.156 35.2187 246.156  c
34.3958 246.156 33.7083 245.671 33.1562 244.703  c
32.6979 243.880 32.4687 242.895 32.4687 241.750  c
h
33.7187 241.906 m
33.7187 243.093 33.8645 244.062 34.1562 244.812  c
34.3958 245.437 34.7552 245.750 35.2343 245.750  c
35.4635 245.750 35.7005 245.648 35.9453 245.445  c
36.1901 245.242 36.3750 244.895 36.5000 244.406  c
36.6979 243.687 36.7968 242.661 36.7968 241.328  c
36.7968 240.349 36.6927 239.531 36.4843 238.875  c
36.3385 238.385 36.1406 238.041 35.8906 237.843  c
35.7239 237.708 35.5156 237.640 35.2656 237.640  c
34.9843 237.640 34.7291 237.765 34.5000 238.015  c
34.1979 238.369 33.9921 238.924 33.8828 239.679  c
33.7734 240.434 33.7187 241.177 33.7187 241.906  c
h
40.1250 244.765 m
40.3229 244.765 40.4895 244.835 40.6250 244.976  c
40.7604 245.117 40.8281 245.281 40.8281 245.468  c
40.8281 245.666 40.7604 245.833 40.6250 245.968  c
40.4895 246.104 40.3229 246.171 40.1250 246.171  c
39.9270 246.171 39.7604 246.104 39.6250 245.968  c
39.4895 245.833 39.4218 245.666 39.4218 245.468  c
39.4218 245.270 39.4895 245.104 39.6250 244.968  c
39.7604 244.833 39.9270 244.765 40.1250 244.765  c
h
47.7968 242.828 m
47.7968 243.734 l
46.6406 243.734 l
46.6406 246.000 l
45.5937 246.000 l
45.5937 243.734 l
41.9531 243.734 l
41.9531 242.921 l
45.9531 237.218 l
46.6406 237.218 l
46.6406 242.828 l
47.7968 242.828 l
h
45.5937 242.828 m
45.5937 238.546 l
42.5781 242.828 l
45.5937 242.828 l
h
48.7187 241.750 m
48.7187 240.770 48.8671 239.924 49.1640 239.210  c
49.4609 238.497 49.8541 237.968 50.3437 237.625  c
50.7291 237.354 51.1250 237.218 51.5312 237.218  c
52.1875 237.218 52.7760 237.552 53.2968 238.218  c
53.9531 239.052 54.2812 240.182 54.2812 241.609  c
54.2812 242.609 54.1380 243.458 53.8515 244.156  c
53.5651 244.854 53.1979 245.362 52.7500 245.679  c
52.3020 245.997 51.8750 246.156 51.4687 246.156  c
50.6458 246.156 49.9583 245.671 49.4062 244.703  c
48.9479 243.880 48.7187 242.895 48.7187 241.750  c
h
49.9687 241.906 m
49.9687 243.093 50.1145 244.062 50.4062 244.812  c
50.6458 245.437 51.0052 245.750 51.4843 245.750  c
51.7135 245.750 51.9505 245.648 52.1953 245.445  c
52.4401 245.242 52.6250 244.895 52.7500 244.406  c
52.9479 243.687 53.0468 242.661 53.0468 241.328  c
53.0468 240.349 52.9427 239.531 52.7343 238.875  c
52.5885 238.385 52.3906 238.041 52.1406 237.843  c
51.9739 237.708 51.7656 237.640 51.5156 237.640  c
51.2343 237.640 50.9791 237.765 50.7500 238.015  c
50.4479 238.369 50.2421 238.924 50.1328 239.679  c
50.0234 240.434 49.9687 241.177 49.9687 241.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 122.005 m
48.8000 122.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.4687 127.750 m
32.4687 126.770 32.6171 125.924 32.9140 125.210  c
33.2109 124.497 33.6041 123.968 34.0937 123.625  c
34.4791 123.354 34.8750 123.218 35.2812 123.218  c
35.9375 123.218 36.5260 123.552 37.0468 124.218  c
37.7031 125.052 38.0312 126.182 38.0312 127.609  c
38.0312 128.609 37.8880 129.458 37.6015 130.156  c
37.3151 130.854 36.9479 131.362 36.5000 131.679  c
36.0520 131.997 35.6250 132.156 35.2187 132.156  c
34.3958 132.156 33.7083 131.671 33.1562 130.703  c
32.6979 129.880 32.4687 128.895 32.4687 127.750  c
h
33.7187 127.906 m
33.7187 129.093 33.8645 130.062 34.1562 130.812  c
34.3958 131.437 34.7552 131.750 35.2343 131.750  c
35.4635 131.750 35.7005 131.648 35.9453 131.445  c
36.1901 131.242 36.3750 130.895 36.5000 130.406  c
36.6979 129.687 36.7968 128.661 36.7968 127.328  c
36.7968 126.349 36.6927 125.531 36.4843 124.875  c
36.3385 124.385 36.1406 124.041 35.8906 123.843  c
35.7239 123.708 35.5156 123.640 35.2656 123.640  c
34.9843 123.640 34.7291 123.765 34.5000 124.015  c
34.1979 124.369 33.9921 124.924 33.8828 125.679  c
33.7734 126.434 33.7187 127.177 33.7187 127.906  c
h
40.1250 130.765 m
40.3229 130.765 40.4895 130.835 40.6250 130.976  c
40.7604 131.117 40.8281 131.281 40.8281 131.468  c
40.8281 131.666 40.7604 131.833 40.6250 131.968  c
40.4895 132.104 40.3229 132.171 40.1250 132.171  c
39.9270 132.171 39.7604 132.104 39.6250 131.968  c
39.4895 131.833 39.4218 131.666 39.4218 131.468  c
39.4218 131.270 39.4895 131.104 39.6250 130.968  c
39.7604 130.833 39.9270 130.765 40.1250 130.765  c
h
47.7968 128.828 m
47.7968 129.734 l
46.6406 129.734 l
46.6406 132.000 l
45.5937 132.000 l
45.5937 129.734 l
41.9531 129.734 l
41.9531 128.921 l
45.9531 123.218 l
46.6406 123.218 l
46.6406 128.828 l
47.7968 128.828 l
h
45.5937 128.828 m
45.5937 124.546 l
42.5781 128.828 l
45.5937 128.828 l
h
53.8906 123.390 m
53.3906 124.468 l
50.8125 124.468 l
50.2500 125.625 l
51.3645 125.791 52.2500 126.208 52.9062 126.875  c
53.4687 127.447 53.7500 128.125 53.7500 128.906  c
53.7500 129.364 53.6588 129.786 53.4765 130.171  c
53.2942 130.557 53.0625 130.885 52.7812 131.156  c
52.5000 131.427 52.1875 131.640 51.8437 131.796  c
51.3645 132.036 50.8645 132.156 50.3437 132.156  c
49.8333 132.156 49.4609 132.067 49.2265 131.890  c
48.9921 131.713 48.8750 131.520 48.8750 131.312  c
48.8750 131.187 48.9244 131.080 49.0234 130.992  c
49.1224 130.903 49.2447 130.859 49.3906 130.859  c
49.4947 130.859 49.5885 130.875 49.6718 130.906  c
49.7552 130.937 49.8958 131.026 50.0937 131.171  c
50.4166 131.390 50.7395 131.500 51.0625 131.500  c
51.5625 131.500 51.9974 131.312 52.3671 130.937  c
52.7369 130.562 52.9218 130.104 52.9218 129.562  c
52.9218 129.041 52.7552 128.557 52.4218 128.109  c
52.0885 127.661 51.6302 127.312 51.0468 127.062  c
50.5781 126.875 49.9479 126.765 49.1562 126.734  c
50.8125 123.390 l
53.8906 123.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
54.0000 8.00863 m
48.8000 8.00863 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.4687 13.7500 m
32.4687 12.7708 32.6171 11.9244 32.9140 11.2109  c
33.2109 10.4974 33.6041 9.96875 34.0937 9.62500  c
34.4791 9.35416 34.8750 9.21875 35.2812 9.21875  c
35.9375 9.21875 36.5260 9.55208 37.0468 10.2187  c
37.7031 11.0520 38.0312 12.1822 38.0312 13.6093  c
38.0312 14.6093 37.8880 15.4583 37.6015 16.1562  c
37.3151 16.8541 36.9479 17.3619 36.5000 17.6796  c
36.0520 17.9974 35.6250 18.1562 35.2187 18.1562  c
34.3958 18.1562 33.7083 17.6718 33.1562 16.7031  c
32.6979 15.8802 32.4687 14.8958 32.4687 13.7500  c
h
33.7187 13.9062 m
33.7187 15.0937 33.8645 16.0625 34.1562 16.8125  c
34.3958 17.4375 34.7552 17.7500 35.2343 17.7500  c
35.4635 17.7500 35.7005 17.6484 35.9453 17.4453  c
36.1901 17.2421 36.3750 16.8958 36.5000 16.4062  c
36.6979 15.6875 36.7968 14.6614 36.7968 13.3281  c
36.7968 12.3489 36.6927 11.5312 36.4843 10.8750  c
36.3385 10.3854 36.1406 10.0416 35.8906 9.84375  c
35.7239 9.70833 35.5156 9.64062 35.2656 9.64062  c
34.9843 9.64062 34.7291 9.76562 34.5000 10.0156  c
34.1979 10.3697 33.9921 10.9244 33.8828 11.6796  c
33.7734 12.4349 33.7187 13.1770 33.7187 13.9062  c
h
40.1250 16.7656 m
40.3229 16.7656 40.4895 16.8359 40.6250 16.9765  c
40.7604 17.1171 40.8281 17.2812 40.8281 17.4687  c
40.8281 17.6666 40.7604 17.8333 40.6250 17.9687  c
40.4895 18.1041 40.3229 18.1718 40.1250 18.1718  c
39.9270 18.1718 39.7604 18.1041 39.6250 17.9687  c
39.4895 17.8333 39.4218 17.6666 39.4218 17.4687  c
39.4218 17.2708 39.4895 17.1041 39.6250 16.9687  c
39.7604 16.8333 39.9270 16.7656 40.1250 16.7656  c
h
47.3906 9.39062 m
46.8906 10.4687 l
44.3125 10.4687 l
43.7500 11.6250 l
44.8645 11.7916 45.7500 12.2083 46.4062 12.8750  c
46.9687 13.4479 47.2500 14.1250 47.2500 14.9062  c
47.2500 15.3645 47.1588 15.7864 46.9765 16.1718  c
46.7942 16.5572 46.5625 16.8854 46.2812 17.1562  c
46.0000 17.4270 45.6875 17.6406 45.3437 17.7968  c
44.8645 18.0364 44.3645 18.1562 43.8437 18.1562  c
43.3333 18.1562 42.9609 18.0677 42.7265 17.8906  c
42.4921 17.7135 42.3750 17.5208 42.3750 17.3125  c
42.3750 17.1875 42.4244 17.0807 42.5234 16.9921  c
42.6224 16.9036 42.7447 16.8593 42.8906 16.8593  c
42.9947 16.8593 43.0885 16.8750 43.1718 16.9062  c
43.2552 16.9375 43.3958 17.0260 43.5937 17.1718  c
43.9166 17.3906 44.2395 17.5000 44.5625 17.5000  c
45.0625 17.5000 45.4974 17.3125 45.8671 16.9375  c
46.2369 16.5625 46.4218 16.1041 46.4218 15.5625  c
46.4218 15.0416 46.2552 14.5572 45.9218 14.1093  c
45.5885 13.6614 45.1302 13.3125 44.5468 13.0625  c
44.0781 12.8750 43.4479 12.7656 42.6562 12.7343  c
44.3125 9.39062 l
47.3906 9.39062 l
h
48.7187 13.7500 m
48.7187 12.7708 48.8671 11.9244 49.1640 11.2109  c
49.4609 10.4974 49.8541 9.96875 50.3437 9.62500  c
50.7291 9.35416 51.1250 9.21875 51.5312 9.21875  c
52.1875 9.21875 52.7760 9.55208 53.2968 10.2187  c
53.9531 11.0520 54.2812 12.1822 54.2812 13.6093  c
54.2812 14.6093 54.1380 15.4583 53.8515 16.1562  c
53.5651 16.8541 53.1979 17.3619 52.7500 17.6796  c
52.3020 17.9974 51.8750 18.1562 51.4687 18.1562  c
50.6458 18.1562 49.9583 17.6718 49.4062 16.7031  c
48.9479 15.8802 48.7187 14.8958 48.7187 13.7500  c
h
49.9687 13.9062 m
49.9687 15.0937 50.1145 16.0625 50.4062 16.8125  c
50.6458 17.4375 51.0052 17.7500 51.4843 17.7500  c
51.7135 17.7500 51.9505 17.6484 52.1953 17.4453  c
52.4401 17.2421 52.6250 16.8958 52.7500 16.4062  c
52.9479 15.6875 53.0468 14.6614 53.0468 13.3281  c
53.0468 12.3489 52.9427 11.5312 52.7343 10.8750  c
52.5885 10.3854 52.3906 10.0416 52.1406 9.84375  c
51.9739 9.70833 51.7656 9.64062 51.5156 9.64062  c
51.2343 9.64062 50.9791 9.76562 50.7500 10.0156  c
50.4479 10.3697 50.2421 10.9244 50.1328 11.6796  c
50.0234 12.4349 49.9687 13.1770 49.9687 13.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
