%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: mi√©rcoles 16 de marzo de 2011 11:48:50 PM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.00000 w
1.00000 0 0 RG
58.0000 5.00784 326.482 382.992 rc
newpath
72.3226 386.071 m
74.7544 382.774 l
77.6498 379.512 l
81.0786 376.299 l
85.1078 373.152 l
89.7924 370.091 l
95.1659 367.140 l
101.230 364.321 l
107.952 361.654 l
115.265 359.152 l
122.583 356.960 l
130.305 354.907 l
138.358 352.986 l
146.672 351.189 l
155.184 349.506 l
163.836 347.928 l
172.576 346.442 l
181.361 345.040 l
190.147 343.713 l
198.896 342.453 l
207.571 341.253 l
216.138 340.107 l
224.562 339.011 l
232.810 337.961 l
240.853 336.952 l
248.661 335.982 l
263.476 334.152 l
270.148 333.324 l
276.542 332.524 l
282.652 331.750 l
288.474 331.002 l
294.011 330.277 l
299.265 329.574 l
304.243 328.892 l
308.955 328.230 l
313.411 327.585 l
317.622 326.956 l
321.599 326.343 l
325.355 325.743 l
328.902 325.156 l
332.251 324.579 l
335.414 324.013 l
338.402 323.455 l
341.224 322.905 l
343.891 322.361 l
346.412 321.823 l
348.795 321.289 l
351.047 320.759 l
353.177 320.232 l
355.191 319.706 l
357.095 319.182 l
358.896 318.657 l
360.597 318.131 l
362.206 317.604 l
363.725 317.074 l
365.160 316.540 l
366.515 316.002 l
367.792 315.458 l
368.996 314.908 l
370.130 314.350 l
371.196 313.784 l
372.197 313.207 l
373.135 312.620 l
374.014 312.020 l
374.835 311.407 l
375.600 310.778 l
376.311 310.131 l
376.969 309.465 l
377.577 308.777 l
378.135 308.066 l
378.645 307.327 l
379.109 306.559 l
379.527 305.756 l
379.902 304.916 l
380.233 304.034 l
380.522 303.103 l
380.770 302.117 l
380.978 301.070 l
381.147 299.952 l
381.280 298.755 l
381.377 297.469 l
381.441 296.087 l
381.475 294.607 l
381.482 293.050 l
381.468 291.322 l
381.449 290.106 l
381.432 289.266 l
381.425 289.000 l
381.428 289.290 l
381.438 289.932 l
381.451 290.724 l
381.462 291.530 l
381.471 292.286 l
381.477 292.968 l
381.481 293.568 l
381.482 294.091 l
381.482 294.542 l
381.481 294.931 l
381.479 295.263 l
381.476 295.548 l
381.474 295.792 l
381.472 296.002 l
381.469 296.181 l
381.468 296.336 l
381.466 296.469 l
381.465 296.585 l
381.463 296.685 l
381.463 296.773 l
381.462 296.850 l
381.462 296.916 l
381.462 296.973 l
381.462 297.021 l
381.462 297.059 l
381.463 297.085 l
381.464 297.094 l
381.465 297.081 l
381.468 297.034 l
381.471 296.938 l
381.475 296.767 l
381.479 296.483 l
381.482 296.029 l
381.480 295.390 l
381.465 294.473 l
381.435 293.393 l
381.384 292.025 l
381.308 290.319 l
381.206 288.169 l
381.080 285.343 l
380.937 281.180 l
380.848 275.999 l
380.864 268.365 l
380.995 259.720 l
381.134 252.021 l
381.247 245.000 l
381.340 237.607 l
381.408 229.641 l
381.453 220.891 l
381.476 211.211 l
381.482 202.980 l
381.482 195.220 l
381.479 190.252 l
381.477 187.897 l
381.475 187.135 l
381.474 187.186 l
381.474 187.665 l
381.473 188.416 l
381.473 189.351 l
381.473 190.421 l
381.473 191.598 l
381.473 192.866 l
381.473 194.217 l
381.474 195.649 l
381.474 197.159 l
381.475 198.749 l
381.475 200.420 l
381.476 202.173 l
381.477 204.007 l
381.478 205.923 l
381.479 207.918 l
381.480 209.992 l
381.481 212.141 l
381.482 214.360 l
381.482 216.646 l
381.482 218.993 l
381.482 221.394 l
381.482 223.841 l
381.480 226.325 l
381.478 228.838 l
381.474 231.368 l
381.469 233.901 l
381.463 236.421 l
381.456 238.903 l
381.447 241.318 l
381.437 243.616 l
381.428 245.717 l
381.419 247.473 l
381.415 248.551 l
381.423 247.822 l
381.449 243.439 l
381.479 232.980 l
381.482 225.273 l
381.474 217.095 l
381.461 208.875 l
381.447 200.630 l
381.433 192.422 l
381.421 184.279 l
381.412 176.209 l
381.405 168.211 l
381.400 160.279 l
381.398 152.405 l
381.397 144.589 l
381.398 136.833 l
381.401 129.154 l
381.408 121.592 l
381.419 114.235 l
381.435 107.246 l
381.456 100.899 l
381.474 95.5077 l
381.482 91.1666 l
381.473 87.6626 l
381.447 85.1810 l
381.412 83.4287 l
381.377 82.3380 l
381.356 81.8830 l
381.354 81.9935 l
381.366 82.5069 l
381.386 83.3005 l
381.407 84.2880 l
381.427 85.4140 l
381.444 86.6388 l
381.457 87.9328 l
381.467 89.2707 l
381.474 90.6302 l
381.478 91.9908 l
381.481 93.3345 l
381.482 94.6460 l
381.482 95.9125 l
381.482 97.1307 l
381.482 98.2858 l
381.481 99.3784 l
381.481 100.408 l
381.480 101.378 l
381.480 102.288 l
381.479 103.141 l
381.479 103.937 l
381.479 104.672 l
381.479 105.336 l
381.479 105.908 l
381.479 106.354 l
381.480 106.617 l
381.481 106.619 l
381.481 106.288 l
381.482 105.563 l
381.482 104.444 l
381.472 99.5684 l
381.456 97.3552 l
381.426 95.0924 l
381.374 92.8884 l
381.303 91.0290 l
381.202 89.3126 l
381.069 87.7538 l
380.900 86.3505 l
380.692 85.0909 l
380.445 83.9594 l
380.157 82.9397 l
379.827 82.0170 l
379.455 81.1781 l
379.040 80.4118 l
378.580 79.7086 l
378.074 79.0607 l
377.523 78.4614 l
376.924 77.9050 l
376.278 77.3869 l
375.581 76.9029 l
374.834 76.4497 l
374.034 76.0244 l
373.181 75.6243 l
372.272 75.2474 l
371.305 74.8918 l
370.280 74.5558 l
369.192 74.2381 l
368.041 73.9374 l
366.824 73.6527 l
365.537 73.3831 l
364.179 73.1278 l
362.745 72.8862 l
361.233 72.6576 l
359.638 72.4418 l
357.957 72.2382 l
356.186 72.0468 l
354.319 71.8672 l
352.352 71.6994 l
350.278 71.5436 l
348.093 71.3997 l
345.789 71.2679 l
343.360 71.1487 l
340.797 71.0423 l
338.093 70.9494 l
335.239 70.8706 l
332.225 70.8068 l
329.040 70.7588 l
325.673 70.7280 l
322.113 70.7154 l
318.346 70.7229 l
314.359 70.7520 l
310.138 70.8048 l
305.667 70.8835 l
300.930 70.9906 l
295.913 71.1290 l
290.599 71.3015 l
284.973 71.5113 l
279.022 71.7619 l
272.733 72.0567 l
266.097 72.3992 l
259.106 72.7927 l
251.759 73.2405 l
244.406 73.7221 l
236.745 74.2579 l
228.788 74.8503 l
220.549 75.5017 l
212.046 76.2146 l
203.301 76.9922 l
194.336 77.8389 l
185.176 78.7599 l
175.846 79.7631 l
166.370 80.8586 l
156.772 82.0607 l
147.079 83.3888 l
137.315 84.8699 l
127.508 86.5424 l
117.693 88.4618 l
107.914 90.7121 l
98.2395 93.4251 l
88.7887 96.8196 l
79.7963 101.276 l
71.7559 107.457 l
66.9572 113.665 l
63.8185 120.753 l
62.0162 128.286 l
61.0493 135.976 l
60.5434 143.712 l
60.2807 151.461 l
60.1447 159.213 l
60.0745 166.967 l
60.0383 174.720 l
60.0196 182.474 l
60.0100 190.228 l
60.0051 197.981 l
60.0026 205.735 l
60.0013 213.489 l
60.0006 221.242 l
60.0003 228.996 l
60.0001 236.750 l
60.0000 244.503 l
60.0000 252.257 l
60.0000 260.011 l
60.0000 267.764 l
60.0000 298.779 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 1.00000 0 RG
59.0000 6.00784 324.482 380.992 rc
newpath
381.482 395.692 m
381.482 -17.8377 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
349.334 298.771 m
349.334 301.371 l
S
newpath
285.038 298.771 m
285.038 301.371 l
S
newpath
220.741 298.771 m
220.741 301.371 l
S
newpath
156.444 298.771 m
156.444 301.371 l
S
newpath
92.1483 298.771 m
92.1483 301.371 l
S
newpath
57.0000 298.771 m
381.482 298.771 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
53 322 15 17 rc
newpath
64.1093 334.015 m
64.1093 334.349 64.0885 334.627 64.0468 334.851  c
64.0052 335.075 63.9375 335.276 63.8437 335.453  c
63.6979 335.744 63.5260 335.945 63.3281 336.054  c
63.1302 336.164 62.9427 336.218 62.7656 336.218  c
62.5260 336.218 62.3072 336.138 62.1093 335.976  c
61.9114 335.815 61.7552 335.625 61.6406 335.406  c
61.5989 335.312 61.5468 335.166 61.4843 334.968  c
61.4218 334.770 61.3619 334.549 61.3046 334.304  c
61.2474 334.059 61.1901 333.794 61.1328 333.507  c
61.0755 333.221 61.0234 332.940 60.9765 332.664  c
60.9296 332.388 60.8854 332.127 60.8437 331.882  c
60.8020 331.638 60.7708 331.427 60.7500 331.250  c
60.7343 331.250 l
58.5156 336.000 l
57.3125 336.000 l
60.3125 329.531 l
60.2500 329.187 60.1770 328.880 60.0937 328.609  c
60.0104 328.338 59.9218 328.104 59.8281 327.906  c
59.7343 327.729 59.6119 327.596 59.4609 327.507  c
59.3099 327.419 59.1562 327.375 59.0000 327.375  c
58.8541 327.375 58.7161 327.406 58.5859 327.468  c
58.4557 327.531 58.3437 327.609 58.2500 327.703  c
58.1250 327.828 58.0442 327.971 58.0078 328.132  c
57.9713 328.294 57.9322 328.447 57.8906 328.593  c
57.6406 328.593 l
57.7031 327.906 57.8307 327.367 58.0234 326.976  c
58.2161 326.585 58.5052 326.390 58.8906 326.390  c
59.1822 326.390 59.4401 326.476 59.6640 326.648  c
59.8880 326.820 60.0520 327.010 60.1562 327.218  c
60.2812 327.468 60.4036 327.794 60.5234 328.195  c
60.6432 328.596 60.7656 329.026 60.8906 329.484  c
60.9427 329.703 61.0052 329.984 61.0781 330.328  c
61.1510 330.671 61.2265 331.036 61.3046 331.421  c
61.3828 331.807 61.4609 332.190 61.5390 332.570  c
61.6171 332.950 61.6927 333.286 61.7656 333.578  c
61.8177 333.796 61.8854 334.015 61.9687 334.234  c
62.0520 334.453 62.1614 334.635 62.2968 334.781  c
62.5052 334.979 62.7343 335.078 62.9843 335.078  c
63.1197 335.078 63.2526 335.041 63.3828 334.968  c
63.5130 334.895 63.6197 334.770 63.7031 334.593  c
63.7447 334.520 63.7786 334.421 63.8046 334.296  c
63.8307 334.171 63.8541 334.078 63.8750 334.015  c
64.1093 334.015 l
64.1093 334.015 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
60.0000 298.771 m
60.0000 303.971 l
S
Q
q
newpath
124.296 298.771 m
124.296 303.971 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
122.468 317.750 m
122.468 316.770 122.617 315.924 122.914 315.210  c
123.210 314.497 123.604 313.968 124.093 313.625  c
124.479 313.354 124.875 313.218 125.281 313.218  c
125.937 313.218 126.526 313.552 127.046 314.218  c
127.703 315.052 128.031 316.182 128.031 317.609  c
128.031 318.609 127.888 319.458 127.601 320.156  c
127.315 320.854 126.947 321.362 126.500 321.679  c
126.052 321.997 125.625 322.156 125.218 322.156  c
124.395 322.156 123.708 321.671 123.156 320.703  c
122.697 319.880 122.468 318.895 122.468 317.750  c
h
123.718 317.906 m
123.718 319.093 123.864 320.062 124.156 320.812  c
124.395 321.437 124.755 321.750 125.234 321.750  c
125.463 321.750 125.700 321.648 125.945 321.445  c
126.190 321.242 126.375 320.895 126.500 320.406  c
126.697 319.687 126.796 318.661 126.796 317.328  c
126.796 316.349 126.692 315.531 126.484 314.875  c
126.338 314.385 126.140 314.041 125.890 313.843  c
125.724 313.708 125.515 313.640 125.265 313.640  c
124.984 313.640 124.729 313.765 124.500 314.015  c
124.197 314.369 123.992 314.924 123.882 315.679  c
123.773 316.434 123.718 317.177 123.718 317.906  c
h
130.125 320.765 m
130.322 320.765 130.489 320.835 130.625 320.976  c
130.760 321.117 130.828 321.281 130.828 321.468  c
130.828 321.666 130.760 321.833 130.625 321.968  c
130.489 322.104 130.322 322.171 130.125 322.171  c
129.927 322.171 129.760 322.104 129.625 321.968  c
129.489 321.833 129.421 321.666 129.421 321.468  c
129.421 321.270 129.489 321.104 129.625 320.968  c
129.760 320.833 129.927 320.765 130.125 320.765  c
h
137.578 313.218 m
137.578 313.453 l
137.015 313.505 136.557 313.614 136.203 313.781  c
135.849 313.947 135.500 314.203 135.156 314.546  c
134.812 314.890 134.528 315.273 134.304 315.695  c
134.080 316.117 133.890 316.614 133.734 317.187  c
134.349 316.770 134.963 316.562 135.578 316.562  c
136.161 316.562 136.669 316.799 137.101 317.273  c
137.533 317.747 137.750 318.359 137.750 319.109  c
137.750 319.828 137.531 320.484 137.093 321.078  c
136.572 321.796 135.880 322.156 135.015 322.156  c
134.421 322.156 133.921 321.958 133.515 321.562  c
132.713 320.812 132.312 319.833 132.312 318.625  c
132.312 317.854 132.466 317.122 132.773 316.429  c
133.080 315.737 133.520 315.119 134.093 314.578  c
134.666 314.036 135.216 313.674 135.742 313.492  c
136.268 313.309 136.755 313.218 137.203 313.218  c
137.578 313.218 l
h
133.625 317.656 m
133.552 318.229 133.515 318.692 133.515 319.046  c
133.515 319.453 133.591 319.893 133.742 320.367  c
133.893 320.841 134.114 321.218 134.406 321.500  c
134.625 321.697 134.890 321.796 135.203 321.796  c
135.567 321.796 135.895 321.622 136.187 321.273  c
136.479 320.924 136.625 320.432 136.625 319.796  c
136.625 319.067 136.479 318.440 136.187 317.914  c
135.895 317.388 135.489 317.125 134.968 317.125  c
134.802 317.125 134.627 317.158 134.445 317.226  c
134.263 317.294 133.989 317.437 133.625 317.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
188.593 298.771 m
188.593 303.971 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.468 317.750 m
186.468 316.770 186.617 315.924 186.914 315.210  c
187.210 314.497 187.604 313.968 188.093 313.625  c
188.479 313.354 188.875 313.218 189.281 313.218  c
189.937 313.218 190.526 313.552 191.046 314.218  c
191.703 315.052 192.031 316.182 192.031 317.609  c
192.031 318.609 191.888 319.458 191.601 320.156  c
191.315 320.854 190.947 321.362 190.500 321.679  c
190.052 321.997 189.625 322.156 189.218 322.156  c
188.395 322.156 187.708 321.671 187.156 320.703  c
186.697 319.880 186.468 318.895 186.468 317.750  c
h
187.718 317.906 m
187.718 319.093 187.864 320.062 188.156 320.812  c
188.395 321.437 188.755 321.750 189.234 321.750  c
189.463 321.750 189.700 321.648 189.945 321.445  c
190.190 321.242 190.375 320.895 190.500 320.406  c
190.697 319.687 190.796 318.661 190.796 317.328  c
190.796 316.349 190.692 315.531 190.484 314.875  c
190.338 314.385 190.140 314.041 189.890 313.843  c
189.724 313.708 189.515 313.640 189.265 313.640  c
188.984 313.640 188.729 313.765 188.500 314.015  c
188.197 314.369 187.992 314.924 187.882 315.679  c
187.773 316.434 187.718 317.177 187.718 317.906  c
h
194.125 320.765 m
194.322 320.765 194.489 320.835 194.625 320.976  c
194.760 321.117 194.828 321.281 194.828 321.468  c
194.828 321.666 194.760 321.833 194.625 321.968  c
194.489 322.104 194.322 322.171 194.125 322.171  c
193.927 322.171 193.760 322.104 193.625 321.968  c
193.489 321.833 193.421 321.666 193.421 321.468  c
193.421 321.270 193.489 321.104 193.625 320.968  c
193.760 320.833 193.927 320.765 194.125 320.765  c
h
197.062 313.390 m
201.671 313.390 l
201.671 313.640 l
198.796 322.171 l
198.093 322.171 l
200.656 314.421 l
198.296 314.421 l
197.817 314.421 197.479 314.479 197.281 314.593  c
196.916 314.791 196.630 315.093 196.421 315.500  c
196.234 315.437 l
197.062 313.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
252.889 298.771 m
252.889 303.971 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
250.468 317.750 m
250.468 316.770 250.617 315.924 250.914 315.210  c
251.210 314.497 251.604 313.968 252.093 313.625  c
252.479 313.354 252.875 313.218 253.281 313.218  c
253.937 313.218 254.526 313.552 255.046 314.218  c
255.703 315.052 256.031 316.182 256.031 317.609  c
256.031 318.609 255.888 319.458 255.601 320.156  c
255.315 320.854 254.947 321.362 254.500 321.679  c
254.052 321.997 253.625 322.156 253.218 322.156  c
252.395 322.156 251.708 321.671 251.156 320.703  c
250.697 319.880 250.468 318.895 250.468 317.750  c
h
251.718 317.906 m
251.718 319.093 251.864 320.062 252.156 320.812  c
252.395 321.437 252.755 321.750 253.234 321.750  c
253.463 321.750 253.700 321.648 253.945 321.445  c
254.190 321.242 254.375 320.895 254.500 320.406  c
254.697 319.687 254.796 318.661 254.796 317.328  c
254.796 316.349 254.692 315.531 254.484 314.875  c
254.338 314.385 254.140 314.041 253.890 313.843  c
253.724 313.708 253.515 313.640 253.265 313.640  c
252.984 313.640 252.729 313.765 252.500 314.015  c
252.197 314.369 251.992 314.924 251.882 315.679  c
251.773 316.434 251.718 317.177 251.718 317.906  c
h
258.125 320.765 m
258.322 320.765 258.489 320.835 258.625 320.976  c
258.760 321.117 258.828 321.281 258.828 321.468  c
258.828 321.666 258.760 321.833 258.625 321.968  c
258.489 322.104 258.322 322.171 258.125 322.171  c
257.927 322.171 257.760 322.104 257.625 321.968  c
257.489 321.833 257.421 321.666 257.421 321.468  c
257.421 321.270 257.489 321.104 257.625 320.968  c
257.760 320.833 257.927 320.765 258.125 320.765  c
h
262.250 317.671 m
261.562 317.109 261.119 316.658 260.921 316.320  c
260.724 315.981 260.625 315.630 260.625 315.265  c
260.625 314.703 260.841 314.221 261.273 313.820  c
261.705 313.419 262.281 313.218 263.000 313.218  c
263.697 313.218 264.257 313.406 264.679 313.781  c
265.101 314.156 265.312 314.583 265.312 315.062  c
265.312 315.385 265.197 315.713 264.968 316.046  c
264.739 316.380 264.265 316.776 263.546 317.234  c
264.286 317.807 264.776 318.260 265.015 318.593  c
265.338 319.020 265.500 319.474 265.500 319.953  c
265.500 320.557 265.270 321.075 264.812 321.507  c
264.354 321.940 263.750 322.156 263.000 322.156  c
262.177 322.156 261.536 321.901 261.078 321.390  c
260.713 320.974 260.531 320.520 260.531 320.031  c
260.531 319.656 260.661 319.281 260.921 318.906  c
261.182 318.531 261.625 318.119 262.250 317.671  c
h
263.234 316.984 m
263.744 316.526 264.067 316.164 264.203 315.898  c
264.338 315.632 264.406 315.333 264.406 315.000  c
264.406 314.562 264.281 314.216 264.031 313.960  c
263.781 313.705 263.442 313.578 263.015 313.578  c
262.578 313.578 262.224 313.703 261.953 313.953  c
261.682 314.203 261.546 314.494 261.546 314.828  c
261.546 315.046 261.604 315.268 261.718 315.492  c
261.833 315.716 261.994 315.927 262.203 316.125  c
263.234 316.984 l
h
262.546 317.906 m
262.192 318.197 261.932 318.518 261.765 318.867  c
261.599 319.216 261.515 319.593 261.515 320.000  c
261.515 320.552 261.664 320.992 261.960 321.320  c
262.257 321.648 262.635 321.812 263.093 321.812  c
263.552 321.812 263.919 321.682 264.195 321.421  c
264.471 321.161 264.609 320.849 264.609 320.484  c
264.609 320.182 264.526 319.906 264.359 319.656  c
264.067 319.208 263.463 318.625 262.546 317.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
317.186 298.771 m
317.186 303.971 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
315.468 317.750 m
315.468 316.770 315.617 315.924 315.914 315.210  c
316.210 314.497 316.604 313.968 317.093 313.625  c
317.479 313.354 317.875 313.218 318.281 313.218  c
318.937 313.218 319.526 313.552 320.046 314.218  c
320.703 315.052 321.031 316.182 321.031 317.609  c
321.031 318.609 320.888 319.458 320.601 320.156  c
320.315 320.854 319.947 321.362 319.500 321.679  c
319.052 321.997 318.625 322.156 318.218 322.156  c
317.395 322.156 316.708 321.671 316.156 320.703  c
315.697 319.880 315.468 318.895 315.468 317.750  c
h
316.718 317.906 m
316.718 319.093 316.864 320.062 317.156 320.812  c
317.395 321.437 317.755 321.750 318.234 321.750  c
318.463 321.750 318.700 321.648 318.945 321.445  c
319.190 321.242 319.375 320.895 319.500 320.406  c
319.697 319.687 319.796 318.661 319.796 317.328  c
319.796 316.349 319.692 315.531 319.484 314.875  c
319.338 314.385 319.140 314.041 318.890 313.843  c
318.724 313.708 318.515 313.640 318.265 313.640  c
317.984 313.640 317.729 313.765 317.500 314.015  c
317.197 314.369 316.992 314.924 316.882 315.679  c
316.773 316.434 316.718 317.177 316.718 317.906  c
h
323.125 320.765 m
323.322 320.765 323.489 320.835 323.625 320.976  c
323.760 321.117 323.828 321.281 323.828 321.468  c
323.828 321.666 323.760 321.833 323.625 321.968  c
323.489 322.104 323.322 322.171 323.125 322.171  c
322.927 322.171 322.760 322.104 322.625 321.968  c
322.489 321.833 322.421 321.666 322.421 321.468  c
322.421 321.270 322.489 321.104 322.625 320.968  c
322.760 320.833 322.927 320.765 323.125 320.765  c
h
325.437 322.171 m
325.437 321.937 l
325.989 321.937 326.502 321.812 326.976 321.562  c
327.450 321.312 327.908 320.877 328.351 320.257  c
328.794 319.638 329.099 318.958 329.265 318.218  c
328.599 318.645 328.000 318.859 327.468 318.859  c
326.864 318.859 326.346 318.627 325.914 318.164  c
325.481 317.700 325.265 317.078 325.265 316.296  c
325.265 315.546 325.479 314.875 325.906 314.281  c
326.427 313.572 327.109 313.218 327.953 313.218  c
328.661 313.218 329.265 313.510 329.765 314.093  c
330.380 314.812 330.687 315.703 330.687 316.765  c
330.687 317.724 330.453 318.617 329.984 319.445  c
329.515 320.273 328.864 320.958 328.031 321.500  c
327.343 321.947 326.599 322.171 325.796 322.171  c
325.437 322.171 l
h
329.375 317.750 m
329.447 317.197 329.484 316.760 329.484 316.437  c
329.484 316.020 329.414 315.575 329.273 315.101  c
329.132 314.627 328.934 314.263 328.679 314.007  c
328.424 313.752 328.135 313.625 327.812 313.625  c
327.437 313.625 327.106 313.794 326.820 314.132  c
326.533 314.471 326.390 314.974 326.390 315.640  c
326.390 316.536 326.578 317.234 326.953 317.734  c
327.234 318.099 327.572 318.281 327.968 318.281  c
328.166 318.281 328.398 318.234 328.664 318.140  c
328.929 318.046 329.166 317.916 329.375 317.750  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.482 298.771 m
381.482 303.971 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 314.234 m
382.625 313.218 l
382.828 313.218 l
382.828 320.484 l
382.828 320.963 382.849 321.263 382.890 321.382  c
382.932 321.502 383.015 321.593 383.140 321.656  c
383.265 321.718 383.520 321.755 383.906 321.765  c
383.906 322.000 l
380.671 322.000 l
380.671 321.765 l
381.078 321.755 381.341 321.718 381.460 321.656  c
381.580 321.593 381.664 321.510 381.710 321.406  c
381.757 321.302 381.781 320.994 381.781 320.484  c
381.781 315.843 l
381.781 315.208 381.760 314.802 381.718 314.625  c
381.687 314.489 381.632 314.390 381.554 314.328  c
381.476 314.265 381.380 314.234 381.265 314.234  c
381.109 314.234 380.895 314.302 380.625 314.437  c
380.531 314.234 l
h
387.125 320.765 m
387.322 320.765 387.489 320.835 387.625 320.976  c
387.760 321.117 387.828 321.281 387.828 321.468  c
387.828 321.666 387.760 321.833 387.625 321.968  c
387.489 322.104 387.322 322.171 387.125 322.171  c
386.927 322.171 386.760 322.104 386.625 321.968  c
386.489 321.833 386.421 321.666 386.421 321.468  c
386.421 321.270 386.489 321.104 386.625 320.968  c
386.760 320.833 386.927 320.765 387.125 320.765  c
h
389.218 317.750 m
389.218 316.770 389.367 315.924 389.664 315.210  c
389.960 314.497 390.354 313.968 390.843 313.625  c
391.229 313.354 391.625 313.218 392.031 313.218  c
392.687 313.218 393.276 313.552 393.796 314.218  c
394.453 315.052 394.781 316.182 394.781 317.609  c
394.781 318.609 394.638 319.458 394.351 320.156  c
394.065 320.854 393.697 321.362 393.250 321.679  c
392.802 321.997 392.375 322.156 391.968 322.156  c
391.145 322.156 390.458 321.671 389.906 320.703  c
389.447 319.880 389.218 318.895 389.218 317.750  c
h
390.468 317.906 m
390.468 319.093 390.614 320.062 390.906 320.812  c
391.145 321.437 391.505 321.750 391.984 321.750  c
392.213 321.750 392.450 321.648 392.695 321.445  c
392.940 321.242 393.125 320.895 393.250 320.406  c
393.447 319.687 393.546 318.661 393.546 317.328  c
393.546 316.349 393.442 315.531 393.234 314.875  c
393.088 314.385 392.890 314.041 392.640 313.843  c
392.474 313.708 392.265 313.640 392.015 313.640  c
391.734 313.640 391.479 313.765 391.250 314.015  c
390.947 314.369 390.742 314.924 390.632 315.679  c
390.523 316.434 390.468 317.177 390.468 317.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
57.0000 32.2381 m
54.4000 32.2381 l
S
newpath
57.0000 80.6986 m
54.4000 80.6986 l
S
newpath
57.0000 129.159 m
54.4000 129.159 l
S
newpath
57.0000 177.619 m
54.4000 177.619 l
S
newpath
57.0000 226.080 m
54.4000 226.080 l
S
newpath
57.0000 274.540 m
54.4000 274.540 l
S
newpath
57.0000 323.001 m
54.4000 323.001 l
S
newpath
57.0000 371.461 m
54.4000 371.461 l
S
newpath
57.0000 386.000 m
57.0000 8.00784 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 190 21 15 rc
newpath
5.28125 196.656 m
7.10937 196.250 l
7.24479 196.562 7.35416 196.885 7.43750 197.218  c
7.55208 197.697 7.64062 198.265 7.70312 198.921  c
7.74479 199.244 7.79166 199.942 7.84375 201.015  c
8.37500 200.432 8.69270 200.067 8.79687 199.921  c
9.35937 199.161 9.68229 198.718 9.76562 198.593  c
9.90104 198.364 9.99479 198.166 10.0468 198.000  c
10.0989 197.875 10.1250 197.755 10.1250 197.640  c
10.1250 197.526 10.0260 197.398 9.82812 197.257  c
9.63020 197.117 9.53125 196.958 9.53125 196.781  c
9.53125 196.645 9.58593 196.523 9.69531 196.414  c
9.80468 196.304 9.93229 196.250 10.0781 196.250  c
10.2552 196.250 10.4114 196.322 10.5468 196.468  c
10.6822 196.614 10.7500 196.796 10.7500 197.015  c
10.7500 197.234 10.7187 197.442 10.6562 197.640  c
10.5416 197.963 10.3333 198.356 10.0312 198.820  c
9.72916 199.283 9.24479 199.901 8.57812 200.671  c
8.49479 200.776 8.02604 201.270 7.17187 202.156  c
6.93750 202.156 l
6.83333 199.479 6.61979 197.807 6.29687 197.140  c
6.19270 196.921 6.02083 196.812 5.78125 196.812  c
5.66666 196.812 5.51562 196.833 5.32812 196.875  c
5.28125 196.656 l
h
15.2543 202.000 m
10.9731 202.000 l
10.9731 201.765 l
13.1606 199.849 14.6033 198.349 15.3012 197.265  c
15.6241 196.765 15.7856 196.234 15.7856 195.671  c
15.7856 195.234 15.6502 194.877 15.3793 194.601  c
15.1085 194.325 14.7596 194.187 14.3325 194.187  c
13.7387 194.187 13.2491 194.474 12.8637 195.046  c
12.6293 194.937 l
12.8481 194.395 13.1658 193.974 13.5825 193.671  c
13.9991 193.369 14.4471 193.218 14.9262 193.218  c
15.4783 193.218 15.9392 193.406 16.3090 193.781  c
16.6788 194.156 16.8637 194.609 16.8637 195.140  c
16.8637 195.515 16.7960 195.859 16.6606 196.171  c
16.4627 196.671 16.0929 197.224 15.5512 197.828  c
14.7179 198.776 13.6085 199.859 12.2231 201.078  c
14.3793 201.078 l
14.7231 201.078 15.0096 201.005 15.2387 200.859  c
15.4679 200.713 15.6293 200.520 15.7231 200.281  c
15.9731 200.281 l
15.2543 202.000 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
57.0000 347.231 m
51.8000 347.231 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
32 346 7 13 rc
newpath
42.7968 353.437 m
34.2031 353.437 l
34.2031 352.765 l
42.7968 352.765 l
42.7968 353.437 l
h
f
Q
newpath
41.4687 352.750 m
41.4687 351.770 41.6171 350.924 41.9140 350.210  c
42.2109 349.497 42.6041 348.968 43.0937 348.625  c
43.4791 348.354 43.8750 348.218 44.2812 348.218  c
44.9375 348.218 45.5260 348.552 46.0468 349.218  c
46.7031 350.052 47.0312 351.182 47.0312 352.609  c
47.0312 353.609 46.8880 354.458 46.6015 355.156  c
46.3151 355.854 45.9479 356.362 45.5000 356.679  c
45.0520 356.997 44.6250 357.156 44.2187 357.156  c
43.3958 357.156 42.7083 356.671 42.1562 355.703  c
41.6979 354.880 41.4687 353.895 41.4687 352.750  c
h
42.7187 352.906 m
42.7187 354.093 42.8645 355.062 43.1562 355.812  c
43.3958 356.437 43.7552 356.750 44.2343 356.750  c
44.4635 356.750 44.7005 356.648 44.9453 356.445  c
45.1901 356.242 45.3750 355.895 45.5000 355.406  c
45.6979 354.687 45.7968 353.661 45.7968 352.328  c
45.7968 351.349 45.6927 350.531 45.4843 349.875  c
45.3385 349.385 45.1406 349.041 44.8906 348.843  c
44.7239 348.708 44.5156 348.640 44.2656 348.640  c
43.9843 348.640 43.7291 348.765 43.5000 349.015  c
43.1979 349.369 42.9921 349.924 42.8828 350.679  c
42.7734 351.434 42.7187 352.177 42.7187 352.906  c
h
49.1250 355.765 m
49.3229 355.765 49.4895 355.835 49.6250 355.976  c
49.7604 356.117 49.8281 356.281 49.8281 356.468  c
49.8281 356.666 49.7604 356.833 49.6250 356.968  c
49.4895 357.104 49.3229 357.171 49.1250 357.171  c
48.9270 357.171 48.7604 357.104 48.6250 356.968  c
48.4895 356.833 48.4218 356.666 48.4218 356.468  c
48.4218 356.270 48.4895 356.104 48.6250 355.968  c
48.7604 355.833 48.9270 355.765 49.1250 355.765  c
h
52.2812 349.234 m
54.3750 348.218 l
54.5781 348.218 l
54.5781 355.484 l
54.5781 355.963 54.5989 356.263 54.6406 356.382  c
54.6822 356.502 54.7656 356.593 54.8906 356.656  c
55.0156 356.718 55.2708 356.755 55.6562 356.765  c
55.6562 357.000 l
52.4218 357.000 l
52.4218 356.765 l
52.8281 356.755 53.0911 356.718 53.2109 356.656  c
53.3307 356.593 53.4140 356.510 53.4609 356.406  c
53.5078 356.302 53.5312 355.994 53.5312 355.484  c
53.5312 350.843 l
53.5312 350.208 53.5104 349.802 53.4687 349.625  c
53.4375 349.489 53.3828 349.390 53.3046 349.328  c
53.2265 349.265 53.1302 349.234 53.0156 349.234  c
52.8593 349.234 52.6458 349.302 52.3750 349.437  c
52.2812 349.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 298.771 m
51.8000 298.771 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
50.4687 303.750 m
50.4687 302.770 50.6171 301.924 50.9140 301.210  c
51.2109 300.497 51.6041 299.968 52.0937 299.625  c
52.4791 299.354 52.8750 299.218 53.2812 299.218  c
53.9375 299.218 54.5260 299.552 55.0468 300.218  c
55.7031 301.052 56.0312 302.182 56.0312 303.609  c
56.0312 304.609 55.8880 305.458 55.6015 306.156  c
55.3151 306.854 54.9479 307.362 54.5000 307.679  c
54.0520 307.997 53.6250 308.156 53.2187 308.156  c
52.3958 308.156 51.7083 307.671 51.1562 306.703  c
50.6979 305.880 50.4687 304.895 50.4687 303.750  c
h
51.7187 303.906 m
51.7187 305.093 51.8645 306.062 52.1562 306.812  c
52.3958 307.437 52.7552 307.750 53.2343 307.750  c
53.4635 307.750 53.7005 307.648 53.9453 307.445  c
54.1901 307.242 54.3750 306.895 54.5000 306.406  c
54.6979 305.687 54.7968 304.661 54.7968 303.328  c
54.7968 302.349 54.6927 301.531 54.4843 300.875  c
54.3385 300.385 54.1406 300.041 53.8906 299.843  c
53.7239 299.708 53.5156 299.640 53.2656 299.640  c
52.9843 299.640 52.7291 299.765 52.5000 300.015  c
52.1979 300.369 51.9921 300.924 51.8828 301.679  c
51.7734 302.434 51.7187 303.177 51.7187 303.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 250.310 m
51.8000 250.310 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 255.750 m
41.4687 254.770 41.6171 253.924 41.9140 253.210  c
42.2109 252.497 42.6041 251.968 43.0937 251.625  c
43.4791 251.354 43.8750 251.218 44.2812 251.218  c
44.9375 251.218 45.5260 251.552 46.0468 252.218  c
46.7031 253.052 47.0312 254.182 47.0312 255.609  c
47.0312 256.609 46.8880 257.458 46.6015 258.156  c
46.3151 258.854 45.9479 259.362 45.5000 259.679  c
45.0520 259.997 44.6250 260.156 44.2187 260.156  c
43.3958 260.156 42.7083 259.671 42.1562 258.703  c
41.6979 257.880 41.4687 256.895 41.4687 255.750  c
h
42.7187 255.906 m
42.7187 257.093 42.8645 258.062 43.1562 258.812  c
43.3958 259.437 43.7552 259.750 44.2343 259.750  c
44.4635 259.750 44.7005 259.648 44.9453 259.445  c
45.1901 259.242 45.3750 258.895 45.5000 258.406  c
45.6979 257.687 45.7968 256.661 45.7968 255.328  c
45.7968 254.349 45.6927 253.531 45.4843 252.875  c
45.3385 252.385 45.1406 252.041 44.8906 251.843  c
44.7239 251.708 44.5156 251.640 44.2656 251.640  c
43.9843 251.640 43.7291 251.765 43.5000 252.015  c
43.1979 252.369 42.9921 252.924 42.8828 253.679  c
42.7734 254.434 42.7187 255.177 42.7187 255.906  c
h
49.1250 258.765 m
49.3229 258.765 49.4895 258.835 49.6250 258.976  c
49.7604 259.117 49.8281 259.281 49.8281 259.468  c
49.8281 259.666 49.7604 259.833 49.6250 259.968  c
49.4895 260.104 49.3229 260.171 49.1250 260.171  c
48.9270 260.171 48.7604 260.104 48.6250 259.968  c
48.4895 259.833 48.4218 259.666 48.4218 259.468  c
48.4218 259.270 48.4895 259.104 48.6250 258.968  c
48.7604 258.833 48.9270 258.765 49.1250 258.765  c
h
52.2812 252.234 m
54.3750 251.218 l
54.5781 251.218 l
54.5781 258.484 l
54.5781 258.963 54.5989 259.263 54.6406 259.382  c
54.6822 259.502 54.7656 259.593 54.8906 259.656  c
55.0156 259.718 55.2708 259.755 55.6562 259.765  c
55.6562 260.000 l
52.4218 260.000 l
52.4218 259.765 l
52.8281 259.755 53.0911 259.718 53.2109 259.656  c
53.3307 259.593 53.4140 259.510 53.4609 259.406  c
53.5078 259.302 53.5312 258.994 53.5312 258.484  c
53.5312 253.843 l
53.5312 253.208 53.5104 252.802 53.4687 252.625  c
53.4375 252.489 53.3828 252.390 53.3046 252.328  c
53.2265 252.265 53.1302 252.234 53.0156 252.234  c
52.8593 252.234 52.6458 252.302 52.3750 252.437  c
52.2812 252.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 201.850 m
51.8000 201.850 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 206.750 m
41.4687 205.770 41.6171 204.924 41.9140 204.210  c
42.2109 203.497 42.6041 202.968 43.0937 202.625  c
43.4791 202.354 43.8750 202.218 44.2812 202.218  c
44.9375 202.218 45.5260 202.552 46.0468 203.218  c
46.7031 204.052 47.0312 205.182 47.0312 206.609  c
47.0312 207.609 46.8880 208.458 46.6015 209.156  c
46.3151 209.854 45.9479 210.362 45.5000 210.679  c
45.0520 210.997 44.6250 211.156 44.2187 211.156  c
43.3958 211.156 42.7083 210.671 42.1562 209.703  c
41.6979 208.880 41.4687 207.895 41.4687 206.750  c
h
42.7187 206.906 m
42.7187 208.093 42.8645 209.062 43.1562 209.812  c
43.3958 210.437 43.7552 210.750 44.2343 210.750  c
44.4635 210.750 44.7005 210.648 44.9453 210.445  c
45.1901 210.242 45.3750 209.895 45.5000 209.406  c
45.6979 208.687 45.7968 207.661 45.7968 206.328  c
45.7968 205.349 45.6927 204.531 45.4843 203.875  c
45.3385 203.385 45.1406 203.041 44.8906 202.843  c
44.7239 202.708 44.5156 202.640 44.2656 202.640  c
43.9843 202.640 43.7291 202.765 43.5000 203.015  c
43.1979 203.369 42.9921 203.924 42.8828 204.679  c
42.7734 205.434 42.7187 206.177 42.7187 206.906  c
h
49.1250 209.765 m
49.3229 209.765 49.4895 209.835 49.6250 209.976  c
49.7604 210.117 49.8281 210.281 49.8281 210.468  c
49.8281 210.666 49.7604 210.833 49.6250 210.968  c
49.4895 211.104 49.3229 211.171 49.1250 211.171  c
48.9270 211.171 48.7604 211.104 48.6250 210.968  c
48.4895 210.833 48.4218 210.666 48.4218 210.468  c
48.4218 210.270 48.4895 210.104 48.6250 209.968  c
48.7604 209.833 48.9270 209.765 49.1250 209.765  c
h
56.7031 209.343 m
56.1093 211.000 l
51.0312 211.000 l
51.0312 210.765 l
52.5208 209.401 53.5703 208.286 54.1796 207.421  c
54.7890 206.557 55.0937 205.770 55.0937 205.062  c
55.0937 204.510 54.9270 204.059 54.5937 203.710  c
54.2604 203.362 53.8593 203.187 53.3906 203.187  c
52.9739 203.187 52.5963 203.309 52.2578 203.554  c
51.9192 203.799 51.6718 204.161 51.5156 204.640  c
51.2812 204.640 l
51.3854 203.859 51.6562 203.260 52.0937 202.843  c
52.5312 202.427 53.0781 202.218 53.7343 202.218  c
54.4322 202.218 55.0156 202.442 55.4843 202.890  c
55.9531 203.338 56.1875 203.864 56.1875 204.468  c
56.1875 204.906 56.0833 205.343 55.8750 205.781  c
55.5625 206.468 55.0572 207.192 54.3593 207.953  c
53.3072 209.109 52.6458 209.807 52.3750 210.046  c
54.6250 210.046 l
55.0833 210.046 55.4036 210.028 55.5859 209.992  c
55.7682 209.955 55.9349 209.885 56.0859 209.781  c
56.2369 209.677 56.3645 209.531 56.4687 209.343  c
56.7031 209.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 153.389 m
51.8000 153.389 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 158.750 m
41.4687 157.770 41.6171 156.924 41.9140 156.210  c
42.2109 155.497 42.6041 154.968 43.0937 154.625  c
43.4791 154.354 43.8750 154.218 44.2812 154.218  c
44.9375 154.218 45.5260 154.552 46.0468 155.218  c
46.7031 156.052 47.0312 157.182 47.0312 158.609  c
47.0312 159.609 46.8880 160.458 46.6015 161.156  c
46.3151 161.854 45.9479 162.362 45.5000 162.679  c
45.0520 162.997 44.6250 163.156 44.2187 163.156  c
43.3958 163.156 42.7083 162.671 42.1562 161.703  c
41.6979 160.880 41.4687 159.895 41.4687 158.750  c
h
42.7187 158.906 m
42.7187 160.093 42.8645 161.062 43.1562 161.812  c
43.3958 162.437 43.7552 162.750 44.2343 162.750  c
44.4635 162.750 44.7005 162.648 44.9453 162.445  c
45.1901 162.242 45.3750 161.895 45.5000 161.406  c
45.6979 160.687 45.7968 159.661 45.7968 158.328  c
45.7968 157.349 45.6927 156.531 45.4843 155.875  c
45.3385 155.385 45.1406 155.041 44.8906 154.843  c
44.7239 154.708 44.5156 154.640 44.2656 154.640  c
43.9843 154.640 43.7291 154.765 43.5000 155.015  c
43.1979 155.369 42.9921 155.924 42.8828 156.679  c
42.7734 157.434 42.7187 158.177 42.7187 158.906  c
h
49.1250 161.765 m
49.3229 161.765 49.4895 161.835 49.6250 161.976  c
49.7604 162.117 49.8281 162.281 49.8281 162.468  c
49.8281 162.666 49.7604 162.833 49.6250 162.968  c
49.4895 163.104 49.3229 163.171 49.1250 163.171  c
48.9270 163.171 48.7604 163.104 48.6250 162.968  c
48.4895 162.833 48.4218 162.666 48.4218 162.468  c
48.4218 162.270 48.4895 162.104 48.6250 161.968  c
48.7604 161.833 48.9270 161.765 49.1250 161.765  c
h
51.4062 156.031 m
51.6562 155.447 51.9687 155.000 52.3437 154.687  c
52.7187 154.375 53.1822 154.218 53.7343 154.218  c
54.4322 154.218 54.9635 154.442 55.3281 154.890  c
55.6093 155.224 55.7500 155.578 55.7500 155.953  c
55.7500 156.588 55.3541 157.239 54.5625 157.906  c
55.0937 158.114 55.4947 158.411 55.7656 158.796  c
56.0364 159.182 56.1718 159.635 56.1718 160.156  c
56.1718 160.895 55.9322 161.536 55.4531 162.078  c
54.8385 162.796 53.9479 163.156 52.7812 163.156  c
52.1979 163.156 51.8020 163.083 51.5937 162.937  c
51.3854 162.791 51.2812 162.635 51.2812 162.468  c
51.2812 162.343 51.3307 162.237 51.4296 162.148  c
51.5286 162.059 51.6458 162.015 51.7812 162.015  c
51.8854 162.015 51.9947 162.031 52.1093 162.062  c
52.1822 162.083 52.3463 162.158 52.6015 162.289  c
52.8567 162.419 53.0312 162.500 53.1250 162.531  c
53.2812 162.572 53.4479 162.593 53.6250 162.593  c
54.0520 162.593 54.4270 162.427 54.7500 162.093  c
55.0729 161.760 55.2343 161.364 55.2343 160.906  c
55.2343 160.572 55.1614 160.250 55.0156 159.937  c
54.9010 159.697 54.7760 159.515 54.6406 159.390  c
54.4635 159.224 54.2161 159.072 53.8984 158.937  c
53.5807 158.802 53.2552 158.734 52.9218 158.734  c
52.7187 158.734 l
52.7187 158.531 l
53.0520 158.489 53.3880 158.369 53.7265 158.171  c
54.0651 157.974 54.3099 157.737 54.4609 157.460  c
54.6119 157.184 54.6875 156.875 54.6875 156.531  c
54.6875 156.104 54.5520 155.755 54.2812 155.484  c
54.0104 155.213 53.6718 155.078 53.2656 155.078  c
52.6093 155.078 52.0625 155.427 51.6250 156.125  c
51.4062 156.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 104.928 m
51.8000 104.928 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 109.750 m
41.4687 108.770 41.6171 107.924 41.9140 107.210  c
42.2109 106.497 42.6041 105.968 43.0937 105.625  c
43.4791 105.354 43.8750 105.218 44.2812 105.218  c
44.9375 105.218 45.5260 105.552 46.0468 106.218  c
46.7031 107.052 47.0312 108.182 47.0312 109.609  c
47.0312 110.609 46.8880 111.458 46.6015 112.156  c
46.3151 112.854 45.9479 113.362 45.5000 113.679  c
45.0520 113.997 44.6250 114.156 44.2187 114.156  c
43.3958 114.156 42.7083 113.671 42.1562 112.703  c
41.6979 111.880 41.4687 110.895 41.4687 109.750  c
h
42.7187 109.906 m
42.7187 111.093 42.8645 112.062 43.1562 112.812  c
43.3958 113.437 43.7552 113.750 44.2343 113.750  c
44.4635 113.750 44.7005 113.648 44.9453 113.445  c
45.1901 113.242 45.3750 112.895 45.5000 112.406  c
45.6979 111.687 45.7968 110.661 45.7968 109.328  c
45.7968 108.349 45.6927 107.531 45.4843 106.875  c
45.3385 106.385 45.1406 106.041 44.8906 105.843  c
44.7239 105.708 44.5156 105.640 44.2656 105.640  c
43.9843 105.640 43.7291 105.765 43.5000 106.015  c
43.1979 106.369 42.9921 106.924 42.8828 107.679  c
42.7734 108.434 42.7187 109.177 42.7187 109.906  c
h
49.1250 112.765 m
49.3229 112.765 49.4895 112.835 49.6250 112.976  c
49.7604 113.117 49.8281 113.281 49.8281 113.468  c
49.8281 113.666 49.7604 113.833 49.6250 113.968  c
49.4895 114.104 49.3229 114.171 49.1250 114.171  c
48.9270 114.171 48.7604 114.104 48.6250 113.968  c
48.4895 113.833 48.4218 113.666 48.4218 113.468  c
48.4218 113.270 48.4895 113.104 48.6250 112.968  c
48.7604 112.833 48.9270 112.765 49.1250 112.765  c
h
56.7968 110.828 m
56.7968 111.734 l
55.6406 111.734 l
55.6406 114.000 l
54.5937 114.000 l
54.5937 111.734 l
50.9531 111.734 l
50.9531 110.921 l
54.9531 105.218 l
55.6406 105.218 l
55.6406 110.828 l
56.7968 110.828 l
h
54.5937 110.828 m
54.5937 106.546 l
51.5781 110.828 l
54.5937 110.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 56.4683 m
51.8000 56.4683 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 61.7500 m
41.4687 60.7708 41.6171 59.9244 41.9140 59.2109  c
42.2109 58.4974 42.6041 57.9687 43.0937 57.6250  c
43.4791 57.3541 43.8750 57.2187 44.2812 57.2187  c
44.9375 57.2187 45.5260 57.5520 46.0468 58.2187  c
46.7031 59.0520 47.0312 60.1822 47.0312 61.6093  c
47.0312 62.6093 46.8880 63.4583 46.6015 64.1562  c
46.3151 64.8541 45.9479 65.3619 45.5000 65.6796  c
45.0520 65.9974 44.6250 66.1562 44.2187 66.1562  c
43.3958 66.1562 42.7083 65.6718 42.1562 64.7031  c
41.6979 63.8802 41.4687 62.8958 41.4687 61.7500  c
h
42.7187 61.9062 m
42.7187 63.0937 42.8645 64.0625 43.1562 64.8125  c
43.3958 65.4375 43.7552 65.7500 44.2343 65.7500  c
44.4635 65.7500 44.7005 65.6484 44.9453 65.4453  c
45.1901 65.2421 45.3750 64.8958 45.5000 64.4062  c
45.6979 63.6875 45.7968 62.6614 45.7968 61.3281  c
45.7968 60.3489 45.6927 59.5312 45.4843 58.8750  c
45.3385 58.3854 45.1406 58.0416 44.8906 57.8437  c
44.7239 57.7083 44.5156 57.6406 44.2656 57.6406  c
43.9843 57.6406 43.7291 57.7656 43.5000 58.0156  c
43.1979 58.3697 42.9921 58.9244 42.8828 59.6796  c
42.7734 60.4349 42.7187 61.1770 42.7187 61.9062  c
h
49.1250 64.7656 m
49.3229 64.7656 49.4895 64.8359 49.6250 64.9765  c
49.7604 65.1171 49.8281 65.2812 49.8281 65.4687  c
49.8281 65.6666 49.7604 65.8333 49.6250 65.9687  c
49.4895 66.1041 49.3229 66.1718 49.1250 66.1718  c
48.9270 66.1718 48.7604 66.1041 48.6250 65.9687  c
48.4895 65.8333 48.4218 65.6666 48.4218 65.4687  c
48.4218 65.2708 48.4895 65.1041 48.6250 64.9687  c
48.7604 64.8333 48.9270 64.7656 49.1250 64.7656  c
h
56.3906 57.3906 m
55.8906 58.4687 l
53.3125 58.4687 l
52.7500 59.6250 l
53.8645 59.7916 54.7500 60.2083 55.4062 60.8750  c
55.9687 61.4479 56.2500 62.1250 56.2500 62.9062  c
56.2500 63.3645 56.1588 63.7864 55.9765 64.1718  c
55.7942 64.5572 55.5625 64.8854 55.2812 65.1562  c
55.0000 65.4270 54.6875 65.6406 54.3437 65.7968  c
53.8645 66.0364 53.3645 66.1562 52.8437 66.1562  c
52.3333 66.1562 51.9609 66.0677 51.7265 65.8906  c
51.4921 65.7135 51.3750 65.5208 51.3750 65.3125  c
51.3750 65.1875 51.4244 65.0807 51.5234 64.9921  c
51.6224 64.9036 51.7447 64.8593 51.8906 64.8593  c
51.9947 64.8593 52.0885 64.8750 52.1718 64.9062  c
52.2552 64.9375 52.3958 65.0260 52.5937 65.1718  c
52.9166 65.3906 53.2395 65.5000 53.5625 65.5000  c
54.0625 65.5000 54.4974 65.3125 54.8671 64.9375  c
55.2369 64.5625 55.4218 64.1041 55.4218 63.5625  c
55.4218 63.0416 55.2552 62.5572 54.9218 62.1093  c
54.5885 61.6614 54.1302 61.3125 53.5468 61.0625  c
53.0781 60.8750 52.4479 60.7656 51.6562 60.7343  c
53.3125 57.3906 l
56.3906 57.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
57.0000 8.00784 m
51.8000 8.00784 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
41.4687 13.7500 m
41.4687 12.7708 41.6171 11.9244 41.9140 11.2109  c
42.2109 10.4974 42.6041 9.96875 43.0937 9.62500  c
43.4791 9.35416 43.8750 9.21875 44.2812 9.21875  c
44.9375 9.21875 45.5260 9.55208 46.0468 10.2187  c
46.7031 11.0520 47.0312 12.1822 47.0312 13.6093  c
47.0312 14.6093 46.8880 15.4583 46.6015 16.1562  c
46.3151 16.8541 45.9479 17.3619 45.5000 17.6796  c
45.0520 17.9974 44.6250 18.1562 44.2187 18.1562  c
43.3958 18.1562 42.7083 17.6718 42.1562 16.7031  c
41.6979 15.8802 41.4687 14.8958 41.4687 13.7500  c
h
42.7187 13.9062 m
42.7187 15.0937 42.8645 16.0625 43.1562 16.8125  c
43.3958 17.4375 43.7552 17.7500 44.2343 17.7500  c
44.4635 17.7500 44.7005 17.6484 44.9453 17.4453  c
45.1901 17.2421 45.3750 16.8958 45.5000 16.4062  c
45.6979 15.6875 45.7968 14.6614 45.7968 13.3281  c
45.7968 12.3489 45.6927 11.5312 45.4843 10.8750  c
45.3385 10.3854 45.1406 10.0416 44.8906 9.84375  c
44.7239 9.70833 44.5156 9.64062 44.2656 9.64062  c
43.9843 9.64062 43.7291 9.76562 43.5000 10.0156  c
43.1979 10.3697 42.9921 10.9244 42.8828 11.6796  c
42.7734 12.4349 42.7187 13.1770 42.7187 13.9062  c
h
49.1250 16.7656 m
49.3229 16.7656 49.4895 16.8359 49.6250 16.9765  c
49.7604 17.1171 49.8281 17.2812 49.8281 17.4687  c
49.8281 17.6666 49.7604 17.8333 49.6250 17.9687  c
49.4895 18.1041 49.3229 18.1718 49.1250 18.1718  c
48.9270 18.1718 48.7604 18.1041 48.6250 17.9687  c
48.4895 17.8333 48.4218 17.6666 48.4218 17.4687  c
48.4218 17.2708 48.4895 17.1041 48.6250 16.9687  c
48.7604 16.8333 48.9270 16.7656 49.1250 16.7656  c
h
56.5781 9.21875 m
56.5781 9.45312 l
56.0156 9.50520 55.5572 9.61458 55.2031 9.78125  c
54.8489 9.94791 54.5000 10.2031 54.1562 10.5468  c
53.8125 10.8906 53.5286 11.2734 53.3046 11.6953  c
53.0807 12.1171 52.8906 12.6145 52.7343 13.1875  c
53.3489 12.7708 53.9635 12.5625 54.5781 12.5625  c
55.1614 12.5625 55.6692 12.7994 56.1015 13.2734  c
56.5338 13.7474 56.7500 14.3593 56.7500 15.1093  c
56.7500 15.8281 56.5312 16.4843 56.0937 17.0781  c
55.5729 17.7968 54.8802 18.1562 54.0156 18.1562  c
53.4218 18.1562 52.9218 17.9583 52.5156 17.5625  c
51.7135 16.8125 51.3125 15.8333 51.3125 14.6250  c
51.3125 13.8541 51.4661 13.1224 51.7734 12.4296  c
52.0807 11.7369 52.5208 11.1197 53.0937 10.5781  c
53.6666 10.0364 54.2161 9.67447 54.7421 9.49218  c
55.2682 9.30989 55.7552 9.21875 56.2031 9.21875  c
56.5781 9.21875 l
h
52.6250 13.6562 m
52.5520 14.2291 52.5156 14.6927 52.5156 15.0468  c
52.5156 15.4531 52.5911 15.8932 52.7421 16.3671  c
52.8932 16.8411 53.1145 17.2187 53.4062 17.5000  c
53.6250 17.6979 53.8906 17.7968 54.2031 17.7968  c
54.5677 17.7968 54.8958 17.6224 55.1875 17.2734  c
55.4791 16.9244 55.6250 16.4322 55.6250 15.7968  c
55.6250 15.0677 55.4791 14.4401 55.1875 13.9140  c
54.8958 13.3880 54.4895 13.1250 53.9687 13.1250  c
53.8020 13.1250 53.6276 13.1588 53.4453 13.2265  c
53.2630 13.2942 52.9895 13.4375 52.6250 13.6562  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
