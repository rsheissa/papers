%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: lunes 14 de marzo de 2011 12:22:11 AM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
2.00000 w
1.00000 0 0 RG
42.0000 5.00810 346.994 370.312 rc
newpath
-90.3984 370.878 m
50.5265 369.210 l
169.818 367.401 l
264.340 365.430 l
331.890 363.277 l
371.842 360.926 l
385.865 358.383 l
378.695 355.719 l
363.323 353.655 l
348.680 352.190 l
342.089 351.709 l
344.839 352.173 l
353.170 353.200 l
363.106 354.438 l
372.027 355.678 l
378.782 356.825 l
383.155 357.846 l
385.407 358.738 l
385.991 359.508 l
385.392 360.169 l
384.048 360.731 l
382.307 361.210 l
380.429 361.617 l
378.590 361.963 l
376.904 362.258 l
375.431 362.509 l
374.200 362.725 l
373.216 362.910 l
372.468 363.069 l
371.943 363.207 l
371.621 363.327 l
371.490 363.430 l
371.543 363.517 l
371.783 363.589 l
372.232 363.643 l
372.938 363.675 l
373.976 363.677 l
375.454 363.634 l
377.504 363.521 l
380.192 363.301 l
383.298 362.913 l
385.749 362.266 l
384.662 361.243 l
374.654 359.717 l
349.241 357.593 l
307.718 354.990 l
246.318 351.507 l
166.780 346.612 l
93.3672 340.299 l
50.3725 331.051 l
81.6864 317.989 l
158.600 305.084 l
232.532 293.163 l
291.851 281.482 l
336.927 268.842 l
366.388 254.865 l
381.224 239.860 l
385.639 226.414 l
385.619 213.675 l
384.020 204.193 l
382.647 199.719 l
381.751 198.418 l
381.144 198.631 l
380.726 199.587 l
380.420 200.995 l
380.205 202.704 l
380.073 204.627 l
380.021 206.717 l
380.051 208.948 l
380.165 211.308 l
380.368 213.792 l
380.664 216.398 l
381.055 219.127 l
381.537 221.978 l
382.106 224.953 l
382.748 228.049 l
383.440 231.264 l
384.149 234.594 l
384.829 238.034 l
385.419 241.576 l
385.839 245.213 l
385.994 248.935 l
385.763 252.767 l
385.006 256.662 l
383.573 260.608 l
381.306 264.588 l
378.055 268.581 l
373.700 272.562 l
368.180 276.495 l
361.545 280.332 l
354.023 283.999 l
346.154 287.376 l
339.037 290.231 l
335.016 292.039 l
341.017 290.930 l
362.569 283.589 l
384.985 266.091 l
384.601 253.891 l
376.791 241.114 l
365.774 228.171 l
354.630 215.239 l
344.998 202.398 l
337.492 189.682 l
332.157 177.092 l
328.793 164.620 l
327.148 152.254 l
327.034 139.985 l
328.417 127.818 l
331.509 115.777 l
336.865 103.927 l
345.356 92.4125 l
357.583 81.5126 l
372.089 71.6939 l
383.529 63.4739 l
385.132 57.0590 l
373.148 52.0629 l
350.242 48.5072 l
324.395 46.1782 l
305.662 44.9874 l
300.585 44.8332 l
307.325 45.4509 l
320.451 46.6005 l
335.471 48.1196 l
349.578 49.9013 l
361.401 51.8739 l
370.509 53.9837 l
377.021 56.1856 l
381.336 58.4392 l
383.948 60.7081 l
385.336 62.9602 l
385.908 65.1679 l
385.977 67.3094 l
385.772 69.3688 l
385.445 71.3355 l
385.091 73.2039 l
384.767 74.9721 l
384.501 76.6398 l
384.307 78.2065 l
384.189 79.6672 l
384.148 81.0070 l
384.185 82.1933 l
384.305 83.1632 l
384.516 83.8111 l
384.825 83.9804 l
385.207 83.5164 l
385.621 82.3004 l
385.942 80.2748 l
385.911 77.4777 l
385.033 74.0187 l
382.408 70.0461 l
376.450 65.7146 l
364.522 61.1764 l
342.588 56.5835 l
305.282 52.0895 l
246.882 47.8384 l
173.064 44.3258 l
76.6555 41.1049 l
-42.1436 38.1857 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 1.00000 0 RG
43.0000 6.00810 344.994 368.312 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
357.495 366.157 m
357.495 368.757 l
S
newpath
300.496 366.157 m
300.496 368.757 l
S
newpath
243.496 366.157 m
243.496 368.757 l
S
newpath
186.497 366.157 m
186.497 368.757 l
S
newpath
129.498 366.157 m
129.498 368.757 l
S
newpath
72.4995 366.157 m
72.4995 368.757 l
S
newpath
41.0000 366.157 m
385.994 366.157 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-28120 389 14 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
44.0000 366.157 m
44.0000 371.357 l
S
Q
q
newpath
100.999 366.157 m
100.999 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
92.4687 385.750 m
92.4687 384.770 92.6171 383.924 92.9140 383.210  c
93.2109 382.497 93.6041 381.968 94.0937 381.625  c
94.4791 381.354 94.8750 381.218 95.2812 381.218  c
95.9375 381.218 96.5260 381.552 97.0468 382.218  c
97.7031 383.052 98.0312 384.182 98.0312 385.609  c
98.0312 386.609 97.8880 387.458 97.6015 388.156  c
97.3151 388.854 96.9479 389.362 96.5000 389.679  c
96.0520 389.997 95.6250 390.156 95.2187 390.156  c
94.3958 390.156 93.7083 389.671 93.1562 388.703  c
92.6979 387.880 92.4687 386.895 92.4687 385.750  c
h
93.7187 385.906 m
93.7187 387.093 93.8645 388.062 94.1562 388.812  c
94.3958 389.437 94.7552 389.750 95.2343 389.750  c
95.4635 389.750 95.7005 389.648 95.9453 389.445  c
96.1901 389.242 96.3750 388.895 96.5000 388.406  c
96.6979 387.687 96.7968 386.661 96.7968 385.328  c
96.7968 384.349 96.6927 383.531 96.4843 382.875  c
96.3385 382.385 96.1406 382.041 95.8906 381.843  c
95.7239 381.708 95.5156 381.640 95.2656 381.640  c
94.9843 381.640 94.7291 381.765 94.5000 382.015  c
94.1979 382.369 93.9921 382.924 93.8828 383.679  c
93.7734 384.434 93.7187 385.177 93.7187 385.906  c
h
100.125 388.765 m
100.322 388.765 100.489 388.835 100.625 388.976  c
100.760 389.117 100.828 389.281 100.828 389.468  c
100.828 389.666 100.760 389.833 100.625 389.968  c
100.489 390.104 100.322 390.171 100.125 390.171  c
99.9270 390.171 99.7604 390.104 99.6250 389.968  c
99.4895 389.833 99.4218 389.666 99.4218 389.468  c
99.4218 389.270 99.4895 389.104 99.6250 388.968  c
99.7604 388.833 99.9270 388.765 100.125 388.765  c
h
102.437 390.171 m
102.437 389.937 l
102.989 389.937 103.502 389.812 103.976 389.562  c
104.450 389.312 104.908 388.877 105.351 388.257  c
105.794 387.638 106.099 386.958 106.265 386.218  c
105.599 386.645 105.000 386.859 104.468 386.859  c
103.864 386.859 103.346 386.627 102.914 386.164  c
102.481 385.700 102.265 385.078 102.265 384.296  c
102.265 383.546 102.479 382.875 102.906 382.281  c
103.427 381.572 104.109 381.218 104.953 381.218  c
105.661 381.218 106.265 381.510 106.765 382.093  c
107.380 382.812 107.687 383.703 107.687 384.765  c
107.687 385.724 107.453 386.617 106.984 387.445  c
106.515 388.273 105.864 388.958 105.031 389.500  c
104.343 389.947 103.599 390.171 102.796 390.171  c
102.437 390.171 l
h
106.375 385.750 m
106.447 385.197 106.484 384.760 106.484 384.437  c
106.484 384.020 106.414 383.575 106.273 383.101  c
106.132 382.627 105.934 382.263 105.679 382.007  c
105.424 381.752 105.135 381.625 104.812 381.625  c
104.437 381.625 104.106 381.794 103.820 382.132  c
103.533 382.471 103.390 382.974 103.390 383.640  c
103.390 384.536 103.578 385.234 103.953 385.734  c
104.234 386.099 104.572 386.281 104.968 386.281  c
105.166 386.281 105.398 386.234 105.664 386.140  c
105.929 386.046 106.166 385.916 106.375 385.750  c
h
108.937 390.171 m
108.937 389.937 l
109.489 389.937 110.002 389.812 110.476 389.562  c
110.950 389.312 111.408 388.877 111.851 388.257  c
112.294 387.638 112.599 386.958 112.765 386.218  c
112.099 386.645 111.500 386.859 110.968 386.859  c
110.364 386.859 109.846 386.627 109.414 386.164  c
108.981 385.700 108.765 385.078 108.765 384.296  c
108.765 383.546 108.979 382.875 109.406 382.281  c
109.927 381.572 110.609 381.218 111.453 381.218  c
112.161 381.218 112.765 381.510 113.265 382.093  c
113.880 382.812 114.187 383.703 114.187 384.765  c
114.187 385.724 113.953 386.617 113.484 387.445  c
113.015 388.273 112.364 388.958 111.531 389.500  c
110.843 389.947 110.099 390.171 109.296 390.171  c
108.937 390.171 l
h
112.875 385.750 m
112.947 385.197 112.984 384.760 112.984 384.437  c
112.984 384.020 112.914 383.575 112.773 383.101  c
112.632 382.627 112.434 382.263 112.179 382.007  c
111.924 381.752 111.635 381.625 111.312 381.625  c
110.937 381.625 110.606 381.794 110.320 382.132  c
110.033 382.471 109.890 382.974 109.890 383.640  c
109.890 384.536 110.078 385.234 110.453 385.734  c
110.734 386.099 111.072 386.281 111.468 386.281  c
111.666 386.281 111.898 386.234 112.164 386.140  c
112.429 386.046 112.666 385.916 112.875 385.750  c
h
120.390 381.390 m
119.890 382.468 l
117.312 382.468 l
116.750 383.625 l
117.864 383.791 118.750 384.208 119.406 384.875  c
119.968 385.447 120.250 386.125 120.250 386.906  c
120.250 387.364 120.158 387.786 119.976 388.171  c
119.794 388.557 119.562 388.885 119.281 389.156  c
119.000 389.427 118.687 389.640 118.343 389.796  c
117.864 390.036 117.364 390.156 116.843 390.156  c
116.333 390.156 115.960 390.067 115.726 389.890  c
115.492 389.713 115.375 389.520 115.375 389.312  c
115.375 389.187 115.424 389.080 115.523 388.992  c
115.622 388.903 115.744 388.859 115.890 388.859  c
115.994 388.859 116.088 388.875 116.171 388.906  c
116.255 388.937 116.395 389.026 116.593 389.171  c
116.916 389.390 117.239 389.500 117.562 389.500  c
118.062 389.500 118.497 389.312 118.867 388.937  c
119.237 388.562 119.421 388.104 119.421 387.562  c
119.421 387.041 119.255 386.557 118.921 386.109  c
118.588 385.661 118.130 385.312 117.546 385.062  c
117.078 384.875 116.447 384.765 115.656 384.734  c
117.312 381.390 l
120.390 381.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
157.998 366.157 m
157.998 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
149.468 385.750 m
149.468 384.770 149.617 383.924 149.914 383.210  c
150.210 382.497 150.604 381.968 151.093 381.625  c
151.479 381.354 151.875 381.218 152.281 381.218  c
152.937 381.218 153.526 381.552 154.046 382.218  c
154.703 383.052 155.031 384.182 155.031 385.609  c
155.031 386.609 154.888 387.458 154.601 388.156  c
154.315 388.854 153.947 389.362 153.500 389.679  c
153.052 389.997 152.625 390.156 152.218 390.156  c
151.395 390.156 150.708 389.671 150.156 388.703  c
149.697 387.880 149.468 386.895 149.468 385.750  c
h
150.718 385.906 m
150.718 387.093 150.864 388.062 151.156 388.812  c
151.395 389.437 151.755 389.750 152.234 389.750  c
152.463 389.750 152.700 389.648 152.945 389.445  c
153.190 389.242 153.375 388.895 153.500 388.406  c
153.697 387.687 153.796 386.661 153.796 385.328  c
153.796 384.349 153.692 383.531 153.484 382.875  c
153.338 382.385 153.140 382.041 152.890 381.843  c
152.724 381.708 152.515 381.640 152.265 381.640  c
151.984 381.640 151.729 381.765 151.500 382.015  c
151.197 382.369 150.992 382.924 150.882 383.679  c
150.773 384.434 150.718 385.177 150.718 385.906  c
h
157.125 388.765 m
157.322 388.765 157.489 388.835 157.625 388.976  c
157.760 389.117 157.828 389.281 157.828 389.468  c
157.828 389.666 157.760 389.833 157.625 389.968  c
157.489 390.104 157.322 390.171 157.125 390.171  c
156.927 390.171 156.760 390.104 156.625 389.968  c
156.489 389.833 156.421 389.666 156.421 389.468  c
156.421 389.270 156.489 389.104 156.625 388.968  c
156.760 388.833 156.927 388.765 157.125 388.765  c
h
159.437 390.171 m
159.437 389.937 l
159.989 389.937 160.502 389.812 160.976 389.562  c
161.450 389.312 161.908 388.877 162.351 388.257  c
162.794 387.638 163.099 386.958 163.265 386.218  c
162.599 386.645 162.000 386.859 161.468 386.859  c
160.864 386.859 160.346 386.627 159.914 386.164  c
159.481 385.700 159.265 385.078 159.265 384.296  c
159.265 383.546 159.479 382.875 159.906 382.281  c
160.427 381.572 161.109 381.218 161.953 381.218  c
162.661 381.218 163.265 381.510 163.765 382.093  c
164.380 382.812 164.687 383.703 164.687 384.765  c
164.687 385.724 164.453 386.617 163.984 387.445  c
163.515 388.273 162.864 388.958 162.031 389.500  c
161.343 389.947 160.599 390.171 159.796 390.171  c
159.437 390.171 l
h
163.375 385.750 m
163.447 385.197 163.484 384.760 163.484 384.437  c
163.484 384.020 163.414 383.575 163.273 383.101  c
163.132 382.627 162.934 382.263 162.679 382.007  c
162.424 381.752 162.135 381.625 161.812 381.625  c
161.437 381.625 161.106 381.794 160.820 382.132  c
160.533 382.471 160.390 382.974 160.390 383.640  c
160.390 384.536 160.578 385.234 160.953 385.734  c
161.234 386.099 161.572 386.281 161.968 386.281  c
162.166 386.281 162.398 386.234 162.664 386.140  c
162.929 386.046 163.166 385.916 163.375 385.750  c
h
165.937 390.171 m
165.937 389.937 l
166.489 389.937 167.002 389.812 167.476 389.562  c
167.950 389.312 168.408 388.877 168.851 388.257  c
169.294 387.638 169.599 386.958 169.765 386.218  c
169.099 386.645 168.500 386.859 167.968 386.859  c
167.364 386.859 166.846 386.627 166.414 386.164  c
165.981 385.700 165.765 385.078 165.765 384.296  c
165.765 383.546 165.979 382.875 166.406 382.281  c
166.927 381.572 167.609 381.218 168.453 381.218  c
169.161 381.218 169.765 381.510 170.265 382.093  c
170.880 382.812 171.187 383.703 171.187 384.765  c
171.187 385.724 170.953 386.617 170.484 387.445  c
170.015 388.273 169.364 388.958 168.531 389.500  c
167.843 389.947 167.099 390.171 166.296 390.171  c
165.937 390.171 l
h
169.875 385.750 m
169.947 385.197 169.984 384.760 169.984 384.437  c
169.984 384.020 169.914 383.575 169.773 383.101  c
169.632 382.627 169.434 382.263 169.179 382.007  c
168.924 381.752 168.635 381.625 168.312 381.625  c
167.937 381.625 167.606 381.794 167.320 382.132  c
167.033 382.471 166.890 382.974 166.890 383.640  c
166.890 384.536 167.078 385.234 167.453 385.734  c
167.734 386.099 168.072 386.281 168.468 386.281  c
168.666 386.281 168.898 386.234 169.164 386.140  c
169.429 386.046 169.666 385.916 169.875 385.750  c
h
177.578 381.218 m
177.578 381.453 l
177.015 381.505 176.557 381.614 176.203 381.781  c
175.849 381.947 175.500 382.203 175.156 382.546  c
174.812 382.890 174.528 383.273 174.304 383.695  c
174.080 384.117 173.890 384.614 173.734 385.187  c
174.349 384.770 174.963 384.562 175.578 384.562  c
176.161 384.562 176.669 384.799 177.101 385.273  c
177.533 385.747 177.750 386.359 177.750 387.109  c
177.750 387.828 177.531 388.484 177.093 389.078  c
176.572 389.796 175.880 390.156 175.015 390.156  c
174.421 390.156 173.921 389.958 173.515 389.562  c
172.713 388.812 172.312 387.833 172.312 386.625  c
172.312 385.854 172.466 385.122 172.773 384.429  c
173.080 383.737 173.520 383.119 174.093 382.578  c
174.666 382.036 175.216 381.674 175.742 381.492  c
176.268 381.309 176.755 381.218 177.203 381.218  c
177.578 381.218 l
h
173.625 385.656 m
173.552 386.229 173.515 386.692 173.515 387.046  c
173.515 387.453 173.591 387.893 173.742 388.367  c
173.893 388.841 174.114 389.218 174.406 389.500  c
174.625 389.697 174.890 389.796 175.203 389.796  c
175.567 389.796 175.895 389.622 176.187 389.273  c
176.479 388.924 176.625 388.432 176.625 387.796  c
176.625 387.067 176.479 386.440 176.187 385.914  c
175.895 385.388 175.489 385.125 174.968 385.125  c
174.802 385.125 174.627 385.158 174.445 385.226  c
174.263 385.294 173.989 385.437 173.625 385.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
214.997 366.157 m
214.997 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
206.468 385.750 m
206.468 384.770 206.617 383.924 206.914 383.210  c
207.210 382.497 207.604 381.968 208.093 381.625  c
208.479 381.354 208.875 381.218 209.281 381.218  c
209.937 381.218 210.526 381.552 211.046 382.218  c
211.703 383.052 212.031 384.182 212.031 385.609  c
212.031 386.609 211.888 387.458 211.601 388.156  c
211.315 388.854 210.947 389.362 210.500 389.679  c
210.052 389.997 209.625 390.156 209.218 390.156  c
208.395 390.156 207.708 389.671 207.156 388.703  c
206.697 387.880 206.468 386.895 206.468 385.750  c
h
207.718 385.906 m
207.718 387.093 207.864 388.062 208.156 388.812  c
208.395 389.437 208.755 389.750 209.234 389.750  c
209.463 389.750 209.700 389.648 209.945 389.445  c
210.190 389.242 210.375 388.895 210.500 388.406  c
210.697 387.687 210.796 386.661 210.796 385.328  c
210.796 384.349 210.692 383.531 210.484 382.875  c
210.338 382.385 210.140 382.041 209.890 381.843  c
209.724 381.708 209.515 381.640 209.265 381.640  c
208.984 381.640 208.729 381.765 208.500 382.015  c
208.197 382.369 207.992 382.924 207.882 383.679  c
207.773 384.434 207.718 385.177 207.718 385.906  c
h
214.125 388.765 m
214.322 388.765 214.489 388.835 214.625 388.976  c
214.760 389.117 214.828 389.281 214.828 389.468  c
214.828 389.666 214.760 389.833 214.625 389.968  c
214.489 390.104 214.322 390.171 214.125 390.171  c
213.927 390.171 213.760 390.104 213.625 389.968  c
213.489 389.833 213.421 389.666 213.421 389.468  c
213.421 389.270 213.489 389.104 213.625 388.968  c
213.760 388.833 213.927 388.765 214.125 388.765  c
h
216.437 390.171 m
216.437 389.937 l
216.989 389.937 217.502 389.812 217.976 389.562  c
218.450 389.312 218.908 388.877 219.351 388.257  c
219.794 387.638 220.099 386.958 220.265 386.218  c
219.599 386.645 219.000 386.859 218.468 386.859  c
217.864 386.859 217.346 386.627 216.914 386.164  c
216.481 385.700 216.265 385.078 216.265 384.296  c
216.265 383.546 216.479 382.875 216.906 382.281  c
217.427 381.572 218.109 381.218 218.953 381.218  c
219.661 381.218 220.265 381.510 220.765 382.093  c
221.380 382.812 221.687 383.703 221.687 384.765  c
221.687 385.724 221.453 386.617 220.984 387.445  c
220.515 388.273 219.864 388.958 219.031 389.500  c
218.343 389.947 217.599 390.171 216.796 390.171  c
216.437 390.171 l
h
220.375 385.750 m
220.447 385.197 220.484 384.760 220.484 384.437  c
220.484 384.020 220.414 383.575 220.273 383.101  c
220.132 382.627 219.934 382.263 219.679 382.007  c
219.424 381.752 219.135 381.625 218.812 381.625  c
218.437 381.625 218.106 381.794 217.820 382.132  c
217.533 382.471 217.390 382.974 217.390 383.640  c
217.390 384.536 217.578 385.234 217.953 385.734  c
218.234 386.099 218.572 386.281 218.968 386.281  c
219.166 386.281 219.398 386.234 219.664 386.140  c
219.929 386.046 220.166 385.916 220.375 385.750  c
h
222.937 390.171 m
222.937 389.937 l
223.489 389.937 224.002 389.812 224.476 389.562  c
224.950 389.312 225.408 388.877 225.851 388.257  c
226.294 387.638 226.599 386.958 226.765 386.218  c
226.099 386.645 225.500 386.859 224.968 386.859  c
224.364 386.859 223.846 386.627 223.414 386.164  c
222.981 385.700 222.765 385.078 222.765 384.296  c
222.765 383.546 222.979 382.875 223.406 382.281  c
223.927 381.572 224.609 381.218 225.453 381.218  c
226.161 381.218 226.765 381.510 227.265 382.093  c
227.880 382.812 228.187 383.703 228.187 384.765  c
228.187 385.724 227.953 386.617 227.484 387.445  c
227.015 388.273 226.364 388.958 225.531 389.500  c
224.843 389.947 224.099 390.171 223.296 390.171  c
222.937 390.171 l
h
226.875 385.750 m
226.947 385.197 226.984 384.760 226.984 384.437  c
226.984 384.020 226.914 383.575 226.773 383.101  c
226.632 382.627 226.434 382.263 226.179 382.007  c
225.924 381.752 225.635 381.625 225.312 381.625  c
224.937 381.625 224.606 381.794 224.320 382.132  c
224.033 382.471 223.890 382.974 223.890 383.640  c
223.890 384.536 224.078 385.234 224.453 385.734  c
224.734 386.099 225.072 386.281 225.468 386.281  c
225.666 386.281 225.898 386.234 226.164 386.140  c
226.429 386.046 226.666 385.916 226.875 385.750  c
h
230.062 381.390 m
234.671 381.390 l
234.671 381.640 l
231.796 390.171 l
231.093 390.171 l
233.656 382.421 l
231.296 382.421 l
230.817 382.421 230.479 382.479 230.281 382.593  c
229.916 382.791 229.630 383.093 229.421 383.500  c
229.234 383.437 l
230.062 381.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
271.996 366.157 m
271.996 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
263.468 385.750 m
263.468 384.770 263.617 383.924 263.914 383.210  c
264.210 382.497 264.604 381.968 265.093 381.625  c
265.479 381.354 265.875 381.218 266.281 381.218  c
266.937 381.218 267.526 381.552 268.046 382.218  c
268.703 383.052 269.031 384.182 269.031 385.609  c
269.031 386.609 268.888 387.458 268.601 388.156  c
268.315 388.854 267.947 389.362 267.500 389.679  c
267.052 389.997 266.625 390.156 266.218 390.156  c
265.395 390.156 264.708 389.671 264.156 388.703  c
263.697 387.880 263.468 386.895 263.468 385.750  c
h
264.718 385.906 m
264.718 387.093 264.864 388.062 265.156 388.812  c
265.395 389.437 265.755 389.750 266.234 389.750  c
266.463 389.750 266.700 389.648 266.945 389.445  c
267.190 389.242 267.375 388.895 267.500 388.406  c
267.697 387.687 267.796 386.661 267.796 385.328  c
267.796 384.349 267.692 383.531 267.484 382.875  c
267.338 382.385 267.140 382.041 266.890 381.843  c
266.724 381.708 266.515 381.640 266.265 381.640  c
265.984 381.640 265.729 381.765 265.500 382.015  c
265.197 382.369 264.992 382.924 264.882 383.679  c
264.773 384.434 264.718 385.177 264.718 385.906  c
h
271.125 388.765 m
271.322 388.765 271.489 388.835 271.625 388.976  c
271.760 389.117 271.828 389.281 271.828 389.468  c
271.828 389.666 271.760 389.833 271.625 389.968  c
271.489 390.104 271.322 390.171 271.125 390.171  c
270.927 390.171 270.760 390.104 270.625 389.968  c
270.489 389.833 270.421 389.666 270.421 389.468  c
270.421 389.270 270.489 389.104 270.625 388.968  c
270.760 388.833 270.927 388.765 271.125 388.765  c
h
273.437 390.171 m
273.437 389.937 l
273.989 389.937 274.502 389.812 274.976 389.562  c
275.450 389.312 275.908 388.877 276.351 388.257  c
276.794 387.638 277.099 386.958 277.265 386.218  c
276.599 386.645 276.000 386.859 275.468 386.859  c
274.864 386.859 274.346 386.627 273.914 386.164  c
273.481 385.700 273.265 385.078 273.265 384.296  c
273.265 383.546 273.479 382.875 273.906 382.281  c
274.427 381.572 275.109 381.218 275.953 381.218  c
276.661 381.218 277.265 381.510 277.765 382.093  c
278.380 382.812 278.687 383.703 278.687 384.765  c
278.687 385.724 278.453 386.617 277.984 387.445  c
277.515 388.273 276.864 388.958 276.031 389.500  c
275.343 389.947 274.599 390.171 273.796 390.171  c
273.437 390.171 l
h
277.375 385.750 m
277.447 385.197 277.484 384.760 277.484 384.437  c
277.484 384.020 277.414 383.575 277.273 383.101  c
277.132 382.627 276.934 382.263 276.679 382.007  c
276.424 381.752 276.135 381.625 275.812 381.625  c
275.437 381.625 275.106 381.794 274.820 382.132  c
274.533 382.471 274.390 382.974 274.390 383.640  c
274.390 384.536 274.578 385.234 274.953 385.734  c
275.234 386.099 275.572 386.281 275.968 386.281  c
276.166 386.281 276.398 386.234 276.664 386.140  c
276.929 386.046 277.166 385.916 277.375 385.750  c
h
279.937 390.171 m
279.937 389.937 l
280.489 389.937 281.002 389.812 281.476 389.562  c
281.950 389.312 282.408 388.877 282.851 388.257  c
283.294 387.638 283.599 386.958 283.765 386.218  c
283.099 386.645 282.500 386.859 281.968 386.859  c
281.364 386.859 280.846 386.627 280.414 386.164  c
279.981 385.700 279.765 385.078 279.765 384.296  c
279.765 383.546 279.979 382.875 280.406 382.281  c
280.927 381.572 281.609 381.218 282.453 381.218  c
283.161 381.218 283.765 381.510 284.265 382.093  c
284.880 382.812 285.187 383.703 285.187 384.765  c
285.187 385.724 284.953 386.617 284.484 387.445  c
284.015 388.273 283.364 388.958 282.531 389.500  c
281.843 389.947 281.099 390.171 280.296 390.171  c
279.937 390.171 l
h
283.875 385.750 m
283.947 385.197 283.984 384.760 283.984 384.437  c
283.984 384.020 283.914 383.575 283.773 383.101  c
283.632 382.627 283.434 382.263 283.179 382.007  c
282.924 381.752 282.635 381.625 282.312 381.625  c
281.937 381.625 281.606 381.794 281.320 382.132  c
281.033 382.471 280.890 382.974 280.890 383.640  c
280.890 384.536 281.078 385.234 281.453 385.734  c
281.734 386.099 282.072 386.281 282.468 386.281  c
282.666 386.281 282.898 386.234 283.164 386.140  c
283.429 386.046 283.666 385.916 283.875 385.750  c
h
288.250 385.671 m
287.562 385.109 287.119 384.658 286.921 384.320  c
286.724 383.981 286.625 383.630 286.625 383.265  c
286.625 382.703 286.841 382.221 287.273 381.820  c
287.705 381.419 288.281 381.218 289.000 381.218  c
289.697 381.218 290.257 381.406 290.679 381.781  c
291.101 382.156 291.312 382.583 291.312 383.062  c
291.312 383.385 291.197 383.713 290.968 384.046  c
290.739 384.380 290.265 384.776 289.546 385.234  c
290.286 385.807 290.776 386.260 291.015 386.593  c
291.338 387.020 291.500 387.474 291.500 387.953  c
291.500 388.557 291.270 389.075 290.812 389.507  c
290.354 389.940 289.750 390.156 289.000 390.156  c
288.177 390.156 287.536 389.901 287.078 389.390  c
286.713 388.974 286.531 388.520 286.531 388.031  c
286.531 387.656 286.661 387.281 286.921 386.906  c
287.182 386.531 287.625 386.119 288.250 385.671  c
h
289.234 384.984 m
289.744 384.526 290.067 384.164 290.203 383.898  c
290.338 383.632 290.406 383.333 290.406 383.000  c
290.406 382.562 290.281 382.216 290.031 381.960  c
289.781 381.705 289.442 381.578 289.015 381.578  c
288.578 381.578 288.224 381.703 287.953 381.953  c
287.682 382.203 287.546 382.494 287.546 382.828  c
287.546 383.046 287.604 383.268 287.718 383.492  c
287.833 383.716 287.994 383.927 288.203 384.125  c
289.234 384.984 l
h
288.546 385.906 m
288.192 386.197 287.932 386.518 287.765 386.867  c
287.599 387.216 287.515 387.593 287.515 388.000  c
287.515 388.552 287.664 388.992 287.960 389.320  c
288.257 389.648 288.635 389.812 289.093 389.812  c
289.552 389.812 289.919 389.682 290.195 389.421  c
290.471 389.161 290.609 388.849 290.609 388.484  c
290.609 388.182 290.526 387.906 290.359 387.656  c
290.067 387.208 289.463 386.625 288.546 385.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
328.995 366.157 m
328.995 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
320.468 385.750 m
320.468 384.770 320.617 383.924 320.914 383.210  c
321.210 382.497 321.604 381.968 322.093 381.625  c
322.479 381.354 322.875 381.218 323.281 381.218  c
323.937 381.218 324.526 381.552 325.046 382.218  c
325.703 383.052 326.031 384.182 326.031 385.609  c
326.031 386.609 325.888 387.458 325.601 388.156  c
325.315 388.854 324.947 389.362 324.500 389.679  c
324.052 389.997 323.625 390.156 323.218 390.156  c
322.395 390.156 321.708 389.671 321.156 388.703  c
320.697 387.880 320.468 386.895 320.468 385.750  c
h
321.718 385.906 m
321.718 387.093 321.864 388.062 322.156 388.812  c
322.395 389.437 322.755 389.750 323.234 389.750  c
323.463 389.750 323.700 389.648 323.945 389.445  c
324.190 389.242 324.375 388.895 324.500 388.406  c
324.697 387.687 324.796 386.661 324.796 385.328  c
324.796 384.349 324.692 383.531 324.484 382.875  c
324.338 382.385 324.140 382.041 323.890 381.843  c
323.724 381.708 323.515 381.640 323.265 381.640  c
322.984 381.640 322.729 381.765 322.500 382.015  c
322.197 382.369 321.992 382.924 321.882 383.679  c
321.773 384.434 321.718 385.177 321.718 385.906  c
h
328.125 388.765 m
328.322 388.765 328.489 388.835 328.625 388.976  c
328.760 389.117 328.828 389.281 328.828 389.468  c
328.828 389.666 328.760 389.833 328.625 389.968  c
328.489 390.104 328.322 390.171 328.125 390.171  c
327.927 390.171 327.760 390.104 327.625 389.968  c
327.489 389.833 327.421 389.666 327.421 389.468  c
327.421 389.270 327.489 389.104 327.625 388.968  c
327.760 388.833 327.927 388.765 328.125 388.765  c
h
330.437 390.171 m
330.437 389.937 l
330.989 389.937 331.502 389.812 331.976 389.562  c
332.450 389.312 332.908 388.877 333.351 388.257  c
333.794 387.638 334.099 386.958 334.265 386.218  c
333.599 386.645 333.000 386.859 332.468 386.859  c
331.864 386.859 331.346 386.627 330.914 386.164  c
330.481 385.700 330.265 385.078 330.265 384.296  c
330.265 383.546 330.479 382.875 330.906 382.281  c
331.427 381.572 332.109 381.218 332.953 381.218  c
333.661 381.218 334.265 381.510 334.765 382.093  c
335.380 382.812 335.687 383.703 335.687 384.765  c
335.687 385.724 335.453 386.617 334.984 387.445  c
334.515 388.273 333.864 388.958 333.031 389.500  c
332.343 389.947 331.599 390.171 330.796 390.171  c
330.437 390.171 l
h
334.375 385.750 m
334.447 385.197 334.484 384.760 334.484 384.437  c
334.484 384.020 334.414 383.575 334.273 383.101  c
334.132 382.627 333.934 382.263 333.679 382.007  c
333.424 381.752 333.135 381.625 332.812 381.625  c
332.437 381.625 332.106 381.794 331.820 382.132  c
331.533 382.471 331.390 382.974 331.390 383.640  c
331.390 384.536 331.578 385.234 331.953 385.734  c
332.234 386.099 332.572 386.281 332.968 386.281  c
333.166 386.281 333.398 386.234 333.664 386.140  c
333.929 386.046 334.166 385.916 334.375 385.750  c
h
336.937 390.171 m
336.937 389.937 l
337.489 389.937 338.002 389.812 338.476 389.562  c
338.950 389.312 339.408 388.877 339.851 388.257  c
340.294 387.638 340.599 386.958 340.765 386.218  c
340.099 386.645 339.500 386.859 338.968 386.859  c
338.364 386.859 337.846 386.627 337.414 386.164  c
336.981 385.700 336.765 385.078 336.765 384.296  c
336.765 383.546 336.979 382.875 337.406 382.281  c
337.927 381.572 338.609 381.218 339.453 381.218  c
340.161 381.218 340.765 381.510 341.265 382.093  c
341.880 382.812 342.187 383.703 342.187 384.765  c
342.187 385.724 341.953 386.617 341.484 387.445  c
341.015 388.273 340.364 388.958 339.531 389.500  c
338.843 389.947 338.099 390.171 337.296 390.171  c
336.937 390.171 l
h
340.875 385.750 m
340.947 385.197 340.984 384.760 340.984 384.437  c
340.984 384.020 340.914 383.575 340.773 383.101  c
340.632 382.627 340.434 382.263 340.179 382.007  c
339.924 381.752 339.635 381.625 339.312 381.625  c
338.937 381.625 338.606 381.794 338.320 382.132  c
338.033 382.471 337.890 382.974 337.890 383.640  c
337.890 384.536 338.078 385.234 338.453 385.734  c
338.734 386.099 339.072 386.281 339.468 386.281  c
339.666 386.281 339.898 386.234 340.164 386.140  c
340.429 386.046 340.666 385.916 340.875 385.750  c
h
343.437 390.171 m
343.437 389.937 l
343.989 389.937 344.502 389.812 344.976 389.562  c
345.450 389.312 345.908 388.877 346.351 388.257  c
346.794 387.638 347.099 386.958 347.265 386.218  c
346.599 386.645 346.000 386.859 345.468 386.859  c
344.864 386.859 344.346 386.627 343.914 386.164  c
343.481 385.700 343.265 385.078 343.265 384.296  c
343.265 383.546 343.479 382.875 343.906 382.281  c
344.427 381.572 345.109 381.218 345.953 381.218  c
346.661 381.218 347.265 381.510 347.765 382.093  c
348.380 382.812 348.687 383.703 348.687 384.765  c
348.687 385.724 348.453 386.617 347.984 387.445  c
347.515 388.273 346.864 388.958 346.031 389.500  c
345.343 389.947 344.599 390.171 343.796 390.171  c
343.437 390.171 l
h
347.375 385.750 m
347.447 385.197 347.484 384.760 347.484 384.437  c
347.484 384.020 347.414 383.575 347.273 383.101  c
347.132 382.627 346.934 382.263 346.679 382.007  c
346.424 381.752 346.135 381.625 345.812 381.625  c
345.437 381.625 345.106 381.794 344.820 382.132  c
344.533 382.471 344.390 382.974 344.390 383.640  c
344.390 384.536 344.578 385.234 344.953 385.734  c
345.234 386.099 345.572 386.281 345.968 386.281  c
346.166 386.281 346.398 386.234 346.664 386.140  c
346.929 386.046 347.166 385.916 347.375 385.750  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 366.157 m
385.994 371.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
388.531 382.234 m
390.625 381.218 l
390.828 381.218 l
390.828 388.484 l
390.828 388.963 390.849 389.263 390.890 389.382  c
390.932 389.502 391.015 389.593 391.140 389.656  c
391.265 389.718 391.520 389.755 391.906 389.765  c
391.906 390.000 l
388.671 390.000 l
388.671 389.765 l
389.078 389.755 389.341 389.718 389.460 389.656  c
389.580 389.593 389.664 389.510 389.710 389.406  c
389.757 389.302 389.781 388.994 389.781 388.484  c
389.781 383.843 l
389.781 383.208 389.760 382.802 389.718 382.625  c
389.687 382.489 389.632 382.390 389.554 382.328  c
389.476 382.265 389.380 382.234 389.265 382.234  c
389.109 382.234 388.895 382.302 388.625 382.437  c
388.531 382.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
41.0000 43.8230 m
38.4000 43.8230 l
S
newpath
41.0000 115.453 m
38.4000 115.453 l
S
newpath
41.0000 187.082 m
38.4000 187.082 l
S
newpath
41.0000 258.712 m
38.4000 258.712 l
S
newpath
41.0000 330.342 m
38.4000 330.342 l
S
newpath
41.0000 373.320 m
41.0000 8.00811 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 183 14 15 rc
newpath
6.07812 189.250 m
6.22395 189.500 6.32291 189.731 6.37500 189.945  c
6.42708 190.158 6.48437 190.578 6.54687 191.203  c
6.81250 194.328 l
7.07291 194.026 7.44270 193.541 7.92187 192.875  c
8.15104 192.552 8.43750 192.114 8.78125 191.562  c
8.98958 191.229 9.11979 190.994 9.17187 190.859  c
9.19270 190.786 9.20312 190.713 9.20312 190.640  c
9.20312 190.599 9.18750 190.562 9.15625 190.531  c
9.12500 190.500 9.04687 190.463 8.92187 190.421  c
8.79687 190.380 8.69531 190.307 8.61718 190.203  c
8.53906 190.099 8.50000 189.974 8.50000 189.828  c
8.50000 189.661 8.54947 189.523 8.64843 189.414  c
8.74739 189.304 8.87500 189.250 9.03125 189.250  c
9.21875 189.250 9.37760 189.328 9.50781 189.484  c
9.63802 189.640 9.70312 189.854 9.70312 190.125  c
9.70312 190.458 9.58854 190.841 9.35937 191.273  c
9.13020 191.705 8.69010 192.364 8.03906 193.250  c
7.38802 194.135 6.59895 195.104 5.67187 196.156  c
5.03645 196.875 4.56250 197.330 4.25000 197.523  c
3.93750 197.716 3.67187 197.812 3.45312 197.812  c
3.31770 197.812 3.20052 197.760 3.10156 197.656  c
3.00260 197.552 2.95312 197.437 2.95312 197.312  c
2.95312 197.145 3.02343 196.994 3.16406 196.859  c
3.30468 196.724 3.45312 196.656 3.60937 196.656  c
3.69270 196.656 3.76562 196.677 3.82812 196.718  c
3.85937 196.739 3.89583 196.799 3.93750 196.898  c
3.97916 196.997 4.01562 197.062 4.04687 197.093  c
4.06770 197.114 4.09375 197.125 4.12500 197.125  c
4.14583 197.125 4.18750 197.104 4.25000 197.062  c
4.48958 196.916 4.76041 196.687 5.06250 196.375  c
5.46875 195.958 5.77083 195.619 5.96875 195.359  c
5.60937 191.343 l
5.55729 190.677 5.47135 190.270 5.35156 190.125  c
5.23177 189.979 5.03125 189.906 4.75000 189.906  c
4.65625 189.906 4.49479 189.921 4.26562 189.953  c
4.21875 189.718 l
6.07812 189.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
41.0000 366.157 m
35.8000 366.157 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.4687 371.750 m
34.4687 370.770 34.6171 369.924 34.9140 369.210  c
35.2109 368.497 35.6041 367.968 36.0937 367.625  c
36.4791 367.354 36.8750 367.218 37.2812 367.218  c
37.9375 367.218 38.5260 367.552 39.0468 368.218  c
39.7031 369.052 40.0312 370.182 40.0312 371.609  c
40.0312 372.609 39.8880 373.458 39.6015 374.156  c
39.3151 374.854 38.9479 375.362 38.5000 375.679  c
38.0520 375.997 37.6250 376.156 37.2187 376.156  c
36.3958 376.156 35.7083 375.671 35.1562 374.703  c
34.6979 373.880 34.4687 372.895 34.4687 371.750  c
h
35.7187 371.906 m
35.7187 373.093 35.8645 374.062 36.1562 374.812  c
36.3958 375.437 36.7552 375.750 37.2343 375.750  c
37.4635 375.750 37.7005 375.648 37.9453 375.445  c
38.1901 375.242 38.3750 374.895 38.5000 374.406  c
38.6979 373.687 38.7968 372.661 38.7968 371.328  c
38.7968 370.349 38.6927 369.531 38.4843 368.875  c
38.3385 368.385 38.1406 368.041 37.8906 367.843  c
37.7239 367.708 37.5156 367.640 37.2656 367.640  c
36.9843 367.640 36.7291 367.765 36.5000 368.015  c
36.1979 368.369 35.9921 368.924 35.8828 369.679  c
35.7734 370.434 35.7187 371.177 35.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
41.0000 294.527 m
35.8000 294.527 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 299.750 m
25.4687 298.770 25.6171 297.924 25.9140 297.210  c
26.2109 296.497 26.6041 295.968 27.0937 295.625  c
27.4791 295.354 27.8750 295.218 28.2812 295.218  c
28.9375 295.218 29.5260 295.552 30.0468 296.218  c
30.7031 297.052 31.0312 298.182 31.0312 299.609  c
31.0312 300.609 30.8880 301.458 30.6015 302.156  c
30.3151 302.854 29.9479 303.362 29.5000 303.679  c
29.0520 303.997 28.6250 304.156 28.2187 304.156  c
27.3958 304.156 26.7083 303.671 26.1562 302.703  c
25.6979 301.880 25.4687 300.895 25.4687 299.750  c
h
26.7187 299.906 m
26.7187 301.093 26.8645 302.062 27.1562 302.812  c
27.3958 303.437 27.7552 303.750 28.2343 303.750  c
28.4635 303.750 28.7005 303.648 28.9453 303.445  c
29.1901 303.242 29.3750 302.895 29.5000 302.406  c
29.6979 301.687 29.7968 300.661 29.7968 299.328  c
29.7968 298.349 29.6927 297.531 29.4843 296.875  c
29.3385 296.385 29.1406 296.041 28.8906 295.843  c
28.7239 295.708 28.5156 295.640 28.2656 295.640  c
27.9843 295.640 27.7291 295.765 27.5000 296.015  c
27.1979 296.369 26.9921 296.924 26.8828 297.679  c
26.7734 298.434 26.7187 299.177 26.7187 299.906  c
h
33.1250 302.765 m
33.3229 302.765 33.4895 302.835 33.6250 302.976  c
33.7604 303.117 33.8281 303.281 33.8281 303.468  c
33.8281 303.666 33.7604 303.833 33.6250 303.968  c
33.4895 304.104 33.3229 304.171 33.1250 304.171  c
32.9270 304.171 32.7604 304.104 32.6250 303.968  c
32.4895 303.833 32.4218 303.666 32.4218 303.468  c
32.4218 303.270 32.4895 303.104 32.6250 302.968  c
32.7604 302.833 32.9270 302.765 33.1250 302.765  c
h
36.2812 296.234 m
38.3750 295.218 l
38.5781 295.218 l
38.5781 302.484 l
38.5781 302.963 38.5989 303.263 38.6406 303.382  c
38.6822 303.502 38.7656 303.593 38.8906 303.656  c
39.0156 303.718 39.2708 303.755 39.6562 303.765  c
39.6562 304.000 l
36.4218 304.000 l
36.4218 303.765 l
36.8281 303.755 37.0911 303.718 37.2109 303.656  c
37.3307 303.593 37.4140 303.510 37.4609 303.406  c
37.5078 303.302 37.5312 302.994 37.5312 302.484  c
37.5312 297.843 l
37.5312 297.208 37.5104 296.802 37.4687 296.625  c
37.4375 296.489 37.3828 296.390 37.3046 296.328  c
37.2265 296.265 37.1302 296.234 37.0156 296.234  c
36.8593 296.234 36.6458 296.302 36.3750 296.437  c
36.2812 296.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
41.0000 222.897 m
35.8000 222.897 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 227.750 m
25.4687 226.770 25.6171 225.924 25.9140 225.210  c
26.2109 224.497 26.6041 223.968 27.0937 223.625  c
27.4791 223.354 27.8750 223.218 28.2812 223.218  c
28.9375 223.218 29.5260 223.552 30.0468 224.218  c
30.7031 225.052 31.0312 226.182 31.0312 227.609  c
31.0312 228.609 30.8880 229.458 30.6015 230.156  c
30.3151 230.854 29.9479 231.362 29.5000 231.679  c
29.0520 231.997 28.6250 232.156 28.2187 232.156  c
27.3958 232.156 26.7083 231.671 26.1562 230.703  c
25.6979 229.880 25.4687 228.895 25.4687 227.750  c
h
26.7187 227.906 m
26.7187 229.093 26.8645 230.062 27.1562 230.812  c
27.3958 231.437 27.7552 231.750 28.2343 231.750  c
28.4635 231.750 28.7005 231.648 28.9453 231.445  c
29.1901 231.242 29.3750 230.895 29.5000 230.406  c
29.6979 229.687 29.7968 228.661 29.7968 227.328  c
29.7968 226.349 29.6927 225.531 29.4843 224.875  c
29.3385 224.385 29.1406 224.041 28.8906 223.843  c
28.7239 223.708 28.5156 223.640 28.2656 223.640  c
27.9843 223.640 27.7291 223.765 27.5000 224.015  c
27.1979 224.369 26.9921 224.924 26.8828 225.679  c
26.7734 226.434 26.7187 227.177 26.7187 227.906  c
h
33.1250 230.765 m
33.3229 230.765 33.4895 230.835 33.6250 230.976  c
33.7604 231.117 33.8281 231.281 33.8281 231.468  c
33.8281 231.666 33.7604 231.833 33.6250 231.968  c
33.4895 232.104 33.3229 232.171 33.1250 232.171  c
32.9270 232.171 32.7604 232.104 32.6250 231.968  c
32.4895 231.833 32.4218 231.666 32.4218 231.468  c
32.4218 231.270 32.4895 231.104 32.6250 230.968  c
32.7604 230.833 32.9270 230.765 33.1250 230.765  c
h
40.7031 230.343 m
40.1093 232.000 l
35.0312 232.000 l
35.0312 231.765 l
36.5208 230.401 37.5703 229.286 38.1796 228.421  c
38.7890 227.557 39.0937 226.770 39.0937 226.062  c
39.0937 225.510 38.9270 225.059 38.5937 224.710  c
38.2604 224.362 37.8593 224.187 37.3906 224.187  c
36.9739 224.187 36.5963 224.309 36.2578 224.554  c
35.9192 224.799 35.6718 225.161 35.5156 225.640  c
35.2812 225.640 l
35.3854 224.859 35.6562 224.260 36.0937 223.843  c
36.5312 223.427 37.0781 223.218 37.7343 223.218  c
38.4322 223.218 39.0156 223.442 39.4843 223.890  c
39.9531 224.338 40.1875 224.864 40.1875 225.468  c
40.1875 225.906 40.0833 226.343 39.8750 226.781  c
39.5625 227.468 39.0572 228.192 38.3593 228.953  c
37.3072 230.109 36.6458 230.807 36.3750 231.046  c
38.6250 231.046 l
39.0833 231.046 39.4036 231.028 39.5859 230.992  c
39.7682 230.955 39.9349 230.885 40.0859 230.781  c
40.2369 230.677 40.3645 230.531 40.4687 230.343  c
40.7031 230.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
41.0000 151.268 m
35.8000 151.268 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 156.750 m
25.4687 155.770 25.6171 154.924 25.9140 154.210  c
26.2109 153.497 26.6041 152.968 27.0937 152.625  c
27.4791 152.354 27.8750 152.218 28.2812 152.218  c
28.9375 152.218 29.5260 152.552 30.0468 153.218  c
30.7031 154.052 31.0312 155.182 31.0312 156.609  c
31.0312 157.609 30.8880 158.458 30.6015 159.156  c
30.3151 159.854 29.9479 160.362 29.5000 160.679  c
29.0520 160.997 28.6250 161.156 28.2187 161.156  c
27.3958 161.156 26.7083 160.671 26.1562 159.703  c
25.6979 158.880 25.4687 157.895 25.4687 156.750  c
h
26.7187 156.906 m
26.7187 158.093 26.8645 159.062 27.1562 159.812  c
27.3958 160.437 27.7552 160.750 28.2343 160.750  c
28.4635 160.750 28.7005 160.648 28.9453 160.445  c
29.1901 160.242 29.3750 159.895 29.5000 159.406  c
29.6979 158.687 29.7968 157.661 29.7968 156.328  c
29.7968 155.349 29.6927 154.531 29.4843 153.875  c
29.3385 153.385 29.1406 153.041 28.8906 152.843  c
28.7239 152.708 28.5156 152.640 28.2656 152.640  c
27.9843 152.640 27.7291 152.765 27.5000 153.015  c
27.1979 153.369 26.9921 153.924 26.8828 154.679  c
26.7734 155.434 26.7187 156.177 26.7187 156.906  c
h
33.1250 159.765 m
33.3229 159.765 33.4895 159.835 33.6250 159.976  c
33.7604 160.117 33.8281 160.281 33.8281 160.468  c
33.8281 160.666 33.7604 160.833 33.6250 160.968  c
33.4895 161.104 33.3229 161.171 33.1250 161.171  c
32.9270 161.171 32.7604 161.104 32.6250 160.968  c
32.4895 160.833 32.4218 160.666 32.4218 160.468  c
32.4218 160.270 32.4895 160.104 32.6250 159.968  c
32.7604 159.833 32.9270 159.765 33.1250 159.765  c
h
35.4062 154.031 m
35.6562 153.447 35.9687 153.000 36.3437 152.687  c
36.7187 152.375 37.1822 152.218 37.7343 152.218  c
38.4322 152.218 38.9635 152.442 39.3281 152.890  c
39.6093 153.224 39.7500 153.578 39.7500 153.953  c
39.7500 154.588 39.3541 155.239 38.5625 155.906  c
39.0937 156.114 39.4947 156.411 39.7656 156.796  c
40.0364 157.182 40.1718 157.635 40.1718 158.156  c
40.1718 158.895 39.9322 159.536 39.4531 160.078  c
38.8385 160.796 37.9479 161.156 36.7812 161.156  c
36.1979 161.156 35.8020 161.083 35.5937 160.937  c
35.3854 160.791 35.2812 160.635 35.2812 160.468  c
35.2812 160.343 35.3307 160.237 35.4296 160.148  c
35.5286 160.059 35.6458 160.015 35.7812 160.015  c
35.8854 160.015 35.9947 160.031 36.1093 160.062  c
36.1822 160.083 36.3463 160.158 36.6015 160.289  c
36.8567 160.419 37.0312 160.500 37.1250 160.531  c
37.2812 160.572 37.4479 160.593 37.6250 160.593  c
38.0520 160.593 38.4270 160.427 38.7500 160.093  c
39.0729 159.760 39.2343 159.364 39.2343 158.906  c
39.2343 158.572 39.1614 158.250 39.0156 157.937  c
38.9010 157.697 38.7760 157.515 38.6406 157.390  c
38.4635 157.224 38.2161 157.072 37.8984 156.937  c
37.5807 156.802 37.2552 156.734 36.9218 156.734  c
36.7187 156.734 l
36.7187 156.531 l
37.0520 156.489 37.3880 156.369 37.7265 156.171  c
38.0651 155.974 38.3099 155.737 38.4609 155.460  c
38.6119 155.184 38.6875 154.875 38.6875 154.531  c
38.6875 154.104 38.5520 153.755 38.2812 153.484  c
38.0104 153.213 37.6718 153.078 37.2656 153.078  c
36.6093 153.078 36.0625 153.427 35.6250 154.125  c
35.4062 154.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
41.0000 79.6380 m
35.8000 79.6380 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 84.7500 m
25.4687 83.7708 25.6171 82.9244 25.9140 82.2109  c
26.2109 81.4974 26.6041 80.9687 27.0937 80.6250  c
27.4791 80.3541 27.8750 80.2187 28.2812 80.2187  c
28.9375 80.2187 29.5260 80.5520 30.0468 81.2187  c
30.7031 82.0520 31.0312 83.1822 31.0312 84.6093  c
31.0312 85.6093 30.8880 86.4583 30.6015 87.1562  c
30.3151 87.8541 29.9479 88.3619 29.5000 88.6796  c
29.0520 88.9974 28.6250 89.1562 28.2187 89.1562  c
27.3958 89.1562 26.7083 88.6718 26.1562 87.7031  c
25.6979 86.8802 25.4687 85.8958 25.4687 84.7500  c
h
26.7187 84.9062 m
26.7187 86.0937 26.8645 87.0625 27.1562 87.8125  c
27.3958 88.4375 27.7552 88.7500 28.2343 88.7500  c
28.4635 88.7500 28.7005 88.6484 28.9453 88.4453  c
29.1901 88.2421 29.3750 87.8958 29.5000 87.4062  c
29.6979 86.6875 29.7968 85.6614 29.7968 84.3281  c
29.7968 83.3489 29.6927 82.5312 29.4843 81.8750  c
29.3385 81.3854 29.1406 81.0416 28.8906 80.8437  c
28.7239 80.7083 28.5156 80.6406 28.2656 80.6406  c
27.9843 80.6406 27.7291 80.7656 27.5000 81.0156  c
27.1979 81.3697 26.9921 81.9244 26.8828 82.6796  c
26.7734 83.4349 26.7187 84.1770 26.7187 84.9062  c
h
33.1250 87.7656 m
33.3229 87.7656 33.4895 87.8359 33.6250 87.9765  c
33.7604 88.1171 33.8281 88.2812 33.8281 88.4687  c
33.8281 88.6666 33.7604 88.8333 33.6250 88.9687  c
33.4895 89.1041 33.3229 89.1718 33.1250 89.1718  c
32.9270 89.1718 32.7604 89.1041 32.6250 88.9687  c
32.4895 88.8333 32.4218 88.6666 32.4218 88.4687  c
32.4218 88.2708 32.4895 88.1041 32.6250 87.9687  c
32.7604 87.8333 32.9270 87.7656 33.1250 87.7656  c
h
40.7968 85.8281 m
40.7968 86.7343 l
39.6406 86.7343 l
39.6406 89.0000 l
38.5937 89.0000 l
38.5937 86.7343 l
34.9531 86.7343 l
34.9531 85.9218 l
38.9531 80.2187 l
39.6406 80.2187 l
39.6406 85.8281 l
40.7968 85.8281 l
h
38.5937 85.8281 m
38.5937 81.5468 l
35.5781 85.8281 l
38.5937 85.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
41.0000 8.00811 m
35.8000 8.00811 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 13.7500 m
25.4687 12.7708 25.6171 11.9244 25.9140 11.2109  c
26.2109 10.4974 26.6041 9.96875 27.0937 9.62500  c
27.4791 9.35416 27.8750 9.21875 28.2812 9.21875  c
28.9375 9.21875 29.5260 9.55208 30.0468 10.2187  c
30.7031 11.0520 31.0312 12.1822 31.0312 13.6093  c
31.0312 14.6093 30.8880 15.4583 30.6015 16.1562  c
30.3151 16.8541 29.9479 17.3619 29.5000 17.6796  c
29.0520 17.9974 28.6250 18.1562 28.2187 18.1562  c
27.3958 18.1562 26.7083 17.6718 26.1562 16.7031  c
25.6979 15.8802 25.4687 14.8958 25.4687 13.7500  c
h
26.7187 13.9062 m
26.7187 15.0937 26.8645 16.0625 27.1562 16.8125  c
27.3958 17.4375 27.7552 17.7500 28.2343 17.7500  c
28.4635 17.7500 28.7005 17.6484 28.9453 17.4453  c
29.1901 17.2421 29.3750 16.8958 29.5000 16.4062  c
29.6979 15.6875 29.7968 14.6614 29.7968 13.3281  c
29.7968 12.3489 29.6927 11.5312 29.4843 10.8750  c
29.3385 10.3854 29.1406 10.0416 28.8906 9.84375  c
28.7239 9.70833 28.5156 9.64062 28.2656 9.64062  c
27.9843 9.64062 27.7291 9.76562 27.5000 10.0156  c
27.1979 10.3697 26.9921 10.9244 26.8828 11.6796  c
26.7734 12.4349 26.7187 13.1770 26.7187 13.9062  c
h
33.1250 16.7656 m
33.3229 16.7656 33.4895 16.8359 33.6250 16.9765  c
33.7604 17.1171 33.8281 17.2812 33.8281 17.4687  c
33.8281 17.6666 33.7604 17.8333 33.6250 17.9687  c
33.4895 18.1041 33.3229 18.1718 33.1250 18.1718  c
32.9270 18.1718 32.7604 18.1041 32.6250 17.9687  c
32.4895 17.8333 32.4218 17.6666 32.4218 17.4687  c
32.4218 17.2708 32.4895 17.1041 32.6250 16.9687  c
32.7604 16.8333 32.9270 16.7656 33.1250 16.7656  c
h
40.3906 9.39062 m
39.8906 10.4687 l
37.3125 10.4687 l
36.7500 11.6250 l
37.8645 11.7916 38.7500 12.2083 39.4062 12.8750  c
39.9687 13.4479 40.2500 14.1250 40.2500 14.9062  c
40.2500 15.3645 40.1588 15.7864 39.9765 16.1718  c
39.7942 16.5572 39.5625 16.8854 39.2812 17.1562  c
39.0000 17.4270 38.6875 17.6406 38.3437 17.7968  c
37.8645 18.0364 37.3645 18.1562 36.8437 18.1562  c
36.3333 18.1562 35.9609 18.0677 35.7265 17.8906  c
35.4921 17.7135 35.3750 17.5208 35.3750 17.3125  c
35.3750 17.1875 35.4244 17.0807 35.5234 16.9921  c
35.6224 16.9036 35.7447 16.8593 35.8906 16.8593  c
35.9947 16.8593 36.0885 16.8750 36.1718 16.9062  c
36.2552 16.9375 36.3958 17.0260 36.5937 17.1718  c
36.9166 17.3906 37.2395 17.5000 37.5625 17.5000  c
38.0625 17.5000 38.4974 17.3125 38.8671 16.9375  c
39.2369 16.5625 39.4218 16.1041 39.4218 15.5625  c
39.4218 15.0416 39.2552 14.5572 38.9218 14.1093  c
38.5885 13.6614 38.1302 13.3125 37.5468 13.0625  c
37.0781 12.8750 36.4479 12.7656 35.6562 12.7343  c
37.3125 9.39062 l
40.3906 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
